{
    "version": "https://jsonfeed.org/version/1",
    "title": "",
    "subtitle": "We are the dreamers. We make it happen 'cause we can see it.",
    "icon": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/images/favicon.ico",
    "description": "謝謝你來，謝謝你還在",
    "home_page_url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io",
    "items": [
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/HPC/MPI/Practise-%E6%89%BE%E8%B3%AA%E6%95%B8-%E5%96%AE%E6%A9%9F%E7%89%88%E7%A8%8B%E5%BC%8F-vs-%E5%B9%B3%E8%A1%8C%E7%89%88%E7%A8%8B%E5%BC%8F/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/HPC/MPI/Practise-%E6%89%BE%E8%B3%AA%E6%95%B8-%E5%96%AE%E6%A9%9F%E7%89%88%E7%A8%8B%E5%BC%8F-vs-%E5%B9%B3%E8%A1%8C%E7%89%88%E7%A8%8B%E5%BC%8F/",
            "title": "Practise 找質數 - 單機版程式 vs. 平行版程式",
            "date_published": "2023-12-13T15:57:58.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"ChienI Kao\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\" data-background-image=\"https://chienikao.github.io/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\">ChienI Kao</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div><div class=\"item\" title=\"JHTNT\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\" data-background-image=\"https://i.imgur.com/cBOtjyB.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\">JHTNT</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div></div></p>\n<h1 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h1>\n<p>利用 The Sieve of Eratosthenes 演算法找出質數</p>\n<h1 id=\"單機版程式\"><a class=\"anchor\" href=\"#單機版程式\">#</a> 單機版程式</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ALLNUM</span> <span class=\"token expression\"><span class=\"token number\">100000000</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> arr<span class=\"token punctuation\">[</span>ALLNUM <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">long</span> start <span class=\"token operator\">=</span> <span class=\"token function\">clock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> ALLNUM<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    k <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">*</span> k <span class=\"token operator\">></span> ALLNUM<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">int</span> mark <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>mark <span class=\"token operator\">&lt;=</span> ALLNUM<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      arr<span class=\"token punctuation\">[</span>mark<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      mark <span class=\"token operator\">+=</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token keyword\">long</span> end <span class=\"token operator\">=</span> <span class=\"token function\">clock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> ALLNUM<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      ans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\033[36mTotal: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (sec)\\033[0m\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>       <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"平行版程式\"><a class=\"anchor\" href=\"#平行版程式\">#</a> 平行版程式</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mpi.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ALLNUM</span> <span class=\"token expression\"><span class=\"token number\">100000000</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> arr<span class=\"token punctuation\">[</span>ALLNUM <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">MPI_Init</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">int</span> world_size<span class=\"token punctuation\">,</span> world_rank<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">MPI_Comm_size</span><span class=\"token punctuation\">(</span>MPI_COMM_WORLD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>world_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function\">MPI_Comm_rank</span><span class=\"token punctuation\">(</span>MPI_COMM_WORLD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>world_rank<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> ALLNUM <span class=\"token operator\">/</span> world_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token keyword\">int</span> from <span class=\"token operator\">=</span> world_rank <span class=\"token operator\">*</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token keyword\">int</span> to <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">(</span>world_rank <span class=\"token operator\">==</span> world_size <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>world_rank <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> size <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> ALLNUM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">double</span> start <span class=\"token operator\">=</span> <span class=\"token function\">MPI_Wtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> from<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> to<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> i <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">int</span> newK <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">MPI_Reduce</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>newK<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>k<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> MPI_INT<span class=\"token punctuation\">,</span> MPI_MIN<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MPI_COMM_WORLD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token function\">MPI_Bcast</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>k<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> MPI_INT<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MPI_COMM_WORLD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">*</span> k <span class=\"token operator\">></span> ALLNUM<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">&lt;</span> to<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token keyword\">int</span> mark <span class=\"token operator\">=</span> from<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>mark <span class=\"token operator\">%</span> k <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> mark <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        mark <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mark <span class=\"token operator\">==</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        mark <span class=\"token operator\">+=</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>mark <span class=\"token operator\">&lt;=</span> to<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        arr<span class=\"token punctuation\">[</span>mark<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        mark <span class=\"token operator\">+=</span> k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  <span class=\"token comment\">// marking</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span>  <span class=\"token comment\">// find K</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> from<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> to<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token function\">MPI_Reduce</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>count<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ans<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> MPI_INT<span class=\"token punctuation\">,</span> MPI_SUM<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MPI_COMM_WORLD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token keyword\">double</span> end <span class=\"token operator\">=</span> <span class=\"token function\">MPI_Wtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token function\">MPI_Finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>world_rank <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> ans <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\033[36mTotal: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (sec)\\033[0m\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "資訊工程",
                "HPC",
                "MPI"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/HPC/MPI/Practise-%E9%9B%BB%E8%B7%AF%E5%9C%96-%E5%96%AE%E6%A9%9F%E7%89%88%E7%A8%8B%E5%BC%8F-vs-%E5%B9%B3%E8%A1%8C%E7%89%88%E7%A8%8B%E5%BC%8F/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/HPC/MPI/Practise-%E9%9B%BB%E8%B7%AF%E5%9C%96-%E5%96%AE%E6%A9%9F%E7%89%88%E7%A8%8B%E5%BC%8F-vs-%E5%B9%B3%E8%A1%8C%E7%89%88%E7%A8%8B%E5%BC%8F/",
            "title": "Practise 電路圖 - 單機版程式 vs. 平行版程式",
            "date_published": "2023-12-13T15:51:59.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"ChienI Kao\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\" data-background-image=\"https://chienikao.github.io/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\">ChienI Kao</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div><div class=\"item\" title=\"JHTNT\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\" data-background-image=\"https://i.imgur.com/cBOtjyB.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\">JHTNT</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div></div></p>\n<h1 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h1>\n<p><img data-src=\"https://i.imgur.com/zsUeyjk.png\" alt=\"Imgur\" /></p>\n<h1 id=\"單機版程式\"><a class=\"anchor\" href=\"#單機版程式\">#</a> 單機版程式</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">circuit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>in<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>              <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>              <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>              <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>              <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">long</span> start <span class=\"token operator\">=</span> <span class=\"token function\">clock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token generic-function\"><span class=\"token function\">i</span> <span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span> <span class=\"token number\">65536</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">int</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            in<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">>></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">circuit</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Without Parallel Ans: \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> in<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">long</span> end <span class=\"token operator\">=</span> <span class=\"token function\">clock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> count <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\033[36mTotal: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000.0</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (sec)\\033[0m\\n\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"平行版程式\"><a class=\"anchor\" href=\"#平行版程式\">#</a> 平行版程式</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mpi.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">circuit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>in<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>              <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>              <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>              <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>              <span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token operator\">~</span>in<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">MPI_Init</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">int</span> world_size<span class=\"token punctuation\">,</span> world_rank<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">MPI_Comm_size</span><span class=\"token punctuation\">(</span>MPI_COMM_WORLD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>world_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">MPI_Comm_rank</span><span class=\"token punctuation\">(</span>MPI_COMM_WORLD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>world_rank<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">65536</span> <span class=\"token operator\">/</span> world_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">int</span> from <span class=\"token operator\">=</span> world_rank <span class=\"token operator\">*</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">int</span> to <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>world_rank <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">double</span> start <span class=\"token operator\">=</span> <span class=\"token function\">MPI_Wtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> from<span class=\"token punctuation\">;</span> <span class=\"token generic-function\"><span class=\"token function\">i</span> <span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span> to<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">int</span> in<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            in<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">>></span></span></span> <span class=\"token punctuation\">(</span><span class=\"token number\">15</span> <span class=\"token operator\">-</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">circuit</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"From rank \"</span> <span class=\"token operator\">&lt;&lt;</span> world_rank <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" out of \"</span> <span class=\"token operator\">&lt;&lt;</span> world_size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" processors: \"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                cout <span class=\"token operator\">&lt;&lt;</span> in<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            cout <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>world_rank <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">int</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> world_size<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token function\">MPI_Recv</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tmp<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> MPI_INT<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MPI_COMM_WORLD<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                     MPI_STATUS_IGNORE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            count <span class=\"token operator\">+=</span> tmp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token function\">MPI_Send</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>count<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> MPI_INT<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MPI_COMM_WORLD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">double</span> end <span class=\"token operator\">=</span> <span class=\"token function\">MPI_Wtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token function\">MPI_Finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>world_rank <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> count <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\033[36mTotal: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (sec)\\033[0m\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "資訊工程",
                "HPC",
                "MPI"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/HPC/MPI/%E5%AE%89%E8%A3%9D-Microsoft-MPI-with-vscode-in-Windows/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/HPC/MPI/%E5%AE%89%E8%A3%9D-Microsoft-MPI-with-vscode-in-Windows/",
            "title": "安裝 Microsoft MPI with vscode in Windows",
            "date_published": "2023-12-13T13:49:08.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"ChienI Kao\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\" data-background-image=\"https://chienikao.github.io/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\">ChienI Kao</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div><div class=\"item\" title=\"JHTNT\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\" data-background-image=\"https://i.imgur.com/cBOtjyB.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\">JHTNT</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div></div></p>\n<h1 id=\"安裝-microsoft-mpi\"><a class=\"anchor\" href=\"#安裝-microsoft-mpi\">#</a> 安裝 Microsoft MPI</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLXR3L21lc3NhZ2UtcGFzc2luZy1pbnRlcmZhY2UvbWljcm9zb2Z0LW1waQ==\">Microsoft MPI 官方網站</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS9lbi11cy9kb3dubG9hZC9kZXRhaWxzLmFzcHg/aWQ9MTA1Mjg5\">下載 Microsoft MPI</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLXR3L2FyY2hpdmUvYmxvZ3Mvd2luZG93c2hwYy9ob3ctdG8tY29tcGlsZS1hbmQtcnVuLWEtc2ltcGxlLW1zLW1waS1wcm9ncmFt\">官方參考文件</span></li>\n</ul>\n<h2 id=\"with-vscode-in-windows\"><a class=\"anchor\" href=\"#with-vscode-in-windows\">#</a> With vscode in Windows</h2>\n<ol>\n<li>點擊官網連結，並點擊 <strong>MS-MPI 下載</strong>，點擊 <strong>MS-MPI v10.1.3</strong>，導至下載畫面，點擊 <strong>Download</strong>，<strong>選取兩個 File</strong>，兩個都要下載喔～～<br />\n<img data-src=\"https://i.imgur.com/8xFF2BO.png\" alt=\"Imgur\" width=\"500px\" /><br />\n<img data-src=\"https://i.imgur.com/l9tHOvA.png\" alt=\"Imgur\" width=\"500px\" /><br />\n<img data-src=\"https://i.imgur.com/urHeIjn.png\" alt=\"Imgur\" width=\"500px\" /><br />\n<img data-src=\"https://i.imgur.com/Chss6RK.png\" alt=\"Imgur\" width=\"500px\" /></li>\n<li>將下載的兩個檔案點開執行<br />\n<img data-src=\"https://i.imgur.com/39YX72p.png\" alt=\"Imgur\" width=\"500px\" /></li>\n<li>打開 cmd 輸入指令  <code>set MSMPI</code> ，會看到 MPI 設定的環境變數，表示安裝有成功<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"C:\\Users\\user> \"></td><td><pre><span class=\"token builtin class-name\">set</span> MSMPI</pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre><span class=\"token assign-left variable\">MSMPI_BENCHMARKS</span><span class=\"token operator\">=</span>C:<span class=\"token punctuation\">\\</span>Program Files<span class=\"token punctuation\">\\</span>Microsoft MPI<span class=\"token punctuation\">\\</span>Benchmarks<span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre><span class=\"token assign-left variable\">MSMPI_BIN</span><span class=\"token operator\">=</span>C:<span class=\"token punctuation\">\\</span>Program Files<span class=\"token punctuation\">\\</span>Microsoft MPI<span class=\"token punctuation\">\\</span>Bin<span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre><span class=\"token assign-left variable\">MSMPI_INC</span><span class=\"token operator\">=</span>C:<span class=\"token punctuation\">\\</span>Program Files <span class=\"token punctuation\">(</span>x86<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>Microsoft SDKs<span class=\"token punctuation\">\\</span>MPI<span class=\"token punctuation\">\\</span>Include<span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"\"></td><td><pre><span class=\"token assign-left variable\">MSMPI_LIB32</span><span class=\"token operator\">=</span>C:<span class=\"token punctuation\">\\</span>Program Files <span class=\"token punctuation\">(</span>x86<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>Microsoft SDKs<span class=\"token punctuation\">\\</span>MPI<span class=\"token punctuation\">\\</span>Lib<span class=\"token punctuation\">\\</span>x86<span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"6\"></td><td data-command=\"\"></td><td><pre><span class=\"token assign-left variable\">MSMPI_LIB64</span><span class=\"token operator\">=</span>C:<span class=\"token punctuation\">\\</span>Program Files <span class=\"token punctuation\">(</span>x86<span class=\"token punctuation\">)</span><span class=\"token punctuation\">\\</span>Microsoft SDKs<span class=\"token punctuation\">\\</span>MPI<span class=\"token punctuation\">\\</span>Lib<span class=\"token punctuation\">\\</span>x64<span class=\"token punctuation\">\\</span></pre></td></tr></table></figure></li>\n<li>接下來打開 vscode 寫下測試程式，這時  <code>#include &lt;mpi.h&gt;</code>  可能會有紅底線表示他找不到此 header 檔<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>hello.c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mpi.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// Initialize the MPI environment</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">MPI_Init</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>argc<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// Get the number of processes</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> world_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">MPI_Comm_size</span><span class=\"token punctuation\">(</span>MPI_COMM_WORLD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>world_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// Get the rank of the process</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">int</span> world_rank<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">MPI_Comm_rank</span><span class=\"token punctuation\">(</span>MPI_COMM_WORLD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>world_rank<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// Get the name of the processor</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">char</span> processor_name<span class=\"token punctuation\">[</span>MPI_MAX_PROCESSOR_NAME<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">int</span> name_len<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">MPI_Get_processor_name</span><span class=\"token punctuation\">(</span>processor_name<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>name_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// Print off a hello world message</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world from processor %s, rank %d out of %d processors\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          processor_name<span class=\"token punctuation\">,</span> world_rank<span class=\"token punctuation\">,</span> world_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// Finalize the MPI environment.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">MPI_Finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>在  <code>.vscode</code>  底下的  <code>c_cpp_properties.json</code>  把 MPI 的 Include 加入裡面，也就是  <code>MSMPI_INC</code>  此環境變數後面的路徑，大概會長底下這樣，可以注意有高亮的那幾行 (7, 14)，這樣紅底線應該就沒有了<br />\n<img data-src=\"https://i.imgur.com/DDz4yF4.png\" alt=\"Imgur\" /><figure class=\"highlight json\"><figcaption data-lang=\"JSON\"><span>c_cpp_properties.json</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>       <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>           <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Win32\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>           <span class=\"token property\">\"includePath\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>               <span class=\"token string\">\"$&#123;workspaceFolder&#125;/**\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr class=\"marked\"><td data-num=\"7\"></td><td><pre>               <span class=\"token string\">\"C:\\\\Program Files (x86)\\\\Microsoft SDKs\\\\MPI\\\\Include\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>           <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           <span class=\"token property\">\"defines\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>               <span class=\"token string\">\"_DEBUG\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>               <span class=\"token string\">\"UNICODE\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>               <span class=\"token string\">\"_UNICODE\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>           <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr class=\"marked\"><td data-num=\"14\"></td><td><pre>           <span class=\"token property\">\"compilerPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C:\\\\mingw64\\\\bin\\\\gcc.exe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>           <span class=\"token property\">\"cStandard\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c11\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>           <span class=\"token property\">\"cppStandard\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gnu++14\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>           <span class=\"token property\">\"intelliSenseMode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"windows-gcc-x86\"</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>接下來就可以來編譯執行程式了\n<ul>\n<li><strong>編譯指令</strong><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gcc hello.c <span class=\"token parameter variable\">-o</span> hello <span class=\"token parameter variable\">-I</span> <span class=\"token variable\">$MSMPI_INC</span> <span class=\"token parameter variable\">-L</span> <span class=\"token variable\">$MSMPI_LIB64</span> <span class=\"token parameter variable\">-l</span> msmpi</pre></td></tr></table></figure><ul>\n<li><code>$MSMPI_INC</code>  環境變數如果找不到，可以寫絕對路徑，可以參考第三步所印出的東西</li>\n<li><code>$MSMPI_LIB64</code>  環境變數如果找不到，可以寫絕對路徑，可以參考第三步所印出的東西</li>\n<li>我在編譯的時候還有一件很特別的事，我雖然找的到 library 的路徑，但是沒有讀到  <code>msmpi.lib</code> ，目前方法是把  <code>msmpi.lib</code>  直接放在我的檔案底下，然後在引入 library 的時候用相對路徑指定當前位置，如:  <code>-L &quot;.&quot;</code> ，然後就有找到了</li>\n</ul>\n</li>\n<li><strong>執行指令</strong><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mpiexec <span class=\"token parameter variable\">-n</span> <span class=\"token number\">3</span> hello.exe</pre></td></tr></table></figure><ul>\n<li>指令裡面的 3 表示有三個 processes 處理來這個程式</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"debug\"><a class=\"anchor\" href=\"#debug\">#</a> Debug</h1>\n<ol>\n<li>檢查 gcc 版本，建議下載底下提供網址的版本</li>\n</ol>\n<ul>\n<li>可以利用  <code>gcc --version</code>  檢查 gcc 版本，不要太舊，可能會有 library 或 include 不相容</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aW5saWJzLmNvbS8=\">WinLibs standalone build of GCC and MinGW-w64 for Windows</span></li>\n<li>我是下載這個版本供參考<br />\n<img data-src=\"https://i.imgur.com/f53hcNF.png\" alt=\"Imgur\" /></li>\n<li>下載後解開壓縮檔，在系統環境變數上設定路徑，路徑要到資料夾內的  <code>bin</code></li>\n<li>Terminal 重新開啟後，再次測試  <code>gcc --version</code>  查看版本<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td data-command=\"C:\\Users\\user> \"></td><td><pre>gcc <span class=\"token parameter variable\">--version</span></pre></td></tr><tr><td data-num=\"2\"></td><td data-command=\"\"></td><td><pre>gcc.exe <span class=\"token punctuation\">(</span>MinGW-W64 x86_64-ucrt-posix-seh, built by Brecht Sanders<span class=\"token punctuation\">)</span> <span class=\"token number\">12.3</span>.0</pre></td></tr><tr><td data-num=\"3\"></td><td data-command=\"\"></td><td><pre>Copyright <span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span> <span class=\"token number\">2022</span> Free Software Foundation, Inc.</pre></td></tr><tr><td data-num=\"4\"></td><td data-command=\"\"></td><td><pre>This is <span class=\"token function\">free</span> software<span class=\"token punctuation\">;</span> see the <span class=\"token builtin class-name\">source</span> <span class=\"token keyword\">for</span> copying conditions.  There is NO</pre></td></tr><tr><td data-num=\"5\"></td><td data-command=\"\"></td><td><pre>warranty<span class=\"token punctuation\">;</span> not even <span class=\"token keyword\">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</pre></td></tr></table></figure></li>\n<li><strong>Note:</strong> 如果有留之前的 gcc 且環境變數路徑設定在新版的 gcc 之前， <code>gcc --version</code>  可能還是會抓到舊的，可以調整一下順序</li>\n</ul>\n<h1 id=\"test-mpi-code\"><a class=\"anchor\" href=\"#test-mpi-code\">#</a> Test MPI code</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>hello.c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mpi.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// Initialize the MPI environment</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">MPI_Init</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>argc<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// Get the number of processes</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> world_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">MPI_Comm_size</span><span class=\"token punctuation\">(</span>MPI_COMM_WORLD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>world_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// Get the rank of the process</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">int</span> world_rank<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">MPI_Comm_rank</span><span class=\"token punctuation\">(</span>MPI_COMM_WORLD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>world_rank<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// Get the name of the processor</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">char</span> processor_name<span class=\"token punctuation\">[</span>MPI_MAX_PROCESSOR_NAME<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">int</span> name_len<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">MPI_Get_processor_name</span><span class=\"token punctuation\">(</span>processor_name<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>name_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// Print off a hello world message</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world from processor %s, rank %d out of %d processors\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>           processor_name<span class=\"token punctuation\">,</span> world_rank<span class=\"token punctuation\">,</span> world_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// Finalize the MPI environment.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">MPI_Finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "資訊工程",
                "HPC",
                "MPI"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Information-Security/Website/What-is-Proxy-Server/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Information-Security/Website/What-is-Proxy-Server/",
            "title": "What is Proxy Server?",
            "date_published": "2023-12-13T07:10:44.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"ChienI Kao\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\" data-background-image=\"https://chienikao.github.io/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\">ChienI Kao</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div><div class=\"item\" title=\"JHTNT\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\" data-background-image=\"https://i.imgur.com/cBOtjyB.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\">JHTNT</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div></div></p>\n",
            "tags": [
                "資訊工程",
                "Information-Security",
                "Website"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/HPC/MPI/What-is-MPI/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/HPC/MPI/What-is-MPI/",
            "title": "What is MPI?",
            "date_published": "2023-12-13T07:02:33.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"ChienI Kao\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\" data-background-image=\"https://chienikao.github.io/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\">ChienI Kao</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div><div class=\"item\" title=\"JHTNT\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\" data-background-image=\"https://i.imgur.com/cBOtjyB.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\">JHTNT</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div></div></p>\n<div class=\"note info\">\n<p>訊息傳遞介面（英語：Message Passing Interface，縮寫 MPI）是一個平行計算的應用程式接口（API），常在超級電腦、電腦叢集等<strong>非共享記憶體</strong>環境程序設計。</p>\n</div>\n<h2 id=\"mpi-vs-mp\"><a class=\"anchor\" href=\"#mpi-vs-mp\">#</a> MPI vs. MP</h2>\n<ul>\n<li>MP: 多執行續的平行，用 1 顆 CPU 多核心進行平行。</li>\n<li>MPI: 多程序的平行，做到跨節點、跨 CPU 的平行</li>\n</ul>\n<h2 id=\"mpi-語法\"><a class=\"anchor\" href=\"#mpi-語法\">#</a> MPI 語法</h2>\n<ul>\n<li><code>MPI_Init()</code> : Initialize the MPI enviroment</li>\n<li><code>MPI_Comm_size(MPI_COMM_WORLD, &amp;world_size)</code> : Get the number of processes</li>\n<li><code>MPI_Comm_rank(MPI_COMM_WORLD, &amp;process_rank)</code> : Get the rank of process</li>\n<li><code>MPI_Finalize()</code> : Finalize the MPI enviroment</li>\n<li><code>MPI_Wtime()</code> : process time， return type is double</li>\n<li><code>MPI_Reduce(&amp;send, &amp;recv, count, dataType, MPI_Op, root, MPI_COMM_WORLD)</code> : 把 send 的值經過 MPI_Op 的運算處理過後丟到 recv 中，變成 recv 的新值</li>\n<li><code>MPI_Bcast(&amp;bcast, count, dataType, root, MPI_COMM_WORLD)</code> : 把 root 的 bcast 廣播給大家</li>\n<li><code>MPI_Recv(&amp;value, count, dataType, source, tag, MPI_COMM_WORLD, MPI_STATUS_IGNORE)</code> : 將 source 的直接收</li>\n<li><code>MPI_Send(&amp;value, count, dataType, dest, tag, MPI_COMM_WORLD)</code> : 將值發送給 dest</li>\n<li><code>MPI_ALLreduce</code> : 包括 MPI_Reduce 和 MPI_Bcast</li>\n</ul>\n<h3 id=\"mpi_op\"><a class=\"anchor\" href=\"#mpi_op\">#</a> MPI_Op</h3>\n<ul>\n<li><code>MPI_MIN</code> : 找最小值</li>\n<li><code>MPI_SUM</code> : 計算總值</li>\n</ul>\n<h2 id=\"mpi-hello-world-code\"><a class=\"anchor\" href=\"#mpi-hello-world-code\">#</a> MPI Hello World Code</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>hello.c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mpi.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// Initialize the MPI environment</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">MPI_Init</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>argc<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// Get the number of processes</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> world_size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">MPI_Comm_size</span><span class=\"token punctuation\">(</span>MPI_COMM_WORLD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>world_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// Get the rank of the process</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">int</span> world_rank<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">MPI_Comm_rank</span><span class=\"token punctuation\">(</span>MPI_COMM_WORLD<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>world_rank<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// Get the name of the processor</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">char</span> processor_name<span class=\"token punctuation\">[</span>MPI_MAX_PROCESSOR_NAME<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">int</span> name_len<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">MPI_Get_processor_name</span><span class=\"token punctuation\">(</span>processor_name<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>name_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// Print off a hello world message</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world from processor %s, rank %d out of %d processors\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>           processor_name<span class=\"token punctuation\">,</span> world_rank<span class=\"token punctuation\">,</span> world_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// Finalize the MPI environment.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token function\">MPI_Finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "資訊工程",
                "HPC",
                "MPI"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/HPC/Nonogram-Puzzles-Solving/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/HPC/Nonogram-Puzzles-Solving/",
            "title": "Nonogram Puzzles Solving",
            "date_published": "2023-12-13T06:17:27.000Z",
            "content_html": "<h1 id=\"nonogram-puzzle-規則\"><a class=\"anchor\" href=\"#nonogram-puzzle-規則\">#</a> Nonogram Puzzle 規則</h1>\n<ol>\n<li>Input 1000 nonogram puzzles with size 25 * 25</li>\n<li>symbol &quot;$&quot; before the puzzles number</li>\n<li>50 lines of clues (puzzles description)\n<ul>\n<li>The former 25 are clues at the top end from up to down</li>\n<li>The former 25 are clues at thr left end from left to right</li>\n</ul>\n</li>\n<li>&quot;0&quot; 表示填空白，&quot;1&quot; 表示填黑色</li>\n<li>All the numbers of clues and solutions are separated by TAB</li>\n<li>Each program solves these puzzles in order (cannot skip)</li>\n<li>For the puzzles with multiple solutions, the program only needs to generate 1 solution</li>\n<li>All of the programs will run on the same machine, use single CPU core.</li>\n</ol>\n<h1 id=\"solving\"><a class=\"anchor\" href=\"#solving\">#</a> Solving</h1>\n<div class=\"note info\">\n<p>一個 NP 完全問題 (NP - complete problems)</p>\n</div>\n<h2 id=\"a-three-stage-nonogram-solving-framework\"><a class=\"anchor\" href=\"#a-three-stage-nonogram-solving-framework\">#</a> A Three-Stage Nonogram Solving Framework</h2>\n<h3 id=\"propagation\"><a class=\"anchor\" href=\"#propagation\">#</a> <strong>Propagation</strong></h3>\n<p>Contionuously applies line solving to all rows and colums until no more pixels can be painted.<br />\n 解一行或一列，看填 0 或填 1 有沒有解，如果有解再將相關的行和列再次丟入。</p>\n<ol>\n<li>確認是否有解\n<ul>\n<li><code>Fix()</code> : 看 paint 有沒有結束，且有沒有解</li>\n<li><code>Fix0()</code> : 看 paint 填 0 可不可以</li>\n<li><code>Fix1()</code> : 看 paint 填 1 可不可以</li>\n</ul>\n</li>\n<li>將有解確定盤面有解的盤面試著填點\n<ul>\n<li><code>Paint()</code> : 看是否 paint 結束</li>\n<li><code>Paint'()</code> : 需要畫哪個盤面， paint0, paint1, merge</li>\n<li><code>Paint0()</code> : 填入 0</li>\n<li><code>Paint1()</code> : 填入 1</li>\n<li><code>Merge()</code> : 看填入 0 或填入 1 有沒有相同的</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"fully-probing\"><a class=\"anchor\" href=\"#fully-probing\">#</a> <strong>Fully Probing</strong></h3>\n<h3 id=\"backtracking\"><a class=\"anchor\" href=\"#backtracking\">#</a> <strong>Backtracking</strong></h3>\n",
            "tags": [
                "資訊工程",
                "HPC",
                "stand-alone"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10041-Vito-s-Family/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10041-Vito-s-Family/",
            "title": "10041 - Vito's Family",
            "date_published": "2023-12-11T10:25:15.000Z",
            "content_html": "<p>🌕🌗🌑🌑🌑</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTAwL3AxMDA0MS5wZGY=\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhw\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTAwNDE=\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>The world-known gangster Vito Deadstone is moving to New York. He has a very big family there, all of them living in Lamafia Avenue. Since he will visit all his relatives very often, he is trying to find a house close to them.</p>\n<p>Vito wants to minimize the total distance to all of them and has blackmailed you to write a program that solves his problem.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>The input consists of several test cases. The first line contains the number of test cases.</p>\n<p>For each test case you will be given the integer number of relatives  <code>r (0 &lt; r &lt; 500)</code>  and the street numbers (also integers)  <code>s1, s2, . . . , si , . . . , sr</code>  where they live  <code>(0 &lt; si &lt; 30000 )</code> . Note that several relatives could live in the same street number.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>For each test case your program must write the minimal sum of distances from the optimal Vito’s house to each one of his relatives. The distance between two street numbers  <code>si</code>  and  <code>sj</code>  is  <code>dij = | si − sj |</code> .</p>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>2<br />\n2 2 4<br />\n3 2 4 6</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>2<br />\n4</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> line <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> line<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">int</span> family <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>family<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> family<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>family <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> family<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                ans <span class=\"token operator\">+=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10038-Jolly-Jumpers/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10038-Jolly-Jumpers/",
            "title": "10038 - Jolly Jumpers",
            "date_published": "2023-12-11T10:07:36.000Z",
            "content_html": "<p>🌕🌑🌑🌑🌑</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTAwL3AxMDAzOC5wZGY=\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhw\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTAwMzg=\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>A sequence of n &gt; 0 integers is called a jolly jumper if the absolute values of the difference between successive elements take on all the values 1 through n − 1. For instance,</p>\n<p>1 4 2 3</p>\n<p>is a jolly jumper, because the absolutes differences are 3, 2, and 1 respectively. The definition implies that any sequence of a single integer is a jolly jumper. You are to write a program to determine whether or not each of a number of sequences is a jolly jumper.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>Each line of input contains an integer n ≤ 3000 followed by n integers representing the sequence.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>For each line of input, generate a line of output saying ‘Jolly’ or ‘Not jolly’.</p>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>4 1 4 2 3<br />\n5 1 4 2 -1 6</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>Jolly<br />\nNot jolly</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">.</span><span class=\"token function\">hasNextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> table <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">boolean</span> iSJolly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">int</span> tmp <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> arr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">>=</span> num <span class=\"token operator\">||</span> tmp <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    iSJolly <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    table<span class=\"token punctuation\">[</span>tmp<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">[</span>tmp<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                        iSJolly <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>iSJolly <span class=\"token operator\">?</span> <span class=\"token string\">\"Jolly\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Not jolly\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10035-Primary-Arithmetic/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10035-Primary-Arithmetic/",
            "title": "10035 - Primary Arithmetic",
            "date_published": "2023-12-11T05:12:08.000Z",
            "content_html": "<p>🌕🌑🌑🌑🌑</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTAwL3AxMDAzNS5wZGY=\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhw\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTAwMzU=\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>Children are taught to add multi-digit numbers from right-to-left one digit at a time. Many find the “carry” operation - in which a 1 is carried from one digit position to be added to the next - to be a significant challenge. Your job is to count the number of carry operations for each of a set of addition problems so that educators may assess their difficulty.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>Each line of input contains two unsigned integers less than 10 digits. The last line of input contains ‘0 0’.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>For each line of input except the last you should compute and print the number of carry operations that would result from adding the two numbers, in the format shown below.</p>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>123 456<br />\n555 555<br />\n123 594<br />\n0 0</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>No carry operation.<br />\n3 carry operations.<br />\n1 carry operation.</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">String</span> num1 <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">String</span> num2 <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">||</span> num2<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">int</span> carry <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                num1 <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> num1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num2<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                num2 <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> max <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">int</span> n1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">int</span> n2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>num2<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> n1 <span class=\"token operator\">+</span> n2 <span class=\"token operator\">+</span> carry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                carry <span class=\"token operator\">=</span> sum <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>carry <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No carry operation.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token string\">\" carry \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"operations.\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"operation.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            num1 <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            num2 <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10019-Funny-Encryption-Method/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10019-Funny-Encryption-Method/",
            "title": "10019 - Funny Encryption Method",
            "date_published": "2023-12-10T14:24:53.000Z",
            "content_html": "<p>🌕🌑🌑🌑🌑</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTAwL3AxMDAxOS5wZGY=\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhw\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTAwMTk=\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>A student from ITESM Campus Monterrey plays with a new encryption method for numbers. These method consist of the following steps:</p>\n<p><strong>Steps : Example</strong></p>\n<ol>\n<li>Read the number N to encrypt : M = 265</li>\n<li>Interpret N as a decimal number : X1 = 265 (decimal)</li>\n<li>Convert the decimal interpretation of N to its binary representation : X1 = 100001001 (binary)</li>\n<li>Let b1 be equal to the number of 1’s in this binary representation : b1 = 3</li>\n<li>Interpret N as a Hexadecimal number : X2 = 265 (hexadecimal)</li>\n<li>Convert the hexadecimal interpretation of N to its binary representation : X2 = 1001100101</li>\n<li>Let b2 be equal to the number of 1’s in the last binary representation : b2 = 5</li>\n<li>The encryption is the result of M xor (b1 ∗ b2) : 265 xor (3*5) = 262</li>\n</ol>\n<p>This student failed Computational Organization, thats why this student asked the judges of ITESM Campus Monterrey internal ACM programming Contest to ask for the numbers of 1’s bits of this two representations so that he can continue playing.</p>\n<p>You have to write a program that read a Number and give as output the number b1 and b2</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>The first line will contain a number N which is the number of cases that you have to process. Each of the following N Lines (0 &lt; N ≤ 1000) will contain the number M (0 &lt; M ≤ 9999, in decimal representation) which is the number the student wants to encrypt.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>You will have to output N lines, each containing the number b1 and b2 in that order, separated by one space corresponding to that lines number to crypt</p>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>3<br />\n265<br />\n111<br />\n1234</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>3 5<br />\n6 3<br />\n5 5</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<ul>\n<li><code>BigInteger n1 = new BigInteger(&quot;1234567890&quot;);</code></li>\n<li>加減乘除運算\n<ul>\n<li><code>n1.add(n2);</code></li>\n<li><code>n1.subtract(n2);</code></li>\n<li><code>n1.multiply(n2);</code></li>\n<li><code>n1.divide(n2);</code></li>\n</ul>\n</li>\n<li>比較\n<ul>\n<li><code>n1.compareTo(n2);</code></li>\n</ul>\n</li>\n<li>變回字串\n<ul>\n<li><code>n1.toString(radix: );</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BigInteger</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> <span class=\"token class-name\">N</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">N</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">String</span> <span class=\"token class-name\">M</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">String</span> <span class=\"token constant\">X1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">M</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">String</span> <span class=\"token constant\">X2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">M</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">int</span> b1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">int</span> b2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token constant\">X1</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token constant\">X1</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span><span class=\"token punctuation\">)</span> b1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token constant\">X2</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token constant\">X2</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span><span class=\"token punctuation\">)</span> b2<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b1 <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> b2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10018-Reverse-and-Add/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10018-Reverse-and-Add/",
            "title": "10018 - Reverse and Add",
            "date_published": "2023-12-10T10:16:07.000Z",
            "content_html": "<p>🌕🌗🌑🌑🌑</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTAwL3AxMDAxOC5wZGY=\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhw\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTAwMTg=\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>The “reverse and add” method is simple: choose a number, reverse its digits and add it to the original. If the sum is not a palindrome (which means, it is not the same number from left to right and right to left), repeat this procedure.</p>\n<p><img data-src=\"https://i.imgur.com/a3MeTYx.png\" alt=\"Imgur\" /></p>\n<p>In this particular case the palindrome ‘9339’ appeared after the 4th addition. This method leads to palindromes in a few step for almost all of the integers. But there are interesting exceptions. 196 is the first number for which no palindrome has been found. It is not proven though, that there is no such a palindrome.</p>\n<p>You must write a program that give the resulting palindrome and the number of iterations (additions) to compute the palindrome.</p>\n<p>You might assume that all tests data on this problem:</p>\n<ul>\n<li>will have an answer ,</li>\n<li>will be computable with less than 1000 iterations (additions),</li>\n<li>will yield a palindrome that is not greater than 4,294,967,295.</li>\n</ul>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>The first line will have a number  <code>N (0 &lt; N ≤ 100)</code>  with the number of test cases, the next N lines will have a number P to compute its palindrome.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>For each of the N tests you will have to write a line with the following data : minimum number of iterations (a and the resulting palindrome itself separated by one space.</p>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>3<br />\n195<br />\n265<br />\n750</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>4 9339<br />\n5 45254<br />\n3 6666</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<ul>\n<li>計算時 int 會不夠用</li>\n</ul>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> line <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> line<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token class-name\">StringBuffer</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token class-name\">String</span> restr <span class=\"token operator\">=</span> sb<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">long</span> tmp <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseLong</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseLong</span><span class=\"token punctuation\">(</span>restr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                str <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">boolean</span> isPalindrome <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                        isPalindrome <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isPalindrome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10008-What-s-Cryptanalysis/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/10008-What-s-Cryptanalysis/",
            "title": "10008 - What's Cryptanalysis?",
            "date_published": "2023-12-10T09:43:55.000Z",
            "content_html": "<p>🌕🌑🌑🌑🌑</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTAwL3AxMDAwOC5wZGY=\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhw\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTAwMDg=\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>Cryptanalysis is the process of breaking someone else’s cryptographic writing. This sometimes involves some kind of statistical analysis of a passage of (encrypted) text. Your task is to write a program which performs a simple analysis of a given text.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>The first line of input contains a single positive decimal integer n. This is the number of lines which follow in the input. The next n lines will contain zero or more characters (possibly including whitespace). This is the text which must be analyzed.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>Each line of output contains a single uppercase letter, followed by a single space, then followed by a positive decimal integer. The integer indicates how many times the corresponding letter appears in the input text. Upper and lower case letters in the input are to be considered the same. No other characters must be counted. The output must be sorted in descending count order; that is, the most frequent letter is on the first output line, and the last line of output indicates the least frequent letter. If two letters have the same frequency, then the letter which comes first in the alphabet must appear first in the output. If a letter does not appear in the text, then that letter must not appear in the output.</p>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>3<br />\nThis is a test.<br />\nCount me 1 2 3 4 5.<br />\nWow!!!! Is this question easy?</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>S 7<br />\nT 6<br />\nI 5<br />\nE 4<br />\nO 3<br />\nA 2<br />\nH 2<br />\nN 2<br />\nU 2<br />\nW 2<br />\nC 1<br />\nM 1<br />\nQ 1<br />\nY 1</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> line <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> line<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> c <span class=\"token operator\">:</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">>=</span> <span class=\"token char\">'a'</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'z'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    arr<span class=\"token punctuation\">[</span>c <span class=\"token operator\">-</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>c <span class=\"token operator\">-</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                        max <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>c <span class=\"token operator\">-</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">>=</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'Z'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    arr<span class=\"token punctuation\">[</span>c <span class=\"token operator\">-</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>c <span class=\"token operator\">-</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                        max <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>c <span class=\"token operator\">-</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> max<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">26</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Information-Security/Website/%E7%B6%AD%E8%AD%B7%E7%B3%BB%E7%B6%B2%E6%97%A5%E8%AA%8C/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Information-Security/Website/%E7%B6%AD%E8%AD%B7%E7%B3%BB%E7%B6%B2%E6%97%A5%E8%AA%8C/",
            "title": "維護系網日誌",
            "date_published": "2023-12-04T03:03:24.000Z",
            "content_html": "<div class=\"note info\">\n<p>本篇文章比較特別，比較像是日誌、紀錄，大家如果有相同問題可以參考，但不保證相同，單純想記錄酷酷的事。</p>\n</div>\n<h1 id=\"前情提要\"><a class=\"anchor\" href=\"#前情提要\">#</a> 前情提要</h1>\n<p>我在大二開始接觸學校系上網站，幫忙處理網頁開發以及學習網頁管理的部分，因為帶領我們開發的學長畢業了，所以我大三開始正式接管系網，很可惜我在這方面知識雖然有在學習，但是還是很需要歷練，也希望盡快可以不要當廢物哈哈哈。</p>\n<h1 id=\"20231023\"><a class=\"anchor\" href=\"#20231023\">#</a> 2023.10.23</h1>\n<h2 id=\"事件背景\"><a class=\"anchor\" href=\"#事件背景\">#</a> 事件背景</h2>\n<p>系辦通知系網有部分頁面要修改，我們修改後將 docker image 推上 docker hub，然後在要部屬的伺服器 docker pull 下來，進行部屬。</p>\n<p>我們 docker image 這些部分是利用 CI/CD 自動部屬的，而伺服器端是利用 docker watchtower 去檢查 docker hub 是否有更新，來確定是否需要重新 docker pull 下來，然後更新上去。</p>\n<p>我們是利用 docker compose 將多個 images 一起跑起來的，包函了 frontend、backend、nginx、watchertower</p>\n<h2 id=\"事件問題\"><a class=\"anchor\" href=\"#事件問題\">#</a> 事件問題</h2>\n<p>在跑 CI/CD 流程時確定沒有問題，log 也顯示 success，但是系上網站卻沒有更新。</p>\n<h2 id=\"問題解決\"><a class=\"anchor\" href=\"#問題解決\">#</a> 問題解決</h2>\n<p>經過詢問確定了是 docker watchtower 沒檢查到更新，因此我們將 docker watchtower 重啟。</p>\n<h2 id=\"處理步驟\"><a class=\"anchor\" href=\"#處理步驟\">#</a> 處理步驟</h2>\n<ol>\n<li>進去虛擬機</li>\n<li>先進到  <code>docker-compose.yml</code>  檔案的路徑</li>\n<li>可以利用幾個方法，更具需求選擇指令\n<ul>\n<li><code>docker compose restart</code> : Restart service containers</li>\n<li><code>docker compose stop</code> : Stop services</li>\n<li><code>docker compose start</code> : Start services</li>\n<li><code>docker compose down</code> : Stop and remove conatiners,  networks</li>\n<li><code>docker compose up</code> : Create ans start containers</li>\n<li><code>docker compose rm</code> : Removes stopped service comtainers</li>\n<li><code>docker compose create</code> : Creates containers for a service</li>\n<li><code>docker compose ps</code> : List containers</li>\n<li><code>docker compose ls</code> : List running compose projects</li>\n<li><code>docker compose images</code> : List images used by the created container</li>\n<li><code>docker compose exec</code> : Excute a command in a running containers</li>\n</ul>\n</li>\n<li>最後重啟就可以了。</li>\n</ol>\n<h2 id=\"待釐清\"><a class=\"anchor\" href=\"#待釐清\">#</a> 待釐清</h2>\n<ul>\n<li>利用 docker restart 重新啟動時，機器直接卡住。</li>\n</ul>\n<h1 id=\"20231103\"><a class=\"anchor\" href=\"#20231103\">#</a> 2023.11.03</h1>\n<h2 id=\"事件背景-2\"><a class=\"anchor\" href=\"#事件背景-2\">#</a> 事件背景</h2>\n<p>我們後端利用 Strapi 來撰寫的，部屬的 port 原為預設值。</p>\n<h2 id=\"事件問題-2\"><a class=\"anchor\" href=\"#事件問題-2\">#</a> 事件問題</h2>\n<p>因為 11 月中有教育部資安檢測，雖然本身這個可能不是甚麼漏洞，但我們希望可以更安全。</p>\n<h2 id=\"問題處理\"><a class=\"anchor\" href=\"#問題處理\">#</a> 問題處理</h2>\n<p>我們將對外連接的 port 做了更改，對內在連回先前的，讓其他人不容易直接修改到真實的 port，修改有成功，不過由於這個要更改的東西眾多，我們目前只測試系統上使用，近期會再找時間進行正式版修正。</p>\n<h2 id=\"處理步驟-2\"><a class=\"anchor\" href=\"#處理步驟-2\">#</a> 處理步驟</h2>\n<h2 id=\"待釐清-2\"><a class=\"anchor\" href=\"#待釐清-2\">#</a> 待釐清</h2>\n<ul>\n<li>port 傳接安全性提升多少。</li>\n</ul>\n<h1 id=\"20231204\"><a class=\"anchor\" href=\"#20231204\">#</a> 2023.12.04</h1>\n<h2 id=\"事情背景\"><a class=\"anchor\" href=\"#事情背景\">#</a> 事情背景</h2>\n<p>學校在前天高電壓檢修有斷電，但是沒有特別通知到我，不過實驗室這邊的伺服器我們確定有關，但他是被用機器，小小說一下啊啊啊啊檢修完了沒有幫我開機，我還不知道他有關機，要用的時候發現關機了，差點嚇死，還好有先問學長，然後摸摸鼻子去開機，有點題外話了，但覺得這個也要記錄一下。</p>\n<h2 id=\"事件問題-3\"><a class=\"anchor\" href=\"#事件問題-3\">#</a> 事件問題</h2>\n<p>今天真的是一大早，我還在早八的時候，系辦通知我說後端的資料傳不上去，我就上去後端看了一下發現是不論什麼資料都傳不上去。</p>\n<p>然後就有了以下幾個猜測，我第一個想到的是可能是後端那邊的 server 有一些問題，想說把 docker compose restart 看看，結果不用沒事，一用直接出大事，我們發現他根本不能 start， 現在只能 stop，並顯示錯誤訊息，container 有存在，要 remove 或 rename，但是 docker compose rm 或 docker compose dowm 都不行，然後我就整個大清醒，真的我前天睡了一個小時，原本很想睡，直接清醒到我感覺我可以在醒個 48 小時，哈哈哈偏了偏了。</p>\n<p><img data-src=\"\" alt=\"docker compose up -d error\" /></p>\n<p><img data-src=\"\" alt=\"docker compose down error\" /></p>\n<p>反正下來我就猜可能是 docker 要 restart，systemctl restart docker 之類的，但因為我們機器部屬在計網中心，所以我沒有 root 權限，沒辦法重啟，然後為了重啟我們通知了計網中心，沒想到計網中心一位同事要直接通報教育部資安問題，我真的更精神了，差一點嚇死，我要求他們重啟機器，但是他們說伺服器沒問題，所以沒有處理，當時我超無助啊！！！</p>\n<p>一下課我就狂奔我們系辦，然後系辦姊姊跟我教授幫我攔下了，讓我一個小時恢復，但因為我實在沒有權限，所以學長給我了一個建議，先把系網網址先轉到備用機，至少有東西可以看，我真的很謝謝學長給的建議，我看到了一絲希望，因為要我一個小時我想到的也只由重新部一個，但我完全忘記備用機這件事，真的很慌那時候，而且出事真得太早了，根本沒有人可以討論，不過就在我準備轉到備用機時，我們接到了一通電話...。</p>\n<p>計網中心那為想通報的同事重啟了伺服器，然後把硬碟重組，我這裡的 docker 就好了，雖然我們猜測是因為斷電，但伺服器沒有提前關機才會如此，不過這只是猜測，我想我考完試想要找學長復盤，釐清處到底為什麼。</p>\n<p>雖然我有一點覺得那個要通報的同事壞，不過想想他確實也是按照規定啦，但我們明明就有找到大致問題，只是沒權限處理，最後問題還出在別人那裡，當時候我真的很緊張。</p>\n<h2 id=\"問題處理-2\"><a class=\"anchor\" href=\"#問題處理-2\">#</a> 問題處理</h2>\n<ol>\n<li>開啟靜態畫面</li>\n<li>盡快處理問題</li>\n</ol>\n",
            "tags": [
                "資訊工程",
                "Information-Security",
                "Website",
                "website"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/program-language/Framework/Svelte/Create-Svelte-Project/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/program-language/Framework/Svelte/Create-Svelte-Project/",
            "title": "Create Svelte Project",
            "date_published": "2023-11-15T05:44:22.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"ChienI Kao\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\" data-background-image=\"https://chienikao.github.io/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\">ChienI Kao</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div><div class=\"item\" title=\"JHTNT\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\" data-background-image=\"https://i.imgur.com/cBOtjyB.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\">JHTNT</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div></div></p>\n<h2 id=\"create-project\"><a class=\"anchor\" href=\"#create-project\">#</a> Create Project</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> create svelte@latest <span class=\"token operator\">&lt;</span>project_name<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"example\"><a class=\"anchor\" href=\"#example\">#</a> Example:</h3>\n<p><img data-src=\"https://i.imgur.com/nOQynkh.png\" alt=\"\" /></p>\n<h2 id=\"安裝套件管理工具\"><a class=\"anchor\" href=\"#安裝套件管理工具\">#</a> 安裝套件管理工具</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><h2 id=\"把-dev-中的專案-run-起來\"><a class=\"anchor\" href=\"#把-dev-中的專案-run-起來\">#</a> 把 dev 中的專案 run 起來</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> run dev</pre></td></tr></table></figure><p><strong>剛 create 的 project run 起來會長這樣</strong><br />\n<img data-src=\"https://i.imgur.com/oKYKSN2.png\" alt=\"Imgur\" /></p>\n<h2 id=\"project-結構介紹\"><a class=\"anchor\" href=\"#project-結構介紹\">#</a> Project 結構介紹</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>│  .gitignore</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>│  .npmrc</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>│  package-lock.json</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>│  package.json</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>│  README.md</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>│  svelte.config.js</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>│  tsconfig.json</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>│  vite.config.ts </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>│</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>├─src</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>│  │  app.d.ts</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>│  │  app.html</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>│  │</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>│  ├─lib</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>│  │  └─images</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>│  │          github.svg</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>│  │          svelte-logo.svg</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>│  │          svelte-welcome.png</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>│  │          svelte-welcome.webp</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>│  │</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>│  └─routes</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>│      │  +layout.svelte</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>│      │  +page.svelte</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>│      │  +page.ts</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>│      │  Counter.svelte</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>│      │  Header.svelte</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>│      │  styles.css</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>│      │</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>│      ├─about</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>│      │      +page.svelte</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>│      │      +page.ts</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>│      │</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>│      └─sverdle</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>│          │  +page.server.ts</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>│          │  +page.svelte</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>│          │  game.ts</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>│          │  reduced-motion.ts</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>│          │  words.server.ts</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>│          │</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>│          └─how-to-play</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>│                  +page.svelte</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>│                  +page.ts</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>│</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>└─static</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        favicon.png</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        robots.txt</pre></td></tr></table></figure><h2 id=\"參考網站\"><a class=\"anchor\" href=\"#參考網站\">#</a> 參考網站</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9raXQuc3ZlbHRlLmRldi8=\">SvelteKit</span></li>\n</ul>\n",
            "tags": [
                "資訊工程",
                "Programming Language",
                "Framework",
                "Svelte"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/342-Power-of-Four/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/342-Power-of-Four/",
            "title": "342. Power of Four",
            "date_published": "2023-10-23T00:21:01.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/power-of-four/description/?envType=daily-question&amp;envId=2023-10-23\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an integer  <code>n</code> , return <em> <code>true</code>  if it is a power of four. Otherwise, return  <code>false</code> </em>.</p>\n<p>An integer  <code>n</code>  is a power of four, if there exists an integer  <code>x</code>  such that  <code>n == 4^x</code> .</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>: n = 16<br />\n<strong>Output</strong>: true</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: n = 5<br />\n<strong>Output</strong>: false</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input</strong>: n = 1<br />\n<strong>Output</strong>: true</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isPowerOfFour</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> n <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            n <span class=\"token operator\">/=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Bit Manipulation",
                "Math",
                "Recursion"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/program-language/Framework/Svelte/%E4%BB%8B%E7%B4%B9-Svelte/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/program-language/Framework/Svelte/%E4%BB%8B%E7%B4%B9-Svelte/",
            "title": "介紹 Svelte",
            "date_published": "2023-10-22T08:44:33.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"ChienI Kao\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\" data-background-image=\"https://chienikao.github.io/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\">ChienI Kao</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div><div class=\"item\" title=\"JHTNT\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\" data-background-image=\"https://i.imgur.com/cBOtjyB.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\">JHTNT</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div></div></p>\n<h1 id=\"簡介\"><a class=\"anchor\" href=\"#簡介\">#</a> 簡介</h1>\n<p>這是一個在 2019 年，衝進大家視眼裡的一個前端框架。</p>\n<p>在介紹此框架前，大家可能比較熟悉的三大前端框架是: React、Vue 或 Angular。<br />\n而這個前端框架有別於這三種，留一些懸念看下去吧！</p>\n<h1 id=\"特色\"><a class=\"anchor\" href=\"#特色\">#</a> 特色</h1>\n",
            "tags": [
                "資訊工程",
                "Programming Language",
                "Framework",
                "Svelte"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Hard/1425-Constrained-Subsequence-Sum/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Hard/1425-Constrained-Subsequence-Sum/",
            "title": "1425. Constrained Subsequence Sum",
            "date_published": "2023-10-21T08:30:01.000Z",
            "content_html": "<p>⭐️⭐️⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/constrained-subsequence-sum/?envType=daily-question&amp;envId=2023-10-21\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an integer array  <code>nums</code>  and an integer  <code>k</code> , return the maximum sum of a <strong>non-empty</strong> subsequence of that array such that for every two <strong>consecutive</strong> integers in the subsequence,  <code>nums[i]</code>  and  <code>nums[j]</code> , where  <code>i &lt; j</code> , the condition  <code>j - i &lt;= k</code>  is satisfied.</p>\n<p>A <em>subsequence</em> of an array is obtained by deleting some number of elements (can be zero) from the array, leaving the remaining elements in their original order.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>: nums = [10,2,-10,5,20], k = 2<br />\n<strong>Output</strong>: 37<br />\n<strong>Explanation</strong>: The subsequence is [10, 2, 5, 20].</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: nums = [-1,-2,-3], k = 1<br />\n<strong>Output</strong>: -1<br />\n<strong>Explanation</strong>: The subsequence must be non-empty, so we choose the largest number.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input</strong>: nums = [10,-2,-10,-5,20], k = 2<br />\n<strong>Output</strong>: 23<br />\n<strong>Explanation</strong>: The subsequence is [10, -2, -5, 20].</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Deque</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">constrainedSubsetSum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">Deque</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> dq <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token operator\">!</span>dq<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> nums<span class=\"token punctuation\">[</span>dq<span class=\"token punctuation\">.</span><span class=\"token function\">peekFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dq<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> dq<span class=\"token punctuation\">.</span><span class=\"token function\">peekFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> k <span class=\"token operator\">||</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> nums<span class=\"token punctuation\">[</span>dq<span class=\"token punctuation\">.</span><span class=\"token function\">peekLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> nums<span class=\"token punctuation\">[</span>dq<span class=\"token punctuation\">.</span><span class=\"token function\">peekLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> dq<span class=\"token punctuation\">.</span><span class=\"token function\">pollLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">else</span> dq<span class=\"token punctuation\">.</span><span class=\"token function\">pollFirst</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                dq<span class=\"token punctuation\">.</span><span class=\"token function\">offerLast</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAsInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Hard",
                "Array",
                "Dynamic Programming",
                "Queue",
                "Sliding Window",
                "Heap (Priority Queue)",
                "Monotonic Queue"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/1587-Box/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/1587-Box/",
            "title": "1587 - Box",
            "date_published": "2023-10-20T19:27:55.000Z",
            "content_html": "<p>🌕🌗🌑🌑🌑</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTUvcDE1ODcucGRm\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhw\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTU4Nw==\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>Ivan works at a factory that produces heavy machinery. He has a simple job — he knocks up wooden boxes of different sizes to pack machinery for delivery to the customers. Each box is a rectangular parallelepiped. Ivan uses six rectangular wooden pallets to make a box. Each pallet is used for one side of the box.</p>\n<p><img data-src=\"https://i.imgur.com/3xzg68r.png\" alt=\"Imgur\" /></p>\n<p>Joe delivers pallets for Ivan. Joe is not very smart and often makes mistakes — he brings Ivan pallets that do not fit together to make a box. But Joe does not trust Ivan. It always takes a lot of time to explain Joe that he has made a mistake.</p>\n<p>Fortunately, Joe adores everything related to computers and sincerely believes that computers never make mistakes. Ivan has decided to use this for his own advantage. Ivan asks you to write a program that given sizes of six rectangular pallets tells whether it is possible to make a box out of them.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>Input file contains several test cases. Each of them consists of six lines. Each line describes one pallet and contains two integer numbers  <code>w</code>  and  <code>h</code>   <code>(1 ≤ w, h ≤ 10 000)</code>  — width and height of the pallet in millimeters respectively.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>For each test case, print one output line. Write a single word ‘POSSIBLE’ to the output file if it is possible to make a box using six given pallets for its sides. Write a single word ‘IMPOSSIBLE’ if it is not possible to do so.</p>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>1345 2584<br />\n2584 683<br />\n2584 1345<br />\n683 1345<br />\n683 1345<br />\n2584 683<br />\n1234 4567<br />\n1234 4567<br />\n4567 4321<br />\n4322 4567<br />\n4321 1234<br />\n4321 1234</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>POSSIBLE<br />\nIMPOSSIBLE</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Box</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Box</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">.</span><span class=\"token function\">hasNextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">Box</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> box <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Box</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">int</span> <span class=\"token class-name\">L</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">int</span> <span class=\"token class-name\">W</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                box<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Box</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">L</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">W</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">L</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">W</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Comparator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Box</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Box</span> a<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Box</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>x <span class=\"token operator\">==</span> b<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">boolean</span> isBox <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                    <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                    <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">&amp;&amp;</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">==</span> box<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                isBox <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>isBox <span class=\"token operator\">?</span> <span class=\"token string\">\"POSSIBLE\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"IMPOSSIBLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/1585-Score/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/One%20Star/1585-Score/",
            "title": "1585 - Score",
            "date_published": "2023-10-20T19:16:59.000Z",
            "content_html": "<p>🌕🌑🌑🌑🌑</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTUvcDE1ODUucGRm\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhw\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTU4NQ==\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>There is an objective test result such as  <code>“OOXXOXXOOO”</code> . An  <code>‘O’</code>  means a correct answer of a problem and an  <code>‘X’</code>  means a wrong answer. The score of each problem of this test is calculated by itself and its just previous consecutive  <code>‘O’s</code>  only when the answer is correct. For example, the score of the 10th problem is 3 that is obtained by itself and its two previous consecutive  <code>‘O’s</code> .</p>\n<p>Therefore, the score of  <code>“OOXXOXXOOO”</code>  is 10 which is calculated by  <code>“1+2+0+0+1+0+0+1+2+3”</code> .</p>\n<p>You are to write a program calculating the scores of test results.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>Your program is to read from standard input. The input consists of T test cases. The number of test cases  <code>T</code>  is given in the first line of the input. Each test case starts with a line containing a string composed by  <code>‘O’</code>  and  <code>‘X’</code>  and the length of the string is more than 0 and less than 80. There is no spaces between  <code>‘O’</code>  and  <code>‘X’</code> .</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>Your program is to write to standard output. Print exactly one line for each test case. The line is to contain the score of the test case.</p>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>5<br />\nOOXXOXXOOO<br />\nOOXXOOXXOO<br />\nOXOXOXOXOXOXOX<br />\nOOOOOOOOOO<br />\nOOOOXOOOOXOOOOX</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>10<br />\n9<br />\n7<br />\n55<br />\n30</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> <span class=\"token class-name\">T</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token class-name\">String</span> input <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token char\">'O'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    sum <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/341-Flatten-Nested-List-Iterator/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/341-Flatten-Nested-List-Iterator/",
            "title": "341. Flatten Nested List Iterator",
            "date_published": "2023-10-20T09:15:37.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/flatten-nested-list-iterator/description/?envType=daily-question&amp;envId=2023-10-20\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given a nested list of integers  <code>nestedList</code> . Each element is either an integer or a list whose elements may also be integers or other lists. Implement an iterator to flatten it.</p>\n<p>Implement the  <code>NestedIterator</code>  class:</p>\n<ul>\n<li><code>NestedIterator(List&lt;NestedInteger&gt; nestedList)</code>  Initializes the iterator with the nested list  <code>nestedList</code> .</li>\n<li><code>int next()</code>  Returns the next integer in the nested list.</li>\n<li><code>boolean hasNext()</code>  Returns  <code>true</code>  if there are still some integers in the nested list and  <code>false</code>  otherwise.</li>\n</ul>\n<p>Your code will be tested with the following pseudocode:</p>\n<pre><code>initialize iterator with nestedList\nres = []\nwhile iterator.hasNext()\n    append iterator.next() to the end of res\nreturn res\n</code></pre>\n<p>If  <code>res</code>  matches the expected flattened list, then your code will be judged as correct.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>: nestedList = [[1,1],2,[1,1]]<br />\n<strong>Output</strong>: [1,1,2,1,1]<br />\n<strong>Explanation</strong>: By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: nestedList = [1,[4,[6]]]<br />\n<strong>Output</strong>: [1,4,6]<br />\n<strong>Explanation</strong>: By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * // This is the interface that allows for creating nested lists.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * // You should not implement it, or speculate about its implementation</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * public interface NestedInteger &#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> *     // @return true if this NestedInteger holds a single integer, rather than a nested list.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> *     public boolean isInteger();</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> *     // @return the single integer that this NestedInteger holds, if it holds a single integer</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> *     // Return null if this NestedInteger holds a nested list</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> *     public Integer getInteger();</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> *     // @return the nested list that this NestedInteger holds, if it holds a nested list</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> *     // Return empty list if this NestedInteger holds a single integer</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> *     public List&lt;NestedInteger> getList();</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * &#125;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NestedIterator</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> flattened<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> index<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">NestedIterator</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NestedInteger</span><span class=\"token punctuation\">></span></span> nestedList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        flattened <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        flattened <span class=\"token operator\">=</span> <span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>nestedList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NestedInteger</span><span class=\"token punctuation\">></span></span> nested<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NestedInteger</span> ni <span class=\"token operator\">:</span> nested<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ni<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ni<span class=\"token punctuation\">.</span><span class=\"token function\">getInteger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span><span class=\"token function\">flatten</span><span class=\"token punctuation\">(</span>ni<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span> flattened<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">return</span> index <span class=\"token operator\">&lt;</span> flattened<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"52\"></td><td><pre> * Your NestedIterator object will be instantiated and called as such:</pre></td></tr><tr><td data-num=\"53\"></td><td><pre> * NestedIterator i = new NestedIterator(nestedList);</pre></td></tr><tr><td data-num=\"54\"></td><td><pre> * while (i.hasNext()) v[f()] = i.next();</pre></td></tr><tr><td data-num=\"55\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Queue",
                "Depth-First Search",
                "Tree",
                "Stack",
                "Design",
                "Iterator"
            ]
        }
    ]
}