{
    "version": "https://jsonfeed.org/version/1",
    "title": "MyBlog",
    "subtitle": "We are the dreamers. We make it happen 'cause we can see it.",
    "icon": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/images/favicon.ico",
    "description": "謝謝你來，謝謝你還在",
    "home_page_url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io",
    "items": [
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/Docker-Practise-2/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/Docker-Practise-2/",
            "title": "Docker Practise - 2",
            "date_published": "2023-05-16T11:41:31.000Z",
            "content_html": "<h2 id=\"實作說明\"><a class=\"anchor\" href=\"#實作說明\">#</a> 實作說明</h2>\n<p>在前一個實作中我們先創建了一個 images  <code>ubuntu</code> ，在裡面安裝 nginx ，但其實我們只需要使用 nginx 而已，並不需要 ubuntu 這個作業系統。</p>\n<p>所以接下來我們要實作撰寫一個 Dockerfile，在自己的專案中，run Dockerfile 進行部屬，而且不包含 ubuntu。</p>\n<h2 id=\"撰寫一個-project\"><a class=\"anchor\" href=\"#撰寫一個-project\">#</a> 撰寫一個 Project</h2>\n<p>當然要現在馬上生出一個 project 有點費時，所以如果手邊沒有撰寫好的 project 也沒關係，接下來分兩部分來說:</p>\n<ol>\n<li>\n<p><strong>已經有可以實作的 project</strong><br />\n 這個就很簡單，先進入 project 的資料夾。</p>\n</li>\n<li>\n<p><strong>沒有可實作的 project</strong><br />\n 這個其實也不難，創建一個新資料夾，名稱隨意，如果想不到可以用: [docker-test]，在裡面撰寫一個  <code>index.html</code> 。<br />\n以下是個簡單的 html 可以參考:</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"><span>index.html</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>My Project<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"撰寫-nignxconf\"><a class=\"anchor\" href=\"#撰寫-nignxconf\">#</a> 撰寫 nignx.conf</h2>\n<p>這個其實沒寫也沒關係，沒有寫就是原本 nignx.conf 的預設，寫了可以更改其原本預設。</p>\n<pre><code>server&#123;\n  listen       80 default_server;\n  listen       [::]:80 default_server;\n  server_name  _;\n  root         /usr/share/nginx/html;\n  index        index.html;\n  charset utf-8;\n  access_log /var/log/nginx/access_log;\n  error_log /var/log/nginx/error_log;\n&#125;\n</code></pre>\n<blockquote>\n<p>內容細節說明可以去看 <a href=\"https://chenhsingyu-0212.github.io/computer-science/Docker/Docker-Practise-1/\">docker practise - 1</a>，那邊有稍微說明一下內容涵意。</p>\n</blockquote>\n<h2 id=\"創建一個-dockerfile-的檔案\"><a class=\"anchor\" href=\"#創建一個-dockerfile-的檔案\">#</a> 創建一個 Dockerfile 的檔案</h2>\n<p>創建一個 Dockerfile 檔，沒有副檔名，純檔案。</p>\n<p>Dockerfile 內容如下:</p>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> nginx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">MAINTAINER</span> HsingYu</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 複製一整個在根目錄專案的檔案進去</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">COPY</span> / /usr/share/nginx/html</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 如果只有一個檔案，如: index.html 可以寫 </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># COPY index.html /usr/share/nginx/html</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 把 nignx.conf 加入預設 conf 裡面</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">COPY</span> nginx.conf /etc/nginx/conf.d/default.conf</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 容器對外連接 80 port</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">EXPOSE</span> 80</span></pre></td></tr></table></figure><p>這樣就完成撰寫 Dockerfile 了。</p>\n<h2 id=\"利用-dockerfile-建立-images\"><a class=\"anchor\" href=\"#利用-dockerfile-建立-images\">#</a> 利用 Dockerfile 建立 images</h2>\n<pre><code>docker bulid -t [&quot;images name&quot;] .\n</code></pre>\n<ul>\n<li><code>-t</code> : 後面接為 images 命名的名稱，注意不可以是大寫字母，要是小寫喔～～</li>\n<li><code>.</code> : 指在這個地方下的 Dockerfile</li>\n</ul>\n<p>建立完成會如下圖:<br />\n<img data-src=\"https://i.imgur.com/oD6OTUB.png\" alt=\"success\" /></p>\n<h2 id=\"執行建立的-images\"><a class=\"anchor\" href=\"#執行建立的-images\">#</a> 執行建立的 images</h2>\n<pre><code>docker run -p 80:80 [&quot;images name&quot;]\n</code></pre>\n<ul>\n<li><code>-p</code> : 後面寫通信的 port</li>\n<li><code>80:80</code> : 為了方便區分冒號 (:) 前後 port 代表的不同意思，接下來會以  <code>8080:80</code>  來解釋，容器將在端口 8080 上的主機上可用，但它與端口 80 上的容器（和應用程序）通信，簡單來說就是在 bowser 中輸入容器運行所在的 Docker 主機的 DNS 名稱或者 IP 位址，並在後面加上 port 8080，例如:  <code>localhost:8080</code></li>\n</ul>\n<p>執行成功會如下圖:<br />\n<img data-src=\"https://i.imgur.com/3atzvMI.png\" alt=\"succes\" /></p>\n<blockquote>\n<p><ins><span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdA==\">localhost</span></ins><br />\nport 80 不用特別寫，localhost:80 =&gt; localhost</p>\n</blockquote>\n<p><img data-src=\"https://i.imgur.com/Bsv8vzi.png\" alt=\"Imgur\" /></p>\n",
            "tags": [
                "資訊工程",
                "Docker",
                "Docker",
                "Practise"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/Docker-Practise-1/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/Docker-Practise-1/",
            "title": "Docker Practise - 1",
            "date_published": "2023-05-16T11:32:34.000Z",
            "content_html": "<h2 id=\"實作說明\"><a class=\"anchor\" href=\"#實作說明\">#</a> 實作說明</h2>\n<p>當一個軟體完成後要進行發布網站，我們並不會使用絕對路徑，顯示檔案位置，會使用取得主機（hosting）和網域名稱（domain name）的方式來達到。</p>\n<p>而他人只需要訪問你的 hosting IP 或為其申請的 domain name 來 request 資料。</p>\n<p>而常見的有兩種工具來做:</p>\n<ul>\n<li>Apache</li>\n<li>nginx</li>\n</ul>\n<div class=\"note warning no-icon\">\n<p>舉個大家比較熟悉的例子就是 xampp，<br />\n可以將檔案丟進去，訪問 localhost 進行訪問。</p>\n<p>但是因為 xampp 是一個類似於 LAMP 的環境，<br />\n他除了 Apache 以外，還包含了 phpmyadmin、PHP、Perl 等其他東西，<br />\n如果不需要用到 php 等東西，就會比較沒有必要。</p>\n</div>\n<h2 id=\"創建一個-docker-images\"><a class=\"anchor\" href=\"#創建一個-docker-images\">#</a> 創建一個 docker images</h2>\n<ul>\n<li><strong>ubuntu</strong><pre><code>docker run -it -p 80:80 ubuntu:focal bash\n</code></pre>\n</li>\n</ul>\n<h2 id=\"更新-apt\"><a class=\"anchor\" href=\"#更新-apt\">#</a> 更新 apt</h2>\n<pre><code>apt update\n</code></pre>\n<h2 id=\"下載-nginx\"><a class=\"anchor\" href=\"#下載-nginx\">#</a> 下載 nginx</h2>\n<pre><code>apt install nginx\n</code></pre>\n<h2 id=\"開啟-nginx\"><a class=\"anchor\" href=\"#開啟-nginx\">#</a> 開啟 nginx</h2>\n<pre><code>nginx -s reload\n</code></pre>\n<div class=\"note danger no-icon\">\n<p><strong># 可能出現錯誤資訊:</strong></p>\n<pre><code>nginx: [error] open() &quot;/var/run/nginx.pid&quot; failed (2: No such file or directory)\n</code></pre>\n<p><strong>解決方法:</strong></p>\n<ol>\n<li>輸入以下指令</li>\n</ol>\n<pre><code>nginx -c /etc/nginx/nginx.conf\n</code></pre>\n<ol start=\"2\">\n<li>查看  <code>/etc/nginx/nginx.conf</code>  修改內容</li>\n</ol>\n<pre><code>nano /etc/nginx/nginx.conf\n</code></pre>\n<ol start=\"3\">\n<li>將其中內容修改成下方  <code>pid    /var/run/nginx.pid;</code></li>\n</ol>\n<pre><code>#pid   /run/nginx.pid;\npid    /var/run/nginx.pid;\n</code></pre>\n<ol start=\"4\">\n<li>再試一次  <code>nginx -s reload</code></li>\n</ol>\n</div>\n<h2 id=\"網頁連接設定\"><a class=\"anchor\" href=\"#網頁連接設定\">#</a> 網頁連接設定</h2>\n<pre><code>nano /etc/nginx/sites-available/default\n</code></pre>\n<p><img data-src=\"https://i.imgur.com/t8nW6eF.png\" alt=\"\" width=\"550px\" /></p>\n<ul>\n<li>port 連接設定</li>\n<li>根目錄檔案位置</li>\n<li>預先載入檔案</li>\n<li>server_name 用於設定 DNS 域名</li>\n</ul>\n<h2 id=\"最後將-app-檔案加入根目錄檔案位置\"><a class=\"anchor\" href=\"#最後將-app-檔案加入根目錄檔案位置\">#</a> 最後將 APP 檔案加入根目錄檔案位置</h2>\n<p>原本顯示完整檔案位置</p>\n<p><img data-src=\"https://i.imgur.com/vHOYfUJ.png\" alt=\"\" /></p>\n<p>經過修改剩下  <code>locolhost = 127.0.0.1</code></p>\n<p><img data-src=\"https://i.imgur.com/ddHfdCk.png\" alt=\"\" /></p>\n<p><strong> <code>^D = exit</code> : 離開 container</strong></p>\n<div class=\"note danger no-icon\">\n<p>如果在 Terminal 無法離開 container</p>\n<ol>\n<li>再開起一個 Terminal</li>\n<li><code>docker ps</code> : 檢查還未關閉的 container</li>\n<li><code>docker stop [container ID]</code> : 這裡 container ID 可以打前兩個字就好</li>\n</ol>\n</div>\n",
            "tags": [
                "資訊工程",
                "Docker",
                "Docker",
                "Practise"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/Docker-Compose/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/Docker-Compose/",
            "title": "Docker Compose",
            "date_published": "2023-05-16T11:29:28.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"yangj26952\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9pdGhlbHAuaXRob21lLmNvbS50dy9hcnRpY2xlcy8xMDE5NDE4Mw==\" data-background-image=\"https://ithelp.ithome.com.tw/storage/image/fbpic.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9pdGhlbHAuaXRob21lLmNvbS50dy9hcnRpY2xlcy8xMDE5NDE4Mw==\">iT邦幫忙</span>\n          <p class=\"desc\">使用 Docker-Compose 啟動多個 Docker Container</p>\n          </div></div></div></p>\n<h1 id=\"docker-compose\"><a class=\"anchor\" href=\"#docker-compose\">#</a> Docker Compose</h1>\n<h2 id=\"為什麼要用-docker-compose\"><a class=\"anchor\" href=\"#為什麼要用-docker-compose\">#</a> 為什麼要用 Docker Compose?</h2>\n<ol>\n<li>之前有介紹過使用  <code>docker run</code>  指令就可以把 Docker Container 啟動起來，但是如果我們要啟動很多個 Docker Container 時，就需要輸入很多次  <code>docker run</code>  指令。</li>\n<li>另外 container 和 container 之間要做關聯的話也要記得它們之間要如何的連結 (link) Container，這樣在要啟動多個 Container 的情況下，就會顯得比較麻煩。</li>\n</ol>\n<h2 id=\"如何運作\"><a class=\"anchor\" href=\"#如何運作\">#</a> 如何運作？</h2>\n<div class=\"note success\">\n<p><strong>Docker-Compose:</strong> 寫一個  <code>docker-compose.yml</code> ，把所有要使用 Docker Image 寫上去，也可以把 Container 之間的關係連結 (link) 起來。</p>\n<p>最後只要下  <code>docker-compose up</code>  指令，就可以把所有的 Docker Container 執行起來，這樣就可以很快速和方便的啟動多個 container。</p>\n</div>\n<h2 id=\"docker-compose-常用指令\"><a class=\"anchor\" href=\"#docker-compose-常用指令\">#</a> Docker Compose 常用指令</h2>\n<p><strong># 啟動所有的 Docker Container</strong></p>\n<pre><code>$ docker-compose up\n</code></pre>\n<p><strong># 查看 Docker Container 的執行狀態</strong></p>\n<pre><code>$ docker-compose ps\n</code></pre>\n<p><strong># 看執行的 log</strong></p>\n<pre><code>$ docker-compose logs\n</code></pre>\n<p><strong># 停止 docker-compose 執行的所有 Container</strong></p>\n<pre><code>$ docker-compose stop\n</code></pre>\n<p><strong># 刪除 docker-compose 的所有 Container</strong></p>\n<pre><code>$ docker-compose rm\n</code></pre>\n<h1 id=\"docker-compose-實作\"><a class=\"anchor\" href=\"#docker-compose-實作\">#</a> Docker Compose 實作</h1>\n<ol>\n<li>實作的部份主要就是要把 Docker-Compose 安裝起來</li>\n<li>然後撰寫一個  <code>docker-compose.yml</code></li>\n<li>並且使用  <code>docker-compose up</code> ，指令把所有的 Docker Container 啟動起來</li>\n</ol>\n<h2 id=\"安裝-docker-compose\"><a class=\"anchor\" href=\"#安裝-docker-compose\">#</a> 安裝 Docker-Compose</h2>\n<pre><code># cd /usr/bin\n# wget https://github.com/docker/compose/releases/download/1.18.0/docker-compose-Linux-x86_64\n# mv docker-compose-Linux-x86_64 docker-compose\n# chmod 755 docker-compose\n</code></pre>\n<h2 id=\"撰寫-docker-composeyml\"><a class=\"anchor\" href=\"#撰寫-docker-composeyml\">#</a> 撰寫 docker-compose.yml</h2>\n<pre><code>version: '2'\nservices:\n  db:\n     image: mysql\n     environment:\n        MYSQL_ROOT_PASSWORD: 123456\n  admin:\n     image: adminer\n     ports:\n       - 8080:8080\n</code></pre>\n<blockquote>\n<p>主要的功能是要啟動 2 個 Docker Container，一個是 mysql 的 Container，另外一個是 admin 管理 mysql Web UI 的 container</p>\n</blockquote>\n<blockquote>\n<p>MYSQL_ROOT_PASSWORD 的環境變數用來設定登入 mysql 的密碼</p>\n</blockquote>\n<blockquote>\n<p>參考網站: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9fL215c3FsLw==\">https://hub.docker.com/_/mysql/</span></p>\n</blockquote>\n<h2 id=\"啟動所有的-docker-container\"><a class=\"anchor\" href=\"#啟動所有的-docker-container\">#</a> 啟動所有的 Docker Container</h2>\n<pre><code>$ docker-compose up -d\n</code></pre>\n<ul>\n<li><code>-d</code>  參數代表要執行在背景的方式</li>\n</ul>\n<h2 id=\"查看-docker-container-的執行狀態\"><a class=\"anchor\" href=\"#查看-docker-container-的執行狀態\">#</a> 查看 Docker Container 的執行狀態</h2>\n<pre><code>$ docker-compose ps\n</code></pre>\n<h2 id=\"admin-執行\"><a class=\"anchor\" href=\"#admin-執行\">#</a> admin 執行</h2>\n<blockquote>\n<p><ins><span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgw\">http://localhost:8080</span></ins></p>\n</blockquote>\n<div class=\"note warning\">\n<p><strong>其他指令可以參考官方網站:</strong><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vY29tcG9zZS9jb21wb3NlLWZpbGUvY29tcG9zZS1maWxlLXYyLw==\">https://docs.docker.com/compose/compose-file/compose-file-v2/</span></p>\n</div>\n",
            "tags": [
                "資訊工程",
                "Docker",
                "Docker",
                "Practise"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/Docker_file/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/Docker_file/",
            "title": "Dockerfile",
            "date_published": "2023-05-16T11:11:57.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"yangj26952\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9pdGhlbHAuaXRob21lLmNvbS50dy9hcnRpY2xlcy8xMDE5MTAxNg==\" data-background-image=\"https://ithelp.ithome.com.tw/storage/image/fbpic.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9pdGhlbHAuaXRob21lLmNvbS50dy9hcnRpY2xlcy8xMDE5MTAxNg==\">iT邦幫忙</span>\n          <p class=\"desc\">實作撰寫第一個 Dockerfile</p>\n          </div></div></div></p>\n<h1 id=\"dockerfile\"><a class=\"anchor\" href=\"#dockerfile\">#</a> Dockerfile</h1>\n<div class=\"note info no-icon\">\n<p>Dockerfile 由一行行命令語句組成，並且支援以 # 開頭的註解行。</p>\n<p><strong>Dockerfile 分為四部分：</strong></p>\n<ul>\n<li>基底映像檔資訊</li>\n<li>維護者資訊</li>\n<li>映像檔操作指令</li>\n<li>容器啟動時執行指令。</li>\n</ul>\n</div>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># This dockerfile uses the ubuntu image </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># VERSION 2 - EDITION 1 # Author: docker_user </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Command format: Instruction [arguments / command] .. </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 基本映像檔，必須是第一個指令 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> ubuntu</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 維護者： docker_user &lt;docker_user at email.com> (@docker_user) </span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">MAINTAINER</span> docker_user docker_user@email.com </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 更新映像檔的指令 </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> echo <span class=\"token string\">\"deb http://archive.ubuntu.com/ubuntu/ raring main universe\"</span> >> /etc/apt/sources.list </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apt-get update &amp;&amp; apt-get install -y nginx </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> echo <span class=\"token string\">\"\\ndaemon off;\"</span> >> /etc/nginx/nginx.conf </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 建立新容器時要執行的指令 </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">CMD</span> /usr/sbin/nginx</span></pre></td></tr></table></figure><h2 id=\"dockerfile-基本語法\"><a class=\"anchor\" href=\"#dockerfile-基本語法\">#</a> Dockerfile 基本語法</h2>\n<p><img data-src=\"https://i.imgur.com/XjKhkvB.png\" alt=\"\" /></p>\n<h2 id=\"example\"><a class=\"anchor\" href=\"#example\">#</a> Example</h2>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> centos:7</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">MAINTAINER</span> jack</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> yum install -y wget</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> cd /</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ADD</span> jdk-8u152-linux-x64.tar.gz /</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> wget http://apache.stu.edu.tw/tomcat/tomcat-7/v7.0.82/bin/apache-tomcat-7.0.82.tar.gz</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> tar zxvf apache-tomcat-7.0.82.tar.gz</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ENV</span> JAVA_HOME=/jdk1.8.0_152</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ENV</span> PATH=<span class=\"token variable\">$PATH</span>:/jdk1.8.0_152/bin</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"/apache-tomcat-7.0.82/bin/catalina.sh\"</span>, <span class=\"token string\">\"run\"</span>]</span></pre></td></tr></table></figure><div class=\"note info no-icon\">\n<p><strong>FROM：</strong> 使用到的 Docker Image 名稱，今天使用 CentOS</p>\n<p><strong>MAINTAINER：</strong> 用來說明，撰寫和維護這個 Dockerfile 的人是誰，也可以給 E-mail 的資訊</p>\n<p><strong>RUN：</strong> RUN 指令後面放 Linux 指令，用來執行安裝和設定這個 Image 需要的東西</p>\n<p><strong>ADD：</strong> 把 Local 的檔案複製到 Image 裡，如果是 tar.gz 檔複製進去 Image 時會順便自動解壓縮。Dockerfile 另外還有一個複製檔案的指令 COPY 未來還會再介紹</p>\n<p><strong>ENV：</strong> 用來設定環境變數</p>\n<p><strong>CMD：</strong> 在指行 docker run 的指令時會直接呼叫開啟 Tomcat Service</p>\n</div>\n<h1 id=\"dockerfile-實作\"><a class=\"anchor\" href=\"#dockerfile-實作\">#</a> Dockerfile 實作</h1>\n<blockquote>\n<p>已經體驗過使用 Docker 的指令，把 Docker Image Pull 到 local，並且執行 container，然後在 container 上安裝 HTTP Service，就類似是在使用 VM。</p>\n</blockquote>\n<div class=\"note warning no-icon\">\n<p>直接進入 Docker Container 裡面下一些指令安裝程式和改設定檔，不夠自動化，可能需要常常的重覆在做同一件事，這樣會很沒效率。</p>\n<p>寫 Dockerfile，只要下  <code>docker build</code>  的指令就可以把 Docker Image 建構起來，未來要使用就直接 Run 此 Image。</p>\n</div>\n<h2 id=\"實作目標\"><a class=\"anchor\" href=\"#實作目標\">#</a> 實作目標:</h2>\n<div class=\"note success no-icon\">\n<ol>\n<li>要做到在 Dockerfile 裡面，撰寫安裝 Java 和 Tomcat 的指令，包成 Docker Image，</li>\n<li>之後只要呼叫到 docker run 指令，就可以把 Tomcat Service 啟動起來。</li>\n</ol>\n<p><strong>主要目的用來體驗如何撰寫 Dockerfile 和 Build Image 以及執行 Docker container。</strong></p>\n</div>\n<p><strong>記住要使用 WSL2 此虛擬機 來實作 Docker</strong></p>\n<blockquote>\n<p>可參考前面 安裝 Windows，或以下訊息</p>\n</blockquote>\n<div class=\"note warning no-icon\">\n<p>Docker 並非是一个通用的容器工具，它依賴於已存在並運行的 Linux 内核環境。<br />\n在 Windows 上部署 Docker 的方法都是先安装一个虛擬機，並在安装 Linux 系統的的虛擬機中運行 Docker。</p>\n</div>\n<h3 id=\"第一步\"><a class=\"anchor\" href=\"#第一步\">#</a> 第一步:</h3>\n<blockquote>\n<p>建立 Dockerfile</p>\n</blockquote>\n<ol>\n<li>\n<p>建立寫 Dockerfile 會用到的資料夾，指令如下</p>\n<pre><code class=\"language-msl\">$ mkdir docker-test\n$ cd docker-test\n</code></pre>\n</li>\n<li>\n<p>下載 JDK 的安裝檔放在 docker-test 資料夾裡，使用的版本是 jdk-19.0.2</p>\n<blockquote>\n<p>下載連結<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5qYXZhLm5ldC9qYXZhL0dBL2pkazE5LjAuMi9mZGI2OTVhOWQ5MDY0YWQ2YjA2NGRjNmRmNTc4MzgwYy83L0dQTC9vcGVuamRrLTE5LjAuMl9saW51eC14NjRfYmluLnRhci5neg==\"> https://download.java.net/java/GA/jdk19.0.2/fdb695a9d9064ad6b064dc6df578380c/7/GPL/openjdk-19.0.2_linux-x64_bin.tar.gz</span></p>\n</blockquote>\n<pre><code>sudo apt install\n</code></pre>\n<p>將檔案移至路徑 \\wsl$\\Ubuntu\\home\\[user name]\\docker-test</p>\n</li>\n<li>\n<p>撰寫 Dockerfile</p>\n<pre><code class=\"language-msl\">$ vi Dockerfile\n</code></pre>\n<blockquote>\n<p>Dockerfile 的內容如下</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> centos:7</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">MAINTAINER</span> HsingYu</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 安裝 wget，yum 是 centos 的安裝指令</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> yum install -y wget</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> cd /</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 加入 jdk-19.0.2 壓縮檔案，加入後會自動解壓縮</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ADD</span> openjdk-19.0.2_linux-x64_bin.tar.gz /</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 下載 apache-tomcat-10.1.7.tar.gz</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> wget --no-check-certificate https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.7/bin/apache-tomcat-10.1.7.tar.gz</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 解壓縮 apache-tomcat-10.1.7.tar.gz</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> tar zxvf apache-tomcat-10.1.7.tar.gz</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 設置 java 的環境變數</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ENV</span> JAVA_HOME=/jdk-19.0.2</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ENV</span> PATH=<span class=\"token variable\">$PATH</span>:/jdk-19.0.2/bin</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"/apache-tomcat-10.1.7/bin/catalina.sh\"</span>, <span class=\"token string\">\"run\"</span>]</span></pre></td></tr></table></figure></li>\n<li>\n<p>撰寫完 Dockerfile 之後資料夾的結構如下圖<br />\n<img data-src=\"https://i.imgur.com/ijrOBPR.png\" alt=\"\" width=\"300px\" /></p>\n</li>\n</ol>\n<div class=\"note success no-icon\">\n<blockquote>\n<p>或者將下載 jdk19.0.2 也寫入 Dockerfile</p>\n</blockquote>\n<figure class=\"highlight dockerfile\"><figcaption data-lang=\"Docker\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> centos:7</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">MAINTAINER</span> HsingYu</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> yum install -y wget</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> cd /</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> wget https://download.java.net/java/GA/jdk19.0.2/fdb695a9d9064ad6b064dc6df578380c/7/GPL/openjdk-19.0.2_linux-x64_bin.tar.gz</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> tar zxvf openjdk-19.0.2_linux-x64_bin.tar.gz</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> wget --no-check-certificate https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.7/bin/apache-tomcat-10.1.7.tar.gz</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> tar zxvf apache-tomcat-10.1.7.tar.gz</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ENV</span> JAVA_HOME=/jdk-19.0.2</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">ENV</span> PATH=<span class=\"token variable\">$PATH</span>:/jdk-19.0.2/bin</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"/apache-tomcat-10.1.7/bin/catalina.sh\"</span>, <span class=\"token string\">\"run\"</span>]</span></pre></td></tr></table></figure></div>\n<h3 id=\"第二步\"><a class=\"anchor\" href=\"#第二步\">#</a> 第二步:</h3>\n<blockquote>\n<p>Build Docker Image</p>\n</blockquote>\n<ol>\n<li>\n<p>預設在和 Dockerfile 檔案同層的資料夾底下輸入， docker build 指令，如下</p>\n<pre><code class=\"language-wsl\">$ docker build -t mytomcat . --no-cache\n</code></pre>\n<blockquote>\n<p>使用 --no-cache 的主要原因，是避免在 Build Docker image 時被 cache 住，而造成沒有 build 到修改過的 Dockerfile。</p>\n</blockquote>\n<blockquote>\n<p>Build 完的結果如下圖：<br />\n<img data-src=\"https://i.imgur.com/cgeexf7.png\" alt=\"\" width=\"500px\" /></p>\n</blockquote>\n</li>\n<li>\n<p>Build 完 Docker Image 之後，使用 docker images 指令查看是否有 build 成功如下圖</p>\n<p><img data-src=\"https://i.imgur.com/sBnXeZO.png\" alt=\"\" width=\"500px\" /></p>\n</li>\n</ol>\n<h3 id=\"第三步\"><a class=\"anchor\" href=\"#第三步\">#</a> 第三步:</h3>\n<blockquote>\n<p>在 Build 完 Docker Image 之後就可以執行 Docker Container，這時 Tomcat 的 Service 也會跟者被執行起來，指令如下</p>\n</blockquote>\n<p>在瀏覽器跑</p>\n<pre><code class=\"language-msl\">$ docker run -p 8080:8080 mytomcat\n</code></pre>\n<p>在虛擬機跑</p>\n<pre><code class=\"language-msl\">$ docker run mytomcat\n</code></pre>\n<p>Tomcat Service 會被執行起來的主要原因是在 Dockerfile 裡面有寫 CMD 指令，呼叫啟動 Tomcat Service</p>\n<h3 id=\"第四步\"><a class=\"anchor\" href=\"#第四步\">#</a> 第四步:</h3>\n<blockquote>\n<p>打開 Browser 確認</p>\n</blockquote>\n<ul>\n<li>要打開 Browser 確認 Tomcat Service 有沒有被執行起來時，發現我們不知道 Docker Container 的 IP，這時侯只能使用 docker exec 進入 docker container 查詢 IP 。</li>\n</ul>\n<p>要使用 docker exec 指令之前需要先知道 Container 的 ID 所以需要先使用 docker ps 指令查詢 Container ID，如下圖：</p>\n<p><img data-src=\"https://i.imgur.com/ePNiypK.png\" alt=\"\" width=\"500px\" /></p>\n<div class=\"note warning no-icon\">\n<ul>\n<li>有了 IP 之後就可以打開 Browser 輸入 <span class=\"exturl\" data-url=\"aHR0cDovLzE3Mi4xNy4wLjI6ODA4MA==\">http://172.17.0.2:8080</span> URL 的位置，確認 Tomcat Service 是否有啟動，如下圖：</li>\n</ul>\n<p><img data-src=\"https://i.imgur.com/IfxZSjY.png\" alt=\"\" width=\"500px\" /></p>\n<p>直接進入 Docker Container 去看 IP 的位址其實有點麻煩，會故意這樣 Daemon 主要的原因，是讓大家了解到我們把 Docker Container 執行啟來時並不會知道它的 IP 位址在哪，這需要透過設定有關於 Docker 的 Network 來解決這個問題。</p>\n</div>\n<div class=\"note info no-icon\">\n<p>目前使用最簡單的方法，就是在 run docker container 時用 Port 的 Mapping 來解決此問題，重新再一次 run docker container，指令如下：</p>\n<pre><code class=\"language-msl!\">$ docker run -p 8080:8080 mytomcat\n</code></pre>\n<p>Container 的 8080 port mapping 到 localhost 的 8080 port ，這樣只要輸入 <ins><span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgw\">http://localhost:8080</span></ins> 就可以看到 tomcat service 的 WebUI 畫面了。</p>\n<p><img data-src=\"https://i.imgur.com/BWhrRm7.png\" alt=\"\" width=\"500px\" /></p>\n</div>\n",
            "tags": [
                "資訊工程",
                "Docker",
                "Docker",
                "Practise"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/%E5%9F%BA%E7%A4%8E%E6%8C%87%E4%BB%A4/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/%E5%9F%BA%E7%A4%8E%E6%8C%87%E4%BB%A4/",
            "title": "基礎指令",
            "date_published": "2023-05-16T10:57:42.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"yangj26952\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9pdGhlbHAuaXRob21lLmNvbS50dy9hcnRpY2xlcy8xMDE5MDkyMQ==\" data-background-image=\"https://ithelp.ithome.com.tw/storage/image/fbpic.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9pdGhlbHAuaXRob21lLmNvbS50dy9hcnRpY2xlcy8xMDE5MDkyMQ==\">iT邦幫忙</span>\n          <p class=\"desc\">用簡單的例子來說明如何使用 Docker 指令</p>\n          </div></div></div></p>\n<h1 id=\"基礎指令\"><a class=\"anchor\" href=\"#基礎指令\">#</a> 基礎指令</h1>\n<h2 id=\"image-映像檔-常用指令\"><a class=\"anchor\" href=\"#image-映像檔-常用指令\">#</a> Image 映像檔 常用指令</h2>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>說明</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>search</td>\n<td>搜尋</td>\n<td><code>docker search [image_name]</code></td>\n</tr>\n<tr>\n<td>pull</td>\n<td>下載</td>\n<td><code>docker pull [image_name]</code></td>\n</tr>\n<tr>\n<td>images</td>\n<td>查看目前 images (列表)</td>\n<td><code>docker images</code></td>\n</tr>\n<tr>\n<td>run</td>\n<td>執行</td>\n<td><code>docker run [-ti] [centos] [/bin/bash]</code></td>\n</tr>\n<tr>\n<td>rmi [image ID]</td>\n<td>刪除</td>\n<td><code>docker rmi [615cb40d5d19]</code></td>\n</tr>\n<tr>\n<td>build</td>\n<td>建立</td>\n<td><code>docker build [-t project .]</code></td>\n</tr>\n<tr>\n<td>login</td>\n<td>登入</td>\n<td><code>docker login [docker.okborn.com]</code></td>\n</tr>\n<tr>\n<td>push</td>\n<td>上傳</td>\n<td><code>docker push</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"container-容器-常用指令\"><a class=\"anchor\" href=\"#container-容器-常用指令\">#</a> Container 容器 常用指令</h2>\n<p><img data-src=\"https://i.imgur.com/aPubKsO.png\" alt=\"\" /></p>\n<h2 id=\"registry-倉庫-常用指令\"><a class=\"anchor\" href=\"#registry-倉庫-常用指令\">#</a> Registry 倉庫 常用指令</h2>\n<p><img data-src=\"https://i.imgur.com/bNDdaPx.png\" alt=\"\" /></p>\n<h1 id=\"基礎指令實作\"><a class=\"anchor\" href=\"#基礎指令實作\">#</a> 基礎指令實作</h1>\n<h2 id=\"實作目標\"><a class=\"anchor\" href=\"#實作目標\">#</a> 實作目標：</h2>\n<div class=\"note success no-icon\">\n<ol>\n<li>先從 Docker Hub 上把 Ubuntu OS 的 image pull 到 local，</li>\n<li>有了 image 之後就可以把 Docker container 執行起來，</li>\n<li>然後進入到 container 裡面安裝和啟動 Apache 的 HTTP Service，</li>\n<li>並且寫一個有 HelloWorld 字串的 HTML 檔案。</li>\n<li>最後使用 Browser 連到 Docker Container 裡面的 HTTP Service，</li>\n<li>確認 HelloWorld 的字串能正常的顯示出來。</li>\n</ol>\n</div>\n<h2 id=\"實作的流程如下\"><a class=\"anchor\" href=\"#實作的流程如下\">#</a> 實作的流程如下：</h2>\n<div class=\"note warning no-icon\">\n<ol>\n<li>從 Docker Hub 下載 Docker Image 到 local</li>\n<li>使用 Docker Image 啟動 Docker Container 並進入 Docker Container 的 terminal</li>\n<li>在 Docker Container 裡面安裝 Apache 的 HTTP Service，並且寫一個 helloworld 的 html 檔</li>\n<li>使用 Browser 連到 helloworld.html 確認 Docker Container 有成功的被啟動起來</li>\n</ol>\n</div>\n<h3 id=\"第一步\"><a class=\"anchor\" href=\"#第一步\">#</a> 第一步:</h3>\n<blockquote>\n<p>從 Docker Hub 下載 Docker Image 到 local</p>\n</blockquote>\n<ol>\n<li>\n<p>要下載 Docker Image 之前需要先搜尋一下，Docker Image 的 Name 是什麼，指令如下：</p>\n<pre><code class=\"language-wsl\">$ docker search ubuntu -f is-official=true\n</code></pre>\n<p><code>is-official=true</code>  表示要搜尋是官方的 Docker image</p>\n<p><img data-src=\"https://i.imgur.com/nPDBOzG.png\" alt=\"\" /></p>\n<blockquote>\n<p>就選擇星星數最多的 Name 為 ubuntu</p>\n</blockquote>\n</li>\n<li>\n<p>找到了 ubuntu 的 Docker Image Name 之後，就可以把此 image pull 下來，指令如下：</p>\n<pre><code class=\"language-msl\">$ docker pull ubuntu\n</code></pre>\n<blockquote>\n<p>執行結果如下圖<br />\n<img data-src=\"https://i.imgur.com/o2n1vVO.png\" alt=\"\" /></p>\n</blockquote>\n</li>\n<li>\n<p>要再一次確認 ubuntu 的 docker image 有沒有下載下來，可以使用以下的指令</p>\n<pre><code class=\"language-wsl\">$ docker images\n</code></pre>\n<blockquote>\n<p>執行結果如下圖<br />\n<img data-src=\"https://i.imgur.com/BEMDJm4.png\" alt=\"\" /></p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"第二步\"><a class=\"anchor\" href=\"#第二步\">#</a> 第二步:</h3>\n<blockquote>\n<p>有了 Docker Image 之後就可以把 container 執行起來了，並且進入 Docker Container 的 terminal 裡面</p>\n</blockquote>\n<ol>\n<li>\n<p>指令如下</p>\n<pre><code class=\"language-wsl\">$ docker run -it -p 8000:80 ubuntu /bin/bash \n</code></pre>\n<blockquote>\n<p>使用以上的指令就可以進入了 docker container 裡面的 terminal<br />\n<img data-src=\"https://i.imgur.com/Kaw2OMU.png\" alt=\"\" /></p>\n</blockquote>\n</li>\n<li>\n<p>可以再打開另外一個 terminal 視窗，輸入以下指令</p>\n<pre><code class=\"language-wsl\">$ docker ps -a\n</code></pre>\n<blockquote>\n<p>確認 docker container 有正常的執行，如下圖：<br />\n<img data-src=\"https://i.imgur.com/VtKCJ7U.png\" alt=\"\" /></p>\n</blockquote>\n</li>\n</ol>\n<div class=\"note info no-icon\">\n<p>在要離開 docker container 的 terminal 時有一個坑。就是如果輸入 exit 指令時，container 會被關閉，如下圖：</p>\n<p><img data-src=\"https://i.imgur.com/qmcWH8Y.png\" alt=\"\" width=\"200px\" /></p>\n<p><img data-src=\"https://i.imgur.com/nYdmMzQ.png\" alt=\"\" /></p>\n<p>如果不要停止 container 而要退出 docker container 的 terminal 需要輸入 ctrl + p 之後再輸入 ctrl + q 的按鍵，就不會把 container 關閉。</p>\n</div>\n<h3 id=\"第三步\"><a class=\"anchor\" href=\"#第三步\">#</a> 第三步:</h3>\n<ol>\n<li>\n<p>在 docker container 裡面安裝和啟動 apache 的 http service，指令如下:</p>\n<pre><code class=\"language-container\">root@a03f4fc98ea2:/# apt-get update\nroot@a03f4fc98ea2:/# apt-get install -y apache2\nroot@a03f4fc98ea2:/# service apache2 start\n</code></pre>\n<blockquote>\n<p>if it is success will show<br />\n<img data-src=\"https://i.imgur.com/xbZONGP.png\" alt=\"\" /></p>\n</blockquote>\n</li>\n<li>\n<p>簡單寫一個 hellowolrd.html 檔案放在 /var/www/html 的路徑下，指令如下:</p>\n<pre><code class=\"language-container\">root@a03f4fc98ea2:/# echo &quot;HelloWorld&quot; &gt; /var/www/html/helloworld.html\n</code></pre>\n</li>\n<li>\n<p>使用 cat /etc/hosts 指令查看 docker container 的 IP 如下圖：</p>\n<p><img data-src=\"https://i.imgur.com/euRNHYl.png\" alt=\"\" width=\"350px\" /></p>\n</li>\n<li>\n<p>如果想要使用 ifconfig 指令，需要安裝 net-tools 工具指令如下:</p>\n<pre><code class=\"language-container\">root@a03f4fc98ea2:/# apt-get install -y net-tools\n</code></pre>\n</li>\n</ol>\n<h3 id=\"第四步\"><a class=\"anchor\" href=\"#第四步\">#</a> 第四步:</h3>\n<div class=\"note info no-icon\">\n<p>使用 Linux 虛擬機 GUI browser 輸入 <span class=\"exturl\" data-url=\"aHR0cDovLzE3Mi4xNy4wLjIvaGVsbG93b3JsZC5odG1s\">http://172.17.0.2/helloworld.html</span> 的 URL 查看 helloworld.html 的檔案是否能正常的顯示。</p>\n</div>\n<div class=\"note success no-icon\">\n<p>使用 Window 本機的 browser 輸入 <span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDAwL2hlbGxvd29ybGQuaHRtbA==\">http://localhost:8000/helloworld.html</span> 的 URL 查看 helloworld.html 的檔案是否能正常的顯示，畫面如下：</p>\n<p><img data-src=\"https://i.imgur.com/wObU0T6.png\" alt=\"\" /></p>\n</div>\n",
            "tags": [
                "資訊工程",
                "Docker",
                "Docker",
                "Practise"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/%E5%AE%89%E8%A3%9D/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/%E5%AE%89%E8%A3%9D/",
            "title": "安裝",
            "date_published": "2023-05-16T10:33:53.000Z",
            "content_html": "<h1 id=\"windows\"><a class=\"anchor\" href=\"#windows\">#</a> Windows</h1>\n<div class=\"note warning no-icon\">\n<p>Docker 並非是一个通用的容器工具，它依賴於已存在並運行的 Linux 内核環境。<br />\n在 Windows 上部署 Docker 的方法都是先安装一个虛擬機，並在安装 Linux 系統的的虛擬機中運行 Docker。</p>\n</div>\n<p><img data-src=\"https://i.imgur.com/g0tyGnD.png\" alt=\"\" width=\"500px\" /></p>\n<h2 id=\"使用-wsl-在-windows-上安裝-linux\"><a class=\"anchor\" href=\"#使用-wsl-在-windows-上安裝-linux\">#</a> 使用 WSL 在 Windows 上安裝 Linux</h2>\n<p>開發人員可以在 Windows 電腦上同時存取 Windows 和 Linux 的功能。<br />\nWindows 子系統 Linux 版 (WSL) 可讓開發人員直接在 Windows 上安裝 Linux 散發套件， (例如 Ubuntu、OpenSUSE、Type、Debian、Arch Linux 等) 並使用 Linux 應用程式、公用程式和 Bash 命令列工具，不需要傳統虛擬機器或雙佈設定的額外負荷。</p>\n<h3 id=\"必要條件\"><a class=\"anchor\" href=\"#必要條件\">#</a> 必要條件</h3>\n<p>您必須 Windows 10 版本 2004 和更新版本執行， (組建 19041 和更新版本) 或 Windows 11。 檢查更新。</p>\n<h3 id=\"安裝-wsl-命令\"><a class=\"anchor\" href=\"#安裝-wsl-命令\">#</a> 安裝 WSL 命令</h3>\n<p>開啟 PowerShell 或 Windows 命令提示字元 (cmd)，輸入命令，<strong>然後重新開機電腦</strong>。</p>\n<pre><code class=\"language-cmd\">wsl --install\n</code></pre>\n<ul>\n<li>啟用選用的 WSL 和虛擬機器平台元件</li>\n<li>下載並安裝最新的 Linux 核心</li>\n<li>將 WSL 2 設定為預設值</li>\n<li>可能需要下載並安裝 Ubuntu Linux 發行版本 (重新開機)</li>\n<li>您必須在此安裝程式期間重新開機電腦</li>\n</ul>\n<p>若已有其他版本，可以以此指令來下載 Ubuntu</p>\n<pre><code class=\"language-cmd\">wsl --install -d Ubuntu\n</code></pre>\n<h3 id=\"檢查-wsl-狀態\"><a class=\"anchor\" href=\"#檢查-wsl-狀態\">#</a> 檢查 WSL 狀態</h3>\n<pre><code class=\"language-cmd\">wsl --status\n</code></pre>\n<p>使用  <code>wsl --install</code>  命令安裝的新 Linux 安裝預設會設定為 WSL 2。</p>\n<h3 id=\"開啟-wsl\"><a class=\"anchor\" href=\"#開啟-wsl\">#</a> 開啟 WSL</h3>\n<pre><code class=\"language-cmd\">wsl.exe\n</code></pre>\n<h3 id=\"設定-linux-使用者名稱和密碼\"><a class=\"anchor\" href=\"#設定-linux-使用者名稱和密碼\">#</a> 設定 Linux 使用者名稱和密碼</h3>\n<p><strong>系統會要求您為 Linux 發行版本建立使用者名稱和密碼。</strong></p>\n<ul>\n<li>此使用者名稱和密碼是每個各自 Linux 發行版本專屬，不會影響您的 Windows 使用者名稱。</li>\n<li>請注意，在輸入 密碼時，畫面上不會顯示任何專案。 這稱為盲目輸入。 您不會看到您輸入的內容，這完全正常。</li>\n<li>一旦您建立使用者名稱和密碼，帳戶就會是您散發套件的預設使用者，而且會在啟動時自動登入。</li>\n<li>此帳戶將會被視為 Linux 系統管理員，並且能夠執行 sudo (超級使用者執行) 系統管理命令。</li>\n<li>在 WSL 上執行的每個 Linux 發行版本都有自己的 Linux 使用者帳戶和密碼。 每當您新增散發套件、重新安裝或重設時，都必須設定 Linux 使用者帳戶。</li>\n</ul>\n<p><img data-src=\"https://i.imgur.com/I8a6qys.png\" alt=\"\" width=\"600px\" /></p>\n<p><img data-src=\"https://i.imgur.com/MjAL9QQ.png\" alt=\"\" width=\"600px\" /></p>\n<p>若要變更或重設密碼，請開啟 Linux 發行版本，然後輸入命令：  <code>passwd</code>  。<br />\n系統會要求您輸入目前的密碼，然後要求您輸入新密碼，然後確認您的新密碼。</p>\n<h2 id=\"使用-docker-設定遠端開發容器\"><a class=\"anchor\" href=\"#使用-docker-設定遠端開發容器\">#</a> 使用 Docker 設定遠端開發容器</h2>\n<p>使用 WSL 2 (Windows 子系統 Linux 版 版本 2) 設定適用于 Windows 的 Docker Desktop。</p>\n<h3 id=\"必要條件-2\"><a class=\"anchor\" href=\"#必要條件-2\">#</a> 必要條件</h3>\n<ul>\n<li><strong>安裝 WSL</strong>，並為在 WSL 2 中執行的 Linux 發行版本設定使用者名稱和密碼。</li>\n<li><strong>安裝 Visual Studio Code (選擇性)</strong>。 這會提供最佳體驗，包括能夠在遠端 Docker 容器內撰寫程式碼和偵錯，並聯機到您的 Linux 散發套件。</li>\n<li><strong>安裝 Windows 終端機 (選擇性)</strong>。 這可提供最佳體驗，包括在同一個介面中自訂和開啟多個終端機的能力， (包括 Ubuntu、Debian、PowerShell、Azure CLI，或任何您想要使用)。</li>\n<li><strong>在 Docker Hub 註冊 Docker 識別碼， (選擇性)</strong>。</li>\n</ul>\n<h3 id=\"安裝-docker-desktop\"><a class=\"anchor\" href=\"#安裝-docker-desktop\">#</a> 安裝 Docker Desktop</h3>\n<p>請先到 Docker 官網<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZG9ja2VyLmNvbS9kb2NrZXItd2luZG93cw==\"> https://www.docker.com/docker-windows</span></p>\n<p><img data-src=\"https://i.imgur.com/xERZ8J1.png\" alt=\"\" width=\"600px\" /></p>\n<p><img data-src=\"https://i.imgur.com/tUBd3Tu.png\" alt=\"\" width=\"600px\" /></p>\n<blockquote>\n<p>在 cmd 上輸入以下指令可以確認是否下載成功<br />\n<img data-src=\"https://i.imgur.com/z1P9eef.png\" alt=\"\" width=\"400px\" /></p>\n</blockquote>\n<p><img data-src=\"https://i.imgur.com/ozFgwh2.png\" alt=\"\" width=\"600px\" /></p>\n<p><img data-src=\"https://i.imgur.com/FH6AIDV.png\" alt=\"\" width=\"600px\" /></p>\n<blockquote>\n<p>開啟 Docker Desktop</p>\n</blockquote>\n<p><img data-src=\"https://i.imgur.com/7niSOCt.png\" alt=\"\" width=\"600px\" /></p>\n<blockquote>\n<p>確定已核取 [設定&gt; 一般] 中的 [使用 WSL 2 型引擎]。</p>\n</blockquote>\n<p><img data-src=\"https://i.imgur.com/bfIPVwm.png\" alt=\"\" width=\"600px\" /></p>\n<blockquote>\n<p>移至 [設定&gt; 資源 &gt; WSL 整合]，從您想要啟用 Docker 整合的已安裝 WSL 2 散發套件中選取。</p>\n</blockquote>\n<blockquote>\n<p>若要確認已安裝 Docker，請開啟 WSL 散發套件 (例如 Ubuntu) ，並輸入下列命令來顯示版本和組建編號：  <code>docker --version</code> <br />\n<img data-src=\"https://i.imgur.com/aoHGr1q.png\" alt=\"\" width=\"600px\" /></p>\n</blockquote>\n<h3 id=\"使用下列方式執行簡單的內建-docker-映射以測試您的安裝是否正常運作\"><a class=\"anchor\" href=\"#使用下列方式執行簡單的內建-docker-映射以測試您的安裝是否正常運作\">#</a> 使用下列方式執行簡單的內建 Docker 映射，以測試您的安裝是否正常運作：</h3>\n<pre><code class=\"language-msl\">docker run hello-world\n</code></pre>\n<p><img data-src=\"https://i.imgur.com/8lN0f6o.png\" alt=\"\" width=\"600px\" /></p>\n<h3 id=\"尋找-docker-映射儲存體資料夾\"><a class=\"anchor\" href=\"#尋找-docker-映射儲存體資料夾\">#</a> 尋找 Docker 映射儲存體資料夾</h3>\n<div class=\"note success no-icon\">\n<p>Docker 會建立兩個散發資料夾來儲存資料：</p>\n<ul>\n<li><code>\\wsl$\\docker-desktop</code></li>\n<li><code>\\wsl$\\docker-desktop-data</code></li>\n</ul>\n<p>您可以開啟 WSL Linux 發行版本並輸入：  <code>explorer.exe</code>  .<br />\n 在 Windows 檔案總管中檢視資料夾，以找到這些資料夾。<br />\n輸入：  <code>\\\\wsl$</code></p>\n<p><img data-src=\"https://i.imgur.com/cIVVeGe.png\" alt=\"\" width=\"600px\" /></p>\n</div>\n",
            "tags": [
                "資訊工程",
                "Docker",
                "Docker",
                "Windows"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/%E8%99%9B%E6%93%AC%E5%8C%96%E6%8A%80%E8%A1%93/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/%E8%99%9B%E6%93%AC%E5%8C%96%E6%8A%80%E8%A1%93/",
            "title": "虛擬化技術",
            "date_published": "2023-05-16T08:52:42.000Z",
            "content_html": "<h1 id=\"虛擬化技術\"><a class=\"anchor\" href=\"#虛擬化技術\">#</a> 虛擬化技術</h1>\n<blockquote>\n<p>虛擬化要解決的問題是:「當我寫了一個程式，在我電腦上可以執行，但在別人電腦上就不行」。</p>\n</blockquote>\n<h3 id=\"but-why\"><a class=\"anchor\" href=\"#but-why\">#</a> But why?</h3>\n<ul>\n<li>作業系統不同</li>\n<li>硬體配置不同</li>\n</ul>\n<blockquote>\n<p>簡單來說：我的程式可能剛好只跟我的電腦的環境相容。😢</p>\n</blockquote>\n<h2 id=\"何謂虛擬化技術\"><a class=\"anchor\" href=\"#何謂虛擬化技術\">#</a> 何謂虛擬化技術？</h2>\n<p>而虛擬化要做的就是<strong>模擬出一個環境</strong>，讓程式可以在不同硬體或作業系統上執行時，都以為自己在同一個環境中執行，以此來避免前面所述的問題。</p>\n<div class=\"note info no-icon\">\n<p><strong>目前常見用來比較的虛擬化技術有兩種:</strong></p>\n<ul>\n<li>\n<p>在系統層級的虛擬化技術，稱虛擬機器（Virtual machine）<br />\n例如 : Virtual Box 。<br />\n<img data-src=\"https://upload.wikimedia.org/wikipedia/commons/d/d5/Virtualbox_logo.png?20150209215936\" alt=\"Virtual Box\" width=\"100px\" /></p>\n</li>\n<li>\n<p>在作業系統層級技術，此稱容器（Container）<br />\n例如 : Docker 。<br />\n<img data-src=\"https://i.imgur.com/3XLBxwq.png\" alt=\"Docker\" width=\"120px\" /></p>\n</li>\n</ul>\n</div>\n<h2 id=\"虛擬機器\"><a class=\"anchor\" href=\"#虛擬機器\">#</a> 虛擬機器</h2>\n<blockquote>\n<p>以作業系統為中心</p>\n</blockquote>\n<p><strong>傳統虛擬化的目標：</strong> 將一個應用程式所需的執行環境打包起來，建立一個獨立環境，方便在不同的硬體中移動。</p>\n<div class=\"note warning no-icon\">\n<p>虛擬機器是在系統層上虛擬化，<br />\n簡單來說， Virtual Box 就是一個可以讓你在作業系統（Host OS）上面再裝一個作業系統（Guest OS），然後讓兩個作業系統彼此不會打架的平台。</p>\n</div>\n<p><img data-src=\"https://i.imgur.com/HVBty3K.png\" alt=\"\" /></p>\n<p><img data-src=\"https://i.imgur.com/PT7njPy.png\" alt=\"\" width=\"600px\" /></p>\n<h2 id=\"容器\"><a class=\"anchor\" href=\"#容器\">#</a> 容器</h2>\n<blockquote>\n<p>以應用程式為中心</p>\n</blockquote>\n<p><strong>容器化的目標：</strong> 改善虛擬機器因為需要裝 Guest OS 導致啟動慢、佔較大記憶體的問題。</p>\n<div class=\"note warning no-icon\">\n<p>容器是在作業系統層上虛擬化，<br />\n透過 Container Manager 直接將一個應用程式所需的程式碼、函式庫打包，<br />\n建立資源控管機制隔離各個容器，並分配 Host OS 上的系統資源。<br />\n透過容器，應用程式不需要再另外安裝作業系統（Guest OS）也可以執行。</p>\n</div>\n<p><img data-src=\"https://i.imgur.com/FrgpHNd.png\" alt=\"\" width=\"600px\" /></p>\n<h2 id=\"vm-vs-container\"><a class=\"anchor\" href=\"#vm-vs-container\">#</a> VM vs. CONTAINER</h2>\n<p><img data-src=\"https://i.imgur.com/yzmJSRV.png\" alt=\"\" width=\"600px\" /></p>\n<p><img data-src=\"https://i.imgur.com/eYzpsbM.png\" alt=\"\" width=\"600px\" /></p>\n<p><img data-src=\"https://i.imgur.com/fX6VXVA.png\" alt=\"\" width=\"600px\" /></p>\n",
            "tags": [
                "資訊工程",
                "Docker",
                "Docker"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/Docker-Information/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/computer-science/Docker/Docker-Information/",
            "title": "Docker Information",
            "date_published": "2023-05-16T07:52:43.000Z",
            "content_html": "<h1 id=\"簡介\"><a class=\"anchor\" href=\"#簡介\">#</a> 簡介</h1>\n<h2 id=\"什麼是docker\"><a class=\"anchor\" href=\"#什麼是docker\">#</a> 什麼是 Docker?</h2>\n<p>Docker 是一個開源軟體，出現於 2013 年初，最初是 Dotcloud 公司內部的 Side-Project。<br />\n它基於 Google 公司推出的 Go 語言實作。(Dotcloud 公司後來改名為 Docker)</p>\n<h2 id=\"為什麼要使用docker\"><a class=\"anchor\" href=\"#為什麼要使用docker\">#</a> 為什麼要使用 Docker?</h2>\n<ul>\n<li>更有效率的利用資源</li>\n<li>統一環境</li>\n<li>對於 DevOps 的好處</li>\n<li>使開發高效且可以預測</li>\n<li>消除了重複的、平凡的配置任務，在整個開發生命週期中用於快速、簡單和可移植的應用程序開發。</li>\n</ul>\n<div class=\"note info no-icon\">\n<ul>\n<li>\n<p>Docker 想解決的問題:<br />\n 改善傳統虛擬機器因為需要額外安裝作業系統（Guest OS），導致啟動慢、佔較大記憶體的問題。</p>\n</li>\n<li>\n<p>Docker 要提供的解法：<br />\n以應用程式為核心虛擬化，取代傳統需要 Guest OS 的虛擬化技術。</p>\n</li>\n</ul>\n</div>\n<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<div class=\"note warning\">\n<p><mark>Docker 是一種工具，可用來建立、部署及執行使用容器的應用程式。</mark> 容器可讓開發人員封裝含有其所需全部元件 (程式庫、架構、相依性等) 的應用程式，且全部<mark>以一個套件的形式出貨</mark>。</p>\n<p>使用容器可確保應用程式會以相同的方式執行，而不管任何自訂的設定或先前在執行該應用程式的電腦 (可能與用來撰寫和測試應用程式程式碼的電腦不同) 上安裝的程式庫。</p>\n<p>這可讓開發人員專注於撰寫程式碼，而不需擔心程式碼將在其上執行的系統。</p>\n</div>\n<p><img data-src=\"https://i.imgur.com/fXopYNz.png\" alt=\"\" /></p>\n<h2 id=\"docker-三元素\"><a class=\"anchor\" href=\"#docker-三元素\">#</a> Docker 三元素</h2>\n<div class=\"note info\">\n<p><strong>要使用 Docker 時最重要的三個元素：<br />\n映像檔 (Image)、 容器 (Container)、 倉庫 (Repository)。</strong></p>\n<blockquote>\n<p><strong>用一個簡單的比喻來解釋 :</strong><br />\n 如果映像檔是一個做蛋糕的模具，容器則是用該模具烤出來的蛋糕，而倉庫是用來集中放置模具們的收納櫃。</p>\n</blockquote>\n</div>\n<p><img data-src=\"https://i.imgur.com/15l7FD3.png\" alt=\"\" /></p>\n<h2 id=\"image\"><a class=\"anchor\" href=\"#image\">#</a> Image</h2>\n<ul>\n<li>映像檔為一個唯獨的模板。</li>\n<li>內可包含完整的 ubuntu 作業系統環境。</li>\n<li>映像檔可用來快速生產 Docker 容器，並可重複產生。</li>\n<li>映像檔可以透過 (撰寫由命令行構成的) Dockerfile 建立，或是開放公開下載的地方取得。</li>\n</ul>\n<blockquote>\n<p>舉例來說，如果我今天想要一個 node.js 的執行環境跑我寫好的程式，我可以直接到上 Docker Hub 找到相對應的 node.js 映像檔 ，而不需要自己想辦法打包一個執行環境。</p>\n</blockquote>\n<div class=\"note info\">\n<ul>\n<li>\n<p>它是 Docker 的映像檔主要是一個唯讀的檔案， 是啟動 Docker container 要使用到的檔案。</p>\n</li>\n<li>\n<p>另外 Docker 的 image 可以像是堆積木一樣， 一層一層的把 Docker image 堆起來。</p>\n<p>如右圖：![](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmltZ3VyLmNvbS9nM1dYYlduLnBuZw==\">https://i.imgur.com/g3WXbWn.png</span> =200x)</p>\n</li>\n</ul>\n</div>\n<h2 id=\"container\"><a class=\"anchor\" href=\"#container\">#</a> Container</h2>\n<ul>\n<li>容器是由映像檔建立出來的實例。</li>\n<li>Docker 即是利用容器來執行關鍵技術。</li>\n<li>容器可以被啟動、開始、停止、刪除。</li>\n<li>且容器與容器之間是相互隔離、保證安全的。</li>\n</ul>\n<blockquote>\n<p>可以把容器看做是一個執行的應用程式加上執行它的簡易版 Linux 環境（包括 root 使用者權限、程式空間、使用者空間和網路空間等）</p>\n</blockquote>\n<div class=\"note info\">\n<ul>\n<li>\n<p>Docker Container 是透過 Docker image 執行起來的 Process，同一個 Docker image 可以啟動多個 Docker Container。</p>\n</li>\n<li>\n<p>Docker container 和 Docker container 之間的環境是隔離開離來的，不會發生 container1 開 8080 的 port，container2 開 8080 的 port 有衝到的問題</p>\n</li>\n</ul>\n</div>\n<h2 id=\"repository\"><a class=\"anchor\" href=\"#repository\">#</a> Repository</h2>\n<ul>\n<li>倉庫是集中存放映像檔檔案的場所，每個倉庫中又包含了多個映像檔。</li>\n<li>每個映像檔有不同的標籤（tag）。</li>\n<li>倉庫分為公開倉庫（Public）和私有倉庫（Private）兩種形式</li>\n<li>而最大的公開倉庫為 Docker Hub，裡面存放了大量的現成、實用映像檔供使用者下載。</li>\n</ul>\n<blockquote>\n<p>而 Docker 倉庫註冊伺服器的概念就跟 Github 類似，你可以在上面建立多個倉庫，然後透過 push、pull 的方式上傳、存取。</p>\n</blockquote>\n",
            "tags": [
                "資訊工程",
                "Docker",
                "Docker"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2637-Promise-Time-Limit/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2637-Promise-Time-Limit/",
            "title": "2637. Promise Time Limit",
            "date_published": "2023-05-16T07:21:24.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/promise-time-limit/?utm_campaign=PostD12&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=nombN5Z9\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an asyncronous function  <code>fn</code>  and a time  <code>t</code>  in milliseconds, return a new <strong>time limited</strong> version of the input function.</p>\n<p>A <strong>time limited</strong> function is a function that is identical to the original unless it takes longer than  <code>t</code>  milliseconds to fullfill. In that case, it will reject with  <code>&quot;Time Limit Exceeded&quot;</code> .  Note that it should reject with a string, not an  <code>Error</code> .</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>:<br />\nfn = async (n) =&gt; {<br />\nawait new Promise(res =&gt; setTimeout(res, 100));<br />\nreturn n * n;<br />\n}<br />\ninputs = [5]<br />\nt = 50<br />\n<strong>Output</strong>: {&quot;rejected&quot;:&quot;Time Limit Exceeded&quot;,&quot;time&quot;:50}<br />\n<strong>Explanation</strong>:<br />\nThe provided function is set to resolve after 100ms. However, the time limit is set to 50ms. It rejects at t=50ms because the time limit was reached.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>:<br />\nfn = async (n) =&gt; {<br />\nawait new Promise(res =&gt; setTimeout(res, 100));<br />\nreturn n * n;<br />\n}<br />\ninputs = [5]<br />\nt = 150<br />\n<strong>Output</strong>: {&quot;resolved&quot;:25,&quot;time&quot;:100}<br />\n<strong>Explanation</strong>:<br />\nThe function resolved 5 * 5 = 25 at t=100ms. The time limit is never reached.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input</strong>:<br />\nfn = async (a, b) =&gt; {<br />\nawait new Promise(res =&gt; setTimeout(res, 120));<br />\nreturn a + b;<br />\n}<br />\ninputs = [5,10]<br />\nt = 150<br />\n<strong>Output</strong>: {&quot;resolved&quot;:15,&quot;time&quot;:120}<br />\n<strong>Explanation</strong>:<br />\nThe function resolved 5 + 10 = 15 at t=120ms. The time limit is never reached.</p>\n</blockquote>\n<h3 id=\"example-4\"><a class=\"anchor\" href=\"#example-4\">#</a> Example 4</h3>\n<blockquote>\n<p><strong>Input</strong>:<br />\nfn = async () =&gt; {<br />\nthrow &quot;Error&quot;;<br />\n}<br />\ninputs = []<br />\nt = 1000<br />\n<strong>Output</strong>: {&quot;rejected&quot;:&quot;Error&quot;,&quot;time&quot;:0}<br />\n<strong>Explanation</strong>:<br />\nThe function immediately throws an error.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<p><code>Promise.race([arr]);</code>  : race 中的陣列哪一個 Function 先跑完，return 該 Function。</p>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;Function&#125; fn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param &#123;number&#125; t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @return &#123;Function&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">timeLimit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">const</span> timeout <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolved<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Time Limit Exceeded\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">race</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * const limited = timeLimit((t) => new Promise(res => setTimeout(res, t)), 100);</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * limited(150).catch(console.log) // \"Time Limit Exceeded\" at t=100ms</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> <span class=\"token class-name\">Fn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>params<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">timeLimit</span><span class=\"token punctuation\">(</span>fn<span class=\"token operator\">:</span> Fn<span class=\"token punctuation\">,</span> t<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Fn <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">const</span> timeout<span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">any</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolved<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">,</span> reject<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Time Limit Exceeded\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">race</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * const limited = timeLimit((t) => new Promise(res => setTimeout(res, t)), 100);</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * limited(150).catch(console.log) // \"Time Limit Exceeded\" at t=100ms</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/24-Swap-Nodes-in-Pairs/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/24-Swap-Nodes-in-Pairs/",
            "title": "24. Swap Nodes in Pairs",
            "date_published": "2023-05-16T06:38:14.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/swap-nodes-in-pairs/description/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<p><img data-src=\"https://imgur.com/HJxT8bR.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input</strong>: head = [1,2,3,4]<br />\n<strong>Output</strong>: [2,1,4,3]</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: head = []<br />\n<strong>Output</strong>: []</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input</strong>: head = [1]<br />\n<strong>Output</strong>: [1]</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Definition for singly-linked list.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ListNode</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">ListNode</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ListNode</span> next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ListNode</span> <span class=\"token function\">swapPairs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ListNode</span> head<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>head <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> head<span class=\"token punctuation\">.</span>next <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">return</span> head<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">ListNode</span> ans <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        ans<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> head<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">ListNode</span> curr <span class=\"token operator\">=</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>curr<span class=\"token punctuation\">.</span>next <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> curr<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">.</span>next <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">ListNode</span> first <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token class-name\">ListNode</span> second <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            curr<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> second<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            first<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> second<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            second<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> first<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            curr <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Linked List",
                "Recursion"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2621-Sleep/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2621-Sleep/",
            "title": "2621. Sleep",
            "date_published": "2023-05-15T02:35:00.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/sleep/?utm_campaign=PostD11&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=5Rp2Wmzo\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a positive integer  <code>millis</code> , write an asyncronous function that sleeps for  <code>millis</code>  milliseconds. It can resolve any value.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>: millis = 100<br />\n<strong>Output</strong>: 100<br />\n<strong>Explanation</strong>: It should return a promise that resolves after 100ms.<br />\nlet t = Date.now();<br />\nsleep(100).then(() =&gt; {<br />\nconsole.log(Date.now() - t); // 100<br />\n});</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: millis = 200<br />\n<strong>Output</strong>: 200<br />\n<strong>Explanation</strong>: It should return a promise that resolves after 200ms.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;number&#125; millis</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">millis</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> millis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/** </pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * let t = Date.now()</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * sleep(100).then(() => console.log(Date.now() - t)) // 100</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>millis<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> millis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/** </pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * let t = Date.now()</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * sleep(100).then(() => console.log(Date.now() - t)) // 100</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1721-Swapping-Nodes-in-a-Linked-List/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1721-Swapping-Nodes-in-a-Linked-List/",
            "title": "1721. Swapping Nodes in a Linked List",
            "date_published": "2023-05-15T01:48:06.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/swapping-nodes-in-a-linked-list/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given the  <code>head</code>  of a linked list, and an integer  <code>k</code> .</p>\n<p>Return <em>the head of the linked list after <strong>swapping</strong> the values of the  <code>kth</code>  node from the beginning and the  <code>kth</code>  node from the end (the list is <strong>1-indexed</strong>)</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<p><img data-src=\"https://imgur.com/4lQ72Hu.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input</strong>: head = [1,2,3,4,5], k = 2<br />\n<strong>Output</strong>: [1,4,3,2,5]</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: head = [7,9,6,6,7,8,3,0,9,5], k = 5<br />\n<strong>Output</strong>: [7,9,6,6,8,7,3,0,9,5]</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Definition for singly-linked list.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ListNode</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">ListNode</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ListNode</span> next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ListNode</span> <span class=\"token function\">swapNodes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ListNode</span> head<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">ListNode</span> start <span class=\"token operator\">=</span> head<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> head<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            start <span class=\"token operator\">=</span> start<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">ListNode</span> curr <span class=\"token operator\">=</span> start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>curr<span class=\"token punctuation\">.</span>next <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            curr <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            end <span class=\"token operator\">=</span> end<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> start<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        start<span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> end<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        end<span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> head<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Two Pointers",
                "Linked List"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2666-Allow-One-Function-Call/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2666-Allow-One-Function-Call/",
            "title": "2666. Allow One Function Call",
            "date_published": "2023-05-12T03:26:20.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/allow-one-function-call/description/?utm_campaign=PostD8&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=a9By01Oo\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a function  <code>fn</code> , return a new function that is identical to the original function except that it ensures  <code>fn</code>  is called at most once.</p>\n<ul>\n<li>The first time the returned function is called, it should return the same result as  <code>fn</code> .</li>\n<li>Every subsequent time it is called, it should return  <code>undefined</code> .</li>\n</ul>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>: fn = (a,b,c) =&gt; (a + b + c), calls = [[1,2,3],[2,3,6]]<br />\n<strong>Output</strong>: [{&quot;calls&quot;:1,&quot;value&quot;:6}]<br />\n<strong>Explanation</strong>:<br />\nconst onceFn = once(fn);<br />\nonceFn(1, 2, 3); // 6<br />\nonceFn(2, 3, 6); // undefined, fn was not called</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: fn = (a,b,c) =&gt; (a * b * c), calls = [[5,7,4],[2,3,6],[4,6,8]]<br />\n<strong>Output</strong>: [{&quot;calls&quot;:1,&quot;value&quot;:140}]<br />\n<strong>Explanation</strong>:<br />\nconst onceFn = once(fn);<br />\nonceFn(5, 7, 4); // 140<br />\nonceFn(2, 3, 6); // undefined, fn was not called<br />\nonceFn(4, 6, 8); // undefined, fn was not called</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;Function&#125; fn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @return &#123;Function&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">once</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">let</span> isCall <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isCall<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            isCall <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * let fn = (a,b,c) => (a + b + c)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * let onceFn = once(fn)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * onceFn(1,2,3); // 6</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * onceFn(2,3,6); // returns undefined without calling fn</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> once<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>fn<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token operator\">:</span> Parameters<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReturnType<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">let</span> isCall<span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isCall<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            isCall <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * let fn = (a,b,c) => (a + b + c)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * let onceFn = once(fn)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * onceFn(1,2,3); // 6</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * onceFn(2,3,6); // returns undefined without calling fn</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/2140-Solving-Questions-With-Brainpower/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/2140-Solving-Questions-With-Brainpower/",
            "title": "2140. Solving Questions With Brainpower",
            "date_published": "2023-05-12T02:48:50.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/solving-questions-with-brainpower/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given <strong>a 0-indexed</strong> 2D integer array  <code>questions</code>  where  <code>questions[i] = [pointsi, brainpoweri]</code> .</p>\n<p>The array describes the questions of an exam, where you have to process the questions <strong>in order</strong> (i.e., starting from question  <code>0</code> ) and make a decision whether to <strong>solve</strong> or <strong>skip</strong> each question. Solving question  <code>i</code>  will earn you  <code>pointsi</code>  points but you will be <strong>unable</strong> to solve each of the next  <code>brainpoweri</code>  questions. If you skip question  <code>i</code> , you get to make the decision on the next question.</p>\n<ul>\n<li>For example, given  <code>questions = [[3, 2], [4, 3], [4, 4], [2, 5]]</code> :\n<ul>\n<li>If question  <code>0</code>  is solved, you will earn  <code>3</code>  points but you will be unable to solve questions  <code>1</code>  and  <code>2</code> .</li>\n<li>If instead, question  <code>0</code>  is skipped and question  <code>1</code>  is solved, you will earn  <code>4</code>  points but you will be unable to solve questions  <code>2</code>  and  <code>3</code> .</li>\n</ul>\n</li>\n</ul>\n<p>Return <em>the <strong>maximum</strong> points you can earn for the exam</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong> questions = [[3,2],[4,3],[4,4],[2,5]]<br />\n<strong>Output:</strong> 5<br />\n<strong>Explanation:</strong> The maximum points can be earned by solving questions 0 and 3.</p>\n<ul>\n<li>Solve question 0: Earn 3 points, will be unable to solve the next 2 questions</li>\n<li>Unable to solve questions 1 and 2</li>\n<li>Solve question 3: Earn 2 points<br />\nTotal points earned: 3 + 2 = 5. There is no other way to earn 5 or more points.</li>\n</ul>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> questions = [[1,1],[2,2],[3,3],[4,4],[5,5]]<br />\n<strong>Output:</strong> 7<br />\n<strong>Explanation:</strong> The maximum points can be earned by solving questions 1 and 4.</p>\n<ul>\n<li>Skip question 0</li>\n<li>Solve question 1: Earn 2 points, will be unable to solve the next 2 questions</li>\n<li>Unable to solve questions 2 and 3</li>\n<li>Solve question 4: Earn 5 points<br />\nTotal points earned: 2 + 5 = 7. There is no other way to earn 7 or more points.</li>\n</ul>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">mostPoints</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> questions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> questions<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        dp<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> questions<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> questions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">int</span> skip <span class=\"token operator\">=</span> questions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> skip <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> skip <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// dp[i] = max(solve it, skip it)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Array",
                "Dynamic Programming"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2629-Function-Composition/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2629-Function-Composition/",
            "title": "2629. Function Composition",
            "date_published": "2023-05-11T01:58:09.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/function-composition/description/?utm_campaign=PostD7&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=4PY7wZM9\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an array of functions  <code>[f1, f2, f3, ..., fn]</code> , return a new function  <code>fn</code>  that is the <strong>function composition</strong> of the array of functions.</p>\n<p>The <strong>function composition</strong> of  <code>[f(x), g(x), h(x)]</code>  is  <code>fn(x) = f(g(h(x)))</code> .</p>\n<p>The <strong>function composition</strong> of an empty list of functions is the <strong>identity function</strong>  <code>f(x) = x</code> .</p>\n<p>You may assume each function in the array accepts one integer as input and returns one integer as output.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>: functions = [x =&gt; x + 1, x =&gt; x * x, x =&gt; 2 * x], x = 4<br />\n<strong>Output</strong>: 65<br />\n<strong>Explanation</strong>:<br />\nEvaluating from right to left ...<br />\nStarting with x = 4.<br />\n2 * (4) = 8<br />\n(8) * (8) = 64<br />\n(64) + 1 = 65</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: functions = [x =&gt; 10 * x, x =&gt; 10 * x, x =&gt; 10 * x], x = 1<br />\n<strong>Output</strong>: 1000<br />\n<strong>Explanation</strong>:<br />\nEvaluating from right to left ...<br />\n10 * (1) = 10<br />\n10 * (10) = 100<br />\n10 * (100) = 1000</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input</strong>: functions = [], x = 42<br />\n<strong>Output</strong>: 42<br />\n<strong>Explanation</strong>:<br />\nThe composition of zero functions is the identity function</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;Function[]&#125; functions</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @return &#123;Function&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">compose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">functions</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        functions<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            x <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * const fn = compose([x => x + 1, x => 2 * x])</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * fn(4) // 9</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">F</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>functions<span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">F</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        functions<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fn<span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            x <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * const fn = compose([x => x + 1, x => 2 * x])</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * fn(4) // 9</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1035-Uncrossed-Lines/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1035-Uncrossed-Lines/",
            "title": "1035. Uncrossed Lines",
            "date_published": "2023-05-11T01:31:10.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/uncrossed-lines/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given two integer arrays  <code>nums1</code>  and  <code>nums2</code> . We write the integers of  <code>nums1</code>  and  <code>nums2</code>  (in the order they are given) on two separate horizontal lines.</p>\n<p>We may draw connecting lines: a straight line connecting two numbers  <code>nums1[i]</code>  and  <code>nums2[j]</code>  such that:</p>\n<ul>\n<li><code>nums1[i] == nums2[j]</code> , and</li>\n<li>the line we draw does not intersect any other connecting (non-horizontal) line.</li>\n</ul>\n<p>Note that a connecting line cannot intersect even at the endpoints (i.e., each number can only belong to one connecting line).</p>\n<p>Return <em>the maximum number of connecting lines we can draw in this way</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p>![](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vX3VwbG9hZHMvcmtJak5wS04zLnBuZw==\">https://hackmd.io/_uploads/rkIjNpKN3.png</span> =400x)</p>\n<blockquote>\n<p><strong>Input:</strong> nums1 = [1,4,2], nums2 = [1,2,4]<br />\n<strong>Output:</strong> 2<br />\n<strong>Explanation:</strong> We can draw 2 uncrossed lines as in the diagram.<br />\nWe cannot draw 3 uncrossed lines, because the line from nums1[1] = 4 to nums2[2] = 4 will intersect the line from nums1[2]=2 to nums2[1]=2.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> nums1 = [2,5,1,2,5], nums2 = [10,5,2,1,5,2]<br />\n<strong>Output:</strong> 3</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input:</strong> nums1 = [1,3,7,1,7,5], nums2 = [1,9,2,5,1]<br />\n<strong>Output:</strong> 2</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">maxUncrossedLines</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> nums2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> nums2<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Array",
                "Dynamic Programming"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E5%96%AE%E5%AD%97/function-vs-feature/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E5%96%AE%E5%AD%97/function-vs-feature/",
            "title": "function vs. feature",
            "date_published": "2023-05-10T06:50:14.000Z",
            "content_html": "<p>⭐️</p>\n<div class=\"note info no-icon\">\n<p>當我們想要用英文表達「功能」這個概念的時候，到底該用 &quot;function&quot; 還是 &quot;feature&quot; 呢？</p>\n</div>\n<h2 id=\"function\"><a class=\"anchor\" href=\"#function\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUvZnVuY3Rpb24=\">function</span></h2>\n<p>(n.) <span class=\"spoiler\" title=\"你知道得太多了\">功能，用途；職責</span></p>\n<blockquote>\n<p>the natural purpose (of something) or the duty (of a person)</p>\n</blockquote>\n<ul>\n<li>指的是有目的的特定功能，比方說一項服務或產品的用途，多為基本功能的描述，如洗衣機可以洗脫烘衣服</li>\n</ul>\n<ol>\n<li>The functions of our latest model of washing machine includes washing and drying your clothes.<br />\n 這款最新機型的洗衣機功能包含清洗與烘乾衣物。</li>\n</ol>\n<h2 id=\"feature\"><a class=\"anchor\" href=\"#feature\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUvZmVhdHVyZQ==\">feature</span></h2>\n<p>(n.) <span class=\"spoiler\" title=\"你知道得太多了\">特色，特徵，特點</span></p>\n<blockquote>\n<p>a typical quality or an important part of something</p>\n</blockquote>\n<ul>\n<li>feature 則是附加功能或特殊賣點，例如洗衣機可以連 wifi 和 app 搭配使用，洗衣完成會推播通知這就是為什麼商業和科技產品文案會寫 feature，不寫 function，因為 function 很容易可滿足，所有廠商都能做得到，但是 feature 卻能夠突顯出產品的與眾不同之處，吸引消費者的目光並刺激他們的購買慾。</li>\n</ul>\n<ol>\n<li>Our latest model of washing machine has several new features such as 10 wash programs, tub clean function and delay start function etc.<br />\n 我們這款洗衣機的最新機型有很多新特色，比方說 10 種洗衣模式、洗衣槽清潔功能、延遲執行等。</li>\n</ol>\n<div class=\"note success no-icon\">\n<p><strong>近義詞</strong> attribute、characteristic，為「特色、鮮明的特徵」</p>\n</div>\n<h2 id=\"參考文獻\"><a class=\"anchor\" href=\"#參考文獻\">#</a> 參考文獻</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mdW5kYXkuYXNpYS9ibG9nRGVza3RvcC9ibG9nLmFzcD9ibG9nPTQxMg==\">https://funday.asia/blogDesktop/blog.asp?blog=412</span></li>\n</ul>\n<h2 id=\"這篇由來\"><a class=\"anchor\" href=\"#這篇由來\">#</a> 這篇由來</h2>\n<p>因為我在寫 project 時，在想 git commit specification，其中就用到了 feature 和 function，但不知如何區別兩個的使用，也發現了其實在寫軟體專案時，還蠻喜歡用 feature 的。</p>\n",
            "tags": [
                "語言",
                "英文",
                "單字",
                "難度 1",
                "英文單字"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2626-Array-Reduce-Transformation/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2626-Array-Reduce-Transformation/",
            "title": "2626. Array Reduce Transformation",
            "date_published": "2023-05-10T01:49:13.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/array-reduce-transformation/description/?utm_campaign=PostD6&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=nPN45jD9\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an integer array  <code>nums</code> , a reducer function  <code>fn</code> , and an initial value  <code>init</code> , return a <strong>reduced</strong> array.</p>\n<p>A <strong>reduced</strong> array is created by applying the following operation:  <code>val = fn(init, nums[0])</code> ,  <code>val = fn(val, nums[1])</code> ,  <code>val = fn(val, nums[2])</code> ,  <code>...</code>  until every element in the array has been processed. The final value of  <code>val</code>  is returned.</p>\n<p>If the length of the array is 0, it should return  <code>init</code> .</p>\n<p>Please solve it without using the built-in  <code>Array.reduce</code>  method.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>:<br />\nnums = [1,2,3,4]<br />\nfn = function sum(accum, curr) { return accum + curr; }<br />\ninit = 0<br />\n<strong>Output</strong>: 10<br />\n<strong>Explanation</strong>:<br />\ninitially, the value is init=0.<br />\n(0) + nums[0] = 1<br />\n(1) + nums[1] = 3<br />\n(3) + nums[2] = 6<br />\n(6) + nums[3] = 10<br />\nThe final answer is 10.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input</strong>:<br />\nnums = [1,2,3,4]<br />\nfn = function sum(accum, curr) { return accum + curr * curr; }<br />\ninit = 100<br />\n<strong>Output</strong>: 130<br />\n<strong>Explanation</strong>:<br />\ninitially, the value is init=100.<br />\n(100) + nums[0]^2 = 101<br />\n(101) + nums[1]^2 = 105<br />\n(105) + nums[2]^2 = 114<br />\n(114) + nums[3]^2 = 130<br />\nThe final answer is 130.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input</strong>:<br />\nnums = []<br />\nfn = function sum(accum, curr) { return 0; }<br />\ninit = 25<br />\n<strong>Output</strong>: 25<br />\n<strong>Explanation</strong>: For empty arrays, the answer is always init.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;number[]&#125; nums</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param &#123;Function&#125; fn</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @param &#123;number&#125; init</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @return &#123;number&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">reduce</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">,</span> init</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    nums<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        init <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> init<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> <span class=\"token class-name\">Fn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>accum<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> curr<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>nums<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fn<span class=\"token operator\">:</span> Fn<span class=\"token punctuation\">,</span> init<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    nums<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        init <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> init<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/59-Spiral-Matrix-II/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/59-Spiral-Matrix-II/",
            "title": "59. Spiral Matrix II",
            "date_published": "2023-05-10T01:32:58.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/spiral-matrix-ii/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a positive integer  <code>n</code> , generate an  <code>n x n</code>   <code>matrix</code>  filled with elements from  <code>1</code>  to  <code>n^2</code>  in spiral order.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p><img data-src=\"https://hackmd.io/_uploads/SyE0X_OVn.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> n = 3<br />\n<strong>Output:</strong> [[1,2,3],[8,9,4],[7,6,5]]</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> n = 1<br />\n<strong>Output:</strong> [[1]]</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">generateMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ans <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> top <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bottom <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right <span class=\"token operator\">&amp;&amp;</span> top <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                ans<span class=\"token punctuation\">[</span>top<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            top<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> top<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>top <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> right<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> left<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    ans<span class=\"token punctuation\">[</span>bottom<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                bottom<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> bottom<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> top<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Array",
                "Matrix",
                "Simulation"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E6%96%B0%E8%81%9E/%E4%BF%84%E5%9C%8B%E7%9A%84%E8%A8%88%E7%95%AB%E6%98%AF%E4%BB%80%E9%BA%BC%EF%BC%9F/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E6%96%B0%E8%81%9E/%E4%BF%84%E5%9C%8B%E7%9A%84%E8%A8%88%E7%95%AB%E6%98%AF%E4%BB%80%E9%BA%BC%EF%BC%9F/",
            "title": "俄國的計畫是什麼？",
            "date_published": "2023-05-09T05:48:04.000Z",
            "content_html": "<p>⭐️⭐️</p>\n<h2 id=\"俄國的計畫是什麼\"><a class=\"anchor\" href=\"#俄國的計畫是什麼\">#</a> 俄國的計畫是什麼？</h2>\n<div class=\"note info no-icon\">\n<p>俄羅斯在入侵烏克蘭幾週後終於看清自己的能力，他們的軍隊無法在三天內佔領基輔。 相反，俄國軍隊面臨頑強的抵抗，戰爭已經拖延了一年。後續可能會如何發展呢？</p>\n</div>\n<h3 id=\"what-each-side-wants\"><a class=\"anchor\" href=\"#what-each-side-wants\">#</a> What each side wants</h3>\n<p>Russia’s leadership no longer appears to be trying to <span class=\"orange\">oust</span> Ukrainian president Volodymyr Zelensky from power. <span class=\"aqua\">Instead</span>, the <span class=\"orange\">short-term goal</span> seems to be <span class=\"aqua\">gaining</span> control over the <span class=\"aqua\">territories</span> Russia <span class=\"orange\">annexed</span> last fall. Putin has said he’s <span class=\"orange\">open to negotiations</span>, while Russian <span class=\"aqua\">troops</span> continue to attack Ukraine’s cities.</p>\n<ul>\n<li>單字 oust 驅逐、推翻</li>\n<li>常見組合 short-term goal 短期目標</li>\n<li>單字 annex 併吞</li>\n<li>片語動詞 open to something 願意接受某東西\n<ul>\n<li>I'm open to discussing the possibility of a discount.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"whats-to-come\"><a class=\"anchor\" href=\"#whats-to-come\">#</a> What’s to come?</h3>\n<p><span class=\"aqua\">Military</span> <span class=\"aqua\">experts</span> warn that the situation could <span class=\"orange\">morph</span> into a <span class=\"orange\">stalemate</span> and the war might <span class=\"orange\">drag on</span> for months or even years, with neither side able to make any <span class=\"aqua\">significant</span> progress.</p>\n<ul>\n<li>單字 morph 轉化為</li>\n<li>單字 stalemate 僵局</li>\n<li>片語動詞 drag on 拖延\n<ul>\n<li>The war could drag on for years.</li>\n</ul>\n</li>\n</ul>\n<details class=\"success\"><summary>單字</summary><div>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/gain?q=gaining\"><strong>gaining</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 取得</span></p>\n<blockquote>\n<p>to get something that is useful, that gives you an advantage, or that is in some way positive, especially over a period of time</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/territory?q=territories\"><strong>territories</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 領土</span></p>\n<blockquote>\n<p>(an area of) land, or sometimes sea, that is considered as belonging to or connected with a particular country or person</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/negotiation?q=negotiations\"><strong>negotiations</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 談判</span></p>\n<blockquote>\n<p>the process of discussing something with someone in order to reach an agreement with them, or the discussions themselves</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/troops\"><strong>troops</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 軍隊</span> n.</p>\n<blockquote>\n<p>soldiers on duty in a large group</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/military?q=Military\"><strong>military</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 軍隊的</span> adj.</p>\n<blockquote>\n<p>relating to or belonging to the armed forces</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/expert?q=experts\"><strong>experts</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 專家</span></p>\n<blockquote>\n<p>a person with a high level of knowledge or skill relating to a particular subject or activity</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/significant\"><strong>significant</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 重要的</span></p>\n<blockquote>\n<p>important or noticeable</p>\n</blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<p><a href=\"https://www.hopenglish.com/hope-tips-instead-of-and-instead\"><strong>Instead</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 反而；替代</span></p>\n</div></details>\n",
            "tags": [
                "語言",
                "英文",
                "新聞",
                "英文新聞",
                "難度 2"
            ]
        }
    ]
}