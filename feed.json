{
    "version": "https://jsonfeed.org/version/1",
    "title": "MyBlog",
    "subtitle": "We are the dreamers. We make it happen 'cause we can see it.",
    "icon": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/images/favicon.ico",
    "description": "謝謝你來，謝謝你還在",
    "home_page_url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io",
    "items": [
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/1857-Largest-Color-Value-in-a-Directed-Graph/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/1857-Largest-Color-Value-in-a-Directed-Graph/",
            "title": "1857. Largest Color Value in a Directed Graph",
            "date_published": "2023-04-09T04:05:26.000Z",
            "content_html": "<p>⭐️⭐️⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/largest-color-value-in-a-directed-graph/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>There is a <strong>directed graph</strong> of  <code>n</code>  colored nodes and  <code>m</code>  edges. The nodes are numbered from  <code>0</code>  to  <code>n - 1</code> .</p>\n<p>You are given a string  <code>colors</code>  where  <code>colors[i]</code>  is a lowercase English letter representing the color of the ith node in this graph <strong>(0-indexed)</strong>. You are also given a 2D array  <code>edges</code>  where  <code>edges[j] = [aj, bj]</code>  indicates that there is a <strong>directed edge</strong> from node  <code>aj</code>  to node  <code>bj</code> .</p>\n<p>A valid <strong>path</strong> in the graph is a sequence of nodes  <code>x1 -&gt; x2 -&gt; x3 -&gt; ... -&gt; xk</code>  such that there is a directed edge from  <code>xi</code>  to  <code>xi+1</code>  for every  <code>1 &lt;= i &lt; k</code> . The <strong>color value</strong> of the path is the number of nodes that are colored the <strong>most frequently</strong> occurring color along that path.</p>\n<p>Return <em>the largest color value of any valid path in the given graph, or  <code>-1</code>  if the graph contains a cycle</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p><img data-src=\"https://i.imgur.com/Ezl9LHW.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> colors = &quot;abaca&quot;, edges = [[0,1],[0,2],[2,3],[3,4]]<br />\n<strong>Output</strong>: 3<br />\n<strong>Explanation:</strong> The path 0 -&gt; 2 -&gt; 3 -&gt; 4 contains 3 nodes that are colored  <code>&quot;a&quot; (red in the above image)</code> .</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<p><img data-src=\"https://i.imgur.com/fX0Rnyq.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> colors = &quot;a&quot;, edges = [[0,0]]<br />\n<strong>Output:</strong> -1<br />\n<strong>Explanation:</strong> There is a cycle from 0 to 0.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Queue</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">largestPathValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> colors<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> edges<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> graph <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> colors<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span> inDegree<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">int</span> colorsDP<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">int</span> visited <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            graph<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> edges<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">int</span> start <span class=\"token operator\">=</span> edges<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">int</span> end <span class=\"token operator\">=</span> edges<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            graph<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            inDegree<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">Queue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> queue <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> inDegree<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inDegree<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                queue<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>queue<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">int</span> parent <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">int</span> parentColor <span class=\"token operator\">=</span> colors<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            colorsDP<span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>parentColor<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> colorsDP<span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>parentColor<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> child <span class=\"token operator\">:</span> graph<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                inDegree<span class=\"token punctuation\">[</span>child<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inDegree<span class=\"token punctuation\">[</span>child<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    queue<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">26</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                    colorsDP<span class=\"token punctuation\">[</span>child<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>colorsDP<span class=\"token punctuation\">[</span>child<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> colorsDP<span class=\"token punctuation\">[</span>parent<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            visited<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>visited <span class=\"token operator\">!=</span> length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">int</span> maxColor <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> colorsDP<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">26</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                maxColor <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxColor<span class=\"token punctuation\">,</span> colorsDP<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">return</span> maxColor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Leetcode",
                "Hash Table",
                "Graph",
                "Dynamic Programming",
                "Hard",
                "Topological Sort",
                "Memoization"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E7%89%87%E8%AA%9E/%E7%8B%84%E5%85%8B%E7%94%9F%E7%89%87%E8%AA%9E-001-005/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E7%89%87%E8%AA%9E/%E7%8B%84%E5%85%8B%E7%94%9F%E7%89%87%E8%AA%9E-001-005/",
            "title": "狄克生片語 001~005",
            "date_published": "2023-04-08T17:31:11.000Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"cb56b19d87875df0dca67ae8cb5790e343d669c54f11582fd58b0c5acef108be\">72a7b599d6d8ef30c873648ebc30db801968eb9ad03bb5003cae86002cb0622d0784256230d5e5e7e5cac3b868d6da853961a8854f4d996cf9c596c017a49806fadb60081ba9b242121ebf66a5089fc7fcf54a429303797f52f0d4c620c7f0ae9099aa2ee091a051114c6c4b3c4f5d5addf54eaeabd7b2e7b586e783a2fa95df08b95dc726cf1c9efb5f93a2f0ae459b25544743df6296ef4663de0fbb00795fcca07c11726e9893429baf8c9b0b788e5ec08ce0a023c7a7a3be02d422470478430fc54898580d77b08408e3e2267eaec0ae4c1cac235c56a6acb5c1667565b6d8006ec051399f61a28e54eba1478832b708871fa174b07f5b054e92675d6977e595782c18216d9dc564f21477790bca860a3f1a0f1cd2c4b5c84c225a1ea5cf98472ba271804121ed5a24328e81f1e78885868efe99d21b13e60175339ae5eaa6ff29119b5b8a678637c23372b95814b72cd9afe410792a58e1f020669e177ba4f9bee29d4317fee595861c9d053e56cc8ba82bb8c0e0db4e2309f9fb06dc3c237c641b4af3143ea7096dc461c2096a64343dbfaf53d03ce871bd1cc9179ea96926c2c779c194a54da4d4ca84f570c5a45bd259878da324d24d179e4ab4ffaecf94236ebd9ab3314554d1152eb2ddc2f88d94ff32e7a04388d59c9a79f9e8792b936996ea06d2d0b067d38d79c15f84c79ece5618ec160d52894625763a947eca8dcfb94fb35aa1007b75effbc9d0a2777097fa56d56918f117949611731c4547f0f64da4c9225d64714ebae67cdff4867f0a1d822ab653f4628416852f927cf5aaede757532ebbf4411d347d380524ecd65c0824dd2e1fae9c127d6c029c7d83c92428e24fd1f807890f4106066ca5d9d67b4ffea165456a988102aa270a0571688de0b52f53761cf214f399332579304f1bbca7a13d417f66930b2c9bfea790499991542f9fbc1b2eb84cd61cee43acbe479d54584b3665f2d0fa2e166214123a8b6e2c3a01f7722ff821cf731566f8c674d8fb90a3cfb34eac1d43ddc82d97d42e330d9ed4eecf29852311d2ab23b487948c0706a6f22fb7b18a1cef5505e542fe38fe95d5fc463c4628cc053831026561f4cc675771844ab9f6a90cd900504c20bfaea489df487d48aa4677d8bdccf74c56d9879971fc0d26e9551e7e199a23edc63403efe192711e111144389baf3432d8b8b29a29b699f55b8f7cf5779d9c252f7eb7b93d1556ed51166e92bf0af82f6a57f4f5ba9baee4a1ad796a3df86f76d72a355757316f78d98c1136acd5adec33256eff3b837243133320fe97d2116be15150a66c24aec8685bad9fae735bf2006bf5a4ceef07ed8f3e5d8ae8d1930a82ccb9eed7cc0f520872449de2d960b02b1908604be6bc8cb0c28eb72e023dac057cfc65f48ae0ee96b27829d6e6c926a8533b5a384ac5cd8b444bb958ffc8f11c5f4274dda2de3953d1d4996e4df1019510ffe2be8099a1c122abc6be5e9708a6994d8e2e9f06c267f3e68aab436984df1be10727ec664884a3668e80fab840fa4de6b821ddf211ece4828f904476ac15a5f2a41f4307d4c6331ec9eb54ac7462de98e17592737652e429a1918e171cd8fcd5a2934c0b115477a8c3dd0bae7639ebcb43a81499bd556d6ba3dec6215f0478ee98f153c9f2e5bf332d39d18422ec9b59159543ea89e120d690a64d287c54a7c9c60bbf378fb3d976c6729f073d0c4e8540d7b63ae9d84b9e3e98697b25ba76198b2c38f50181579a3b03c1df2a4c3ca27314a65388619e9f05d79655b9869012c18085651fffee04434c5d5070a9459389aa03da31eff9ae4d8cf092161883606945aa987825fcd3fe14a9c8fb4ca67d46c618b9a19a8f533c83fd6e2e3d9d0c06ea36c8e330f8a5bc7caa0a918a92942a31f05ddef7ce8883c087fe5c9fd418ce8b207a603648da8f12f796eb8d56b6c17551d66096eb87d41624a62ddd2776ec25777f17933b8e7d6749f93cd24145453e8f9559810e834526645c8eb1be81cfb8ea40b4f19ac3de6a23277a2b7f98c5e15c515fe3554a6eaafd981a9c622c255a4273a8f5f45b65818953ea0bdbdd8bd3e757a4228a0019da65000c916efa64ab9d712a5cfdac7224b4c2d35313b198825d7408b8346d91964fbfaa25a649293215d52de2b8c29098d3eede0a3f74a35be553989b8246cd39d833185a241c6e2d7672a1709b99fc94c82e844e0c54e2479233e4c9552bbc3d8fd767f2fd067cbda6d5e431eb092b2d5da97f3ee9356dd52f3b1401cf6b3d7676ec5d18d2460ad451243468c48e0d8c346cc25538ba65778f0d03bc6aad5edf56dee13ac5499c5fefb309ecfc5b08572337fee2d949c0846d1165224cd5b34556c30861958b34470b053edf9deb189fe2d2db200b2f53706d2226d4030f95bc65bb7be8289898bf29adbe3f5017dc792807344fbdccb5a23e06b6a2c6ea91ed9cb3c99711ab70f71cefb015b392d10dc02425183e2c59635e78c5eef61ea5827d171e52badf94cee1fbf0e4de967f9c269819ddb4532946abeec24c55e09afc0efca976aa82be4ee9b5871904bf933d13c8047b7a33569d7c932a8a22a889176b93098dd60ba8e6160c3c5ae8f1410267843451e8cc841f14e4c133bec1a0e6717f161ded178ea64ebc5b1e65a3e4dc7d5d07509ce1ec61207006454eb2df22d6de1aefccb99c735581696859c9195f2c3afdad4652e627d9af7f55b357ea72c48cb34b3cd6d42e99831beee976444b725cc7ca96f0d98f27432b8bc9fcda9cb563611e6de639ddf8d8b0fe6748db447e15ae51eb6ef9e271b08ab42dabe54831d67269105ce8fbb939526e58b22d3e09b7d1a6e5af791a3587d13fe6091c2fc5c4f1e4102890f6b325caa2a7415924b07fa70589eb537e95a0f1015d37120f951e0926c56265f0af61e7327a65918dc80cf6e7832f8795dc82697ddfcaf15a6f64bb2399c8188bad47ba4b2bbebaebc83be1a342b3c4cc1b6b11d337dc2c02100e64a7104b0fa1fd9147ed5cc1a22e2226f4bf5990fa23cf859f140618217937cbf1276be4f0494c051019a2cf337ed705922b896b12930a79dcf3f4752ac97901803a5a5beabd085d93cec6674690bd89db03c1d9d537fa8a428976c7501eff494d7cb84f1c571ca3b92ed3a5a97c12a6448c47991b10891b7d389419567ba117e858c36349c8ecc1251d00c5ad78760c9c8c91a322d6f99c98aaaf4aecf8bbabdb76284599a60815143801f1450315877dc42a38a82d0a1b1c85c60d0dbadc6c2a161b02b9324747d9997729b1f643ad525dcc4f36a14005809564d94704d8fe573e573142d63b759d123ada13f32e702f7f7e7ab14b7bd3136a5de821ebc2c5a923adceed1ba9901ecc6b3d3564ccac660ba50bd8cd9bea2a420f84fb5ac8a8d41f21844f737499fca5e5788e5553f2f87a6a91d8399cb72ba69860225525420b1791d8f38dcf6db2f9eedae673fa63c707a6db2e766bec521616bd7470350aedb75b22d05a7b230e55cf7f45fd48f6f7103c33bd691f64ca787d0a706b5e254a96de5d6e16afb4cf9f99babdb1bed029091523c3a9badd785d90232d9c1e27bdc3ecf1cdfd0991decf27285de3cd2b7b093486aee9853978c51932f18be97002af5f3a75af335e455c8e841c970b85ab7c30580b83ad65deb39adb03578ded29ff822a236d13616b93d7879b0dc30c7dc055e765e3cbb2526bc2b70ec8d23b74c8a71cd2dfcd3d4dd6096f883fc0e4740fc597062c4939b25f04752ba6d56ce1f76290b34cd2b25f6c8573b781f35f2a5af98525c123dbd6b4bae2245c5db9f0d24a7ed1ba53c09e0a344bb10d3e158940773eca499e1944e8e7f8f1d6fdf2229df541cdd072a3f345d5d8685da0f033f8987bd44eb48c3040e83d0ba287475cf76b2a7946b5502db643d93001db7788ad552ed58fbd71849b541d332683d0a1ecfbec10465907ce4daf7649902afd964a43fb40fb14dd25d3e61239ee83f1fd6d912359dd5b9bea6c886788cfa5377a02ef3242a693bea75a1dc1d3e5c09dd2809f938e70ed88d9639790a7d45fd8e3e2a0edb656e2b9c18ccf39b86ec32f885d782020a36bf8f4d2244dce8ef6411524097d6c1b3c8e23b7c5a36611e16ec4bc1f81363a030d7ba3ca2be6335b3035aac00dda1011e605b4085a6e5cefbfc2682739c413d705ab9906ec7135cdfe67f669c4e7bc1946b301a9b801f5acfa2d9ef4f2f49ed3dc4a988eec33390283c06ff28b8e22c60d2cd7b1e31e2e2aae087ac7f972e320bf85d3de89a4bdfb92811124d5487a9361997dd2e845e3a9bdb7bca0b6ce6dfc5712226f2a61a328e284fe82e7223c7830534b05109caf32400c6184ca9f6f8ba2d452ce12a9c835c0c284097103b5e80490560220aa893dd9b3a4297e7de22ca96e43e6ab554d40a2eadb4b6824d5cf03d551ee2c2a8179fe40900ade9f10057cd35f7660688574cc1cbc211ad7b2721c9c4384225b47501a571eaeaaf32653593f9d2c48a31f9af81cd29cfac69a4da2c8add698d149d96ac0364ac0799b61efc0b9aff6e57fe89c69eb1a6d71730ebd732a7aec22dfbd7516f8d886ea93eb4dd1927b67c548b772a05e11a7469e22d218bf04959db3f391a5aea496fd4deff30fb19bb5c9ca6987637923fba1a8b222bf76571234719ed0e146c668f86ea15620936a30dc95</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">請輸入密碼</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "語言",
                "英文",
                "片語",
                "難度 1",
                "英文片語"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-1237-Expert-Enough/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-1237-Expert-Enough/",
            "title": "uva 1237 - Expert Enough?",
            "date_published": "2023-04-08T16:27:36.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXJvanVkZ2UudHcvU2hvd1Byb2JsZW0/cHJvYmxlbWlkPWY0NDY=\">ZeroJudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTIvcDEyMzcucGRm\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhwP29wdGlvbj1jb21fb25saW5lanVkZ2UmYW1wO0l0ZW1pZD04JmFtcDtjYXRlZ29yeT0yNDcmYW1wO3BhZ2U9c2hvd19wcm9ibGVtJmFtcDtwcm9ibGVtPTM2Nzg=\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTIzNw==\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>Auto-mobile Charting &amp; Manufacturing (ACM) is a company that specializes in manufacturing automobile spare parts. Being one of the leading automotive companies in the world, ACM are sure to keep up the latest information in that world. In the 100-year anniversary of the company, ACM compiled a huge list of range of prices of any automobiles ever recorded in the history. ACM then wants to develop a program that they called Automobile Expert System or AES for short.</p>\n<p>The program receives a price  <code>P</code>  as an input, and searches through the database for a car maker in which  <code>P</code>  falls in their range of lowest price  <code>L</code>  and highest price  <code>H</code>  of car they ever made. The program then output the car maker name. If the database contains no or more than one car maker that satisfies the query, the program produce output  <code>‘UNDETERMINED’</code>  (without quotes). Not so expert, huh? You are about to develop that program for ACM.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>The input begins with a line containing an integer  <code>T (T ≤ 10)</code> , the number of test cases follow. Each case begins with the size of the database  <code>D (D &lt; 10000)</code> . The next each of  <code>D</code>  lines contains  <code>M</code> ,  <code>L</code>  and  <code>H (0 &lt; L &lt; H &lt; 1000000)</code>  which are the name of the maker (contains no whitespace and will never exceeds 20 characters), the car’s lowest price the maker ever made, and the car’s highest price the maker ever made respectively. Then there is the number of query  <code>Q (Q &lt; 1000)</code>  follows. Each of the next  <code>Q</code>  lines contains an integer  <code>P (0 &lt; P &lt; 1000000)</code> , the query price.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>Output for each query should be one line containing the name of the maker, or the string  <code>‘UNDETERMINED’</code>  (without quotes) if there is no maker or more than one maker that satisfies the query. You should separate output for different case by one empty line.</p>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>1<br />\n4<br />\nHONDA 10000 45000<br />\nPEUGEOT 12000 44000<br />\nBMW 30000 75900<br />\nCHEVROLET 7000 37000<br />\n4<br />\n60000<br />\n7500<br />\n5000<br />\n10000</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>BMW<br />\nCHEVROLET<br />\nUNDETERMINED<br />\nUNDETERMINED</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Java I/O 加速 Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">InputStream</span> inputStream <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">OutputStream</span> outputStream <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">PrintWriter</span> out <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">(</span>outputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">CPE</span> slove <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CPE</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        slove<span class=\"token punctuation\">.</span><span class=\"token function\">slover</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> in<span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        out<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CPE</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">slover</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> testNumber<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Scanner</span> in<span class=\"token punctuation\">,</span> <span class=\"token class-name\">PrintWriter</span> out<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">int</span> <span class=\"token class-name\">T</span> <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">int</span> <span class=\"token class-name\">D</span> <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token class-name\">Map</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token operator\">></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">D</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token class-name\">String</span> <span class=\"token class-name\">M</span> <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token constant\">LH</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token constant\">LH</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token constant\">LH</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token constant\">LH</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">M</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token keyword\">int</span> <span class=\"token class-name\">Q</span> <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">Q</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> ans <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    <span class=\"token keyword\">int</span> <span class=\"token class-name\">P</span> <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> m <span class=\"token operator\">:</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token class-name\">P</span> <span class=\"token operator\">&amp;&amp;</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token class-name\">P</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                            ans<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                        out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                        out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UNDETERMINED\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "解題筆記",
                "CPE",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E6%96%87%E6%B3%95/Part-1-%E5%96%AE%E5%8F%A5-%E5%9F%BA%E6%9C%AC%E5%8F%A5%E5%9E%8B/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E6%96%87%E6%B3%95/Part-1-%E5%96%AE%E5%8F%A5-%E5%9F%BA%E6%9C%AC%E5%8F%A5%E5%9E%8B/",
            "title": "Part 1 單句: 基本句型 - 第一部分",
            "date_published": "2023-04-08T08:58:11.000Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"72265cee4deea0b5c798d6112aacb39e917bfe8efb60f3ea6d992b6e7ae32c0d\">72a7b599d6d8ef30c873648ebc30db801968eb9ad03bb5003cae86002cb0622db290ae4e4d759d3f86fddf84119f44f3f83e9818958c7cc4191b2b429a922369cf7b3df34f6978aa2bb35ab0ff76d20d29b22b6cc14603462654ea37254acaf43fa2690572744ebd1e443c4ca68d6f2bd34dec4400d2256968e0b349bf3f22b9125d84f2870e32490e8cc7a95d5daa7168b377cdb9da305c298f6039db82344453b3d5975d6af503371376b56c255e58a142fd0eca502bdc807f48062ad6b3398ce7f4cb7fc351c0ad4358f24b4793402b4c1f33d114f2488b197986edfd944c7abc7527b7bb530804a5fd54e4e159461a63a504418698583b83a1a764ed093cd1282865d6b2388af38b0e3ea3e61ffc659e97c14a8d2c1b37b7a3051bcbea4105ba1d2f454acf326c802b9ff6b9d3da7a37ff282cd68af3bbea223007754c94dd8b7b5683aed99a73b935200221da6dc76c90c14b5153e1e47a8b0c54855ac69118eee11f6b314a6229b3fff0285702fde306da3290d8b05564b3be17c2c0fdceca386e8fcc33dc759b4221d1d8f48bfbb8cd33c977664442f8c89d74e5556123fbd69964721b80b4084a9bd8c48ab5b47332d49c2a9bf8c539294eea07c5c8db9c18020ac9a4f004e9e6374b42dd6abeca0e12f7ca9e90ccc52c5d66eddb713c114f3192d860b2c0f75beca1990101dfc35d762a5c1e83f1df66ef949db4178d18f520f71dc5a24cf9e60031cd7fd37e4c4382736e7bbbed6a7bf3884ab1e3570fcc3d0ec5b6c6ab77011ed2c7ea72e2f0fa87b1119800f632198d8af82aa0dce7b8cd4dc5c7ecba2c06889ccb680b177272c0adfc3cf129adcda13f030e5da8515e40db4f914c65a951c1801e77b96d480acfcbd715fb0b54484ceeec77dd2a91a06297aaef932a085a654518593e45c36c957ac32bbe356210566d711907563255df8a0aeb6ab112537a31d72e5e74a2aa50c2f420bbcdac8a043c634ab89147503ff7b74732dbb1603c65f90a9421745774bdec6927dee2d7ee131102b52a571e33d7f8d08b5f256c0ba50d13e949d690b81b666f5c5d3de652c370e069ca91c3ae4394a6b6a92862733bdb4dbbaedd67394cb4ac241f097a01ba6b77099611e5411ffc653e3fc6a725c178d29922652553214f1e302c64a23c74efc2438d4784b3d16ca2bd9d4f07ca36213a9a318906e88d21b50cdfb3237cfaf4768185210628d6338cbc85111a89399874d374046d8da729376362e2d530fec94d1e33e0fd9fc838f50d432d07d1d17e02a7f631d3565e81de188aff7054f66389ea049de6f37411d259c05ce9befb42e9df77405882961ce6d0f90dea31eacb119be734a39de33149bb0cb3e1b281f73b537638e1604c60af934960a694919742ecc9627b6234ca8a0f09a5ddf3997ee6e6779fbbe149926c378e3ed857b6c9de478afd38f2bf6fbc5c426343b3627f82c8501a9669ea2598a95ed3c59205ecf845b1ee04dc08bdc20cf4bacf76a72b4a7f47d3a0eb4eeee13c4a95761e6e264393fb89549695aae2b019623530e21a7ac1109e70b6073744c601026c0647d95a80e3bb4d7c7e84a3c951465ec776d6513bc82f5a0a9c8d34db87d82ec1a00932e5db23d872f58d9f7aa8b2b1ea3ced16c103d61e6a10923ed2c5c8e246553a548fc45dfb9be2549b940642af88a0672104d245f44b3fae51f22934321ebb7bc96ac1dcd422a75a241bdcfccaa2bb8de977133715dde3026e792b7de210bc765a42241faf8ea580c853c4e6b9bfdddfc8212bceafba2d5a7e31353e0c98cd5af96d94f1ed6ba7e57c6ff59169768da7c2d4665bc6ed772191945fb89b77fd4564cdf2b98469d98f22c5ccdb967d6eb833ba1bca452f28fb3383b75355c1aed40165ea7f4314a72ceb52f472f5f1567322551e6e13eca6f1b8aa6ec50ce11af3cda9e2257c50c0d93980888787fb918d4c53c50678dd10cf06b8efda770a11f671ae61ff193843f938b2af36f04dda8fd3be77c8255534adaa7e92fa59c12a5a0ba352644782e09560238bc83bdc4a40b2a82e633e7891cf3781aa384f0ccfc911595b32f8584a55553c474f08533b296f8d62bf53f30f41a211493f294a595a31609a103c6dbd761d947f914c2445f65705d9f6eb9e4bd76462909693cc9495746865e1199bf08b40651bd5c9a48ab8b73dec6a2f244bb4cf09ebe62de366c8f35a2d65288e1d124f0a20c9a261ec48dc0c5255bb120ad9261ff6c4e973dc50d5d5db42153c5862a4821c24031c1a4c6fec2aabd384bc0a1ab9b40a7fb1df1a85ac11f39d31ab0e6d39315ee97ea5751f18b74fa5ff1526c6d2efebdf5d8d49e7dce6205640192de8f858c2f5b364a530518c614db0f0196b0331ac6695f2258a2a1488a3aeebbe8ded07fb891a580771509721a849d7137985aa3a1a322bd5e1dad5a20429a7fceef3bc9ccfeb1a3aac29922acff0f38307ed48e96eca0062da0c7a620591c3cbdf0793f9f2810995b6b1381640231cb46fc9b82ee933a32fc89c78d9590f57fb0184ee173e04d41d7b226f2e378b26d661b5bff9f2005f309e15daf4c2609c9c8e9096431cc16a53a0d137086897c747107c8a3ee1d40100c8c718756f6998dbb7a5f2c07b132208ad7f57e8e0bbb571926c30f2ae8e84d5ffdb446766f13265f354e6eea959cc2689f8be4755e95a955d5ef374fa31b01a98892da17ab37e84331a68541393a8328cccd12a7ec5fb8ac713bc964e1f73f4820c2abdc3a1d0c4e4036e253fd266947a8d81c18992916bfe2ffbbd1c61be09b09a4990904b16725a4bcf1f53dd5be7a60424ef15906e36b29594a13af05b83e5970774aad0510b2f7096e30e72e652032e6bfeaaf328db37d2b21901e9e38c408644b0c804913888a1cd7b0c90133fb4c636703b2d453f8607bbeb50e905735066a36db249d466580d474d58e8dde0d93628854446529d4a20568d27b6ff460d17470be01baa5554212d1e9c470f050fd53f355c4cd841fcbab2068e6c94cad17d85e7e0d40812bff11c1593904aaf5e3b2bc2c9d5ba0eaa84c2f5b5fb84c10c7a1f91eba078ca55de1f2cddac240f313b61ef04d14d44ea4ba1d83d552604585342b59d3c2984d2ade24fb42f98073bf70acb6f3c0411c13284dca6a0e652515d0a1c884eb93e9fae6a1c0dd7349501f44968042328748689b153d40c684d71a74da59641b689571624ac1e3dd6a13e31f534ebda71bb2510f3a52e83678478f15698facdbb404c2f21a8df47a5b56b0d5dd1e498f1c759b6e43d87738274ea9f4f11a855a8114087ff7c1e8ba19ccd8f759b2f9c5116e2217f5a3b0fd47eb6e91218b6893031a9e171d94e605c3a53cd21be30c07202a8a4aaa535371953ed80b5f1ea09debfef1f75c90f6f202c601c216b5a342c7f4fca04c60e6593a66473de456641c636515c47093a6d449dc43ff485cf87f66c4eeb5f4d26dd98dc7b0f786a34fbf4db6816116b882685279e0bdc734643d246f3f629fd32b02985f933b293a7da93f30186d680f8adb092611f91626837d734feca477af718b028a5f2940728b661a13605be5d89a7d623d3f500b2fe9ed2a401e5f8c9cb498aff0c07582c94e3ceb4e881f8364facb43c4cd305e34c6ddb6e2212f1faf571cc44f91b150500125f31698cde22d779f8d41a6a74529e8c6cfefa6269fd7ccf35de0371f38890ef296881fca35579a5b7caa5db92f65dc39e9b497c8a50ce09c33135514092cb1c45ca2440c412b96cf592e465661f900f3b35d3b76768b10b28bebc29367c3460d5ec4f6086233e4ecb64b907c0dcb147cf225c28445de97e7f8288a75f9dd154651adbeb3713619100ba10d5ef186910ed97974e868f011c6568843512d48e1270df9bded352f210f1f49b350165b0186eba8ca41308f209057f19c8ab20a5bd6be8422931c76fa63a4ad1ba08439b4b5222d1a1b31e3a6c455532953211ecff4a43dd8e1bcfefa719eb612c6adbe9913cdb4070a56a314c7e6ca38ea936efcd1a0624b594a417257937baa710f10f57c6770776ca9ab9b23872148e8498a3b70fd888b9655d596941c1f92d617943ba8f603e6a6ec03719c1340010082c8bce182cbd997f0bb97d361a1a4224c00e4fb404c754630647b2fd48f643b299f7b2e1500e90f2846d49579a60ad6a198972bc7a14f33bd2458a69fd20ab829be4c981890777567d7987b5ff5f540acd31dc9ae2c6ccbf028fc92f4c0624343d40c02d1b00b634746d58eb90a5dc15c23af98eab3c5c820d7434b431904407420db09826a0ab06f183acdfab0502d22e70dd95f1de49fd7b61650e4905900c9ee7f5e9ed817aa7c02b240bc0859ff6dd3fc06ebfeb31d06bf5e81b805dce3cb6e5e97baa91f48b5b1eca94768605aaa21bd273ffa1525d584b6406946757bae7167bebed131c697e49f46bb0c03028d6e8dd0f34cd293e63355b16115c6845c96a4a72d030ad43f242b7b48f86445744c8a8db31afafcc7ad39b6a6edf02d68758c59febadec87d956e2085ac9317cc8eb1128946596b3e1606d9123727cbe20c8513ec174dcad057c7e73c688775a8b7d6f89dffd9e709449e8e8e3fc9e97ef736013d00175f77491e276771511fd8ea523fdb2b3192db8954751a145c106cb2792af4c89f606f7d7e32288398dbda62cb43ebae90a4993f0e70ba1ae843298b4594572600cd618ea3ba1e43cbe1d41e4d7c506639bfa8b488777bb1297e24f347ff46cec0897bb3de0ff746477bc72261391f821aa7c6915846174a29e608dd5a4b6c766a1725762ece0bb1b4acbef9e1c4c6319612a650a2bb9dedc924bde53f6e07cab1547b45ab043881244615924ed4b9f60d28220d0bfee02e9c84b429f7c4570614166e42bbd47f548a1159eb34e2fe1a800e208aab429736eace88873d43978adfe216399eeea42af96701ffe4d1a812fd6069c8b31ebf9bf546aa990cf838883c4e3a453a78217568c3c49fff4583526cb4d25a01cc393f46c78bd912ce5b990c6b4978abef456af101372445aad999c2d801e1e9889b0bfafa57f49a8abfca5c7764d46f45e7f0e6b45399cdf71ea9813a63dc2869192505246818e740fd0d73d66178b7108e57589d195d91bd92037622c1316ae4bde5d44b8ee1eb15ce94c1c89c732894d4b3326962e72e1384b6061574ad5af1f3155b7b6cb7643bca3afa3735abac218c47e3d6603910f5bdf121cb3e67a0998f153f8f262339ffba4e954b29164d71f935225565f90d8175a12d48e4c0a05e81eeafd963839302e50dcb25f2d2a76646a8e0912ec5a3d904ff76141491433793bda0d381baf0b34aef4c795f684c3750946b16ef1ca1f480597edf6a9320ad69ca2c73d34966b9a4db06c5ab18128b22cf4a33bd2b8465a74a7980b462918a249f5d887eda3626dda4340c9010940d567bc45c2349c4d53f6587de85c5c949475769e4f1420d3fc0e4b4ec81e1989cb49560f6a2c2fa4053f0b818dc28fb739e4b554a6ca219e07920c8854caf5574c5078269cc25078e621d12df4928486405448f4668e1d648747db23932da876db7a05ed6ac7b9686d0aa5abe9a6a0c7ca94b841979453e5e84a87b254baccc8415bcda6dcb5c5498187d31f91c520ac17c896c1</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">請輸入密碼</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "語言",
                "英文",
                "文法",
                "難度 1",
                "英文文法"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-1225-Digit-Counting/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-1225-Digit-Counting/",
            "title": "uva 1225 - Digit Counting",
            "date_published": "2023-04-08T08:25:23.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXJvanVkZ2UudHcvU2hvd1Byb2JsZW0/cHJvYmxlbWlkPWU1Mjg=\">ZeroJudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvMTIvcDEyMjUucGRm\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhwP29wdGlvbj1jb21fb25saW5lanVkZ2UmYW1wO0l0ZW1pZD04JmFtcDtjYXRlZ29yeT0yNDcmYW1wO3BhZ2U9c2hvd19wcm9ibGVtJmFtcDtwcm9ibGVtPTM2NjY=\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvMTIyNQ==\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>Trung is bored with his mathematics homeworks. He takes a piece of chalk and starts writing a sequence of consecutive integers starting with  <code>1 to N (1 &lt; N &lt; 10000)</code> . After that, he counts the number of times each digit  <code>(0 to 9)</code>  appears in the sequence. For example, with  <code>N = 13</code> , the sequence is:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mn>12345678910111213</mn></mrow><annotation encoding=\"application/x-tex\">12345678910111213\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">3</span><span class=\"mord\">4</span><span class=\"mord\">5</span><span class=\"mord\">6</span><span class=\"mord\">7</span><span class=\"mord\">8</span><span class=\"mord\">9</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">1</span><span class=\"mord\">3</span></span></span></span></span></p>\n<p>In this sequence,  <code>0</code>  appears  <code>once</code> ,  <code>1</code>  appears  <code>6 times</code> ,  <code>2</code>  appears  <code>2 times</code> ,  <code>3</code>  appears  <code>3 times</code> , and each digit from  <code>4</code>  to  <code>9</code>  appears  <code>once</code> . After playing for a while, Trung gets bored again. He now wants to write a program to do this for him. Your task is to help him with writing this program.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>The input file consists of several data sets. The first line of the input file contains the number of data sets which is a positive integer and is not bigger than  <code>20</code> . The following lines describe the data sets.<br />\nFor each test case, there is one single line containing the number  <code>N</code> .</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>For each test case, write sequentially in one line the number of digit  <code>0, 1, . . . 9</code>  separated by a space.</p>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>2<br />\n3<br />\n13</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>0 1 1 1 0 0 0 0 0 0<br />\n1 6 2 2 1 1 1 1 1 1</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> data <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">int</span> <span class=\"token class-name\">N</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ans <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> <span class=\"token class-name\">N</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> l <span class=\"token operator\">&lt;</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    ans<span class=\"token punctuation\">[</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "解題筆記",
                "CPE",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/133-Clone-Graph/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/133-Clone-Graph/",
            "title": "133. Clone Graph",
            "date_published": "2023-04-08T03:40:24.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/clone-graph/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a reference of a node in a <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ29ubmVjdGl2aXR5XyhncmFwaF90aGVvcnkpI0Nvbm5lY3RlZF9ncmFwaA==\">connected</span> undirected graph.</p>\n<p>Return a <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvT2JqZWN0X2NvcHlpbmcjRGVlcF9jb3B5\">deep copy</span> (clone) of the graph.</p>\n<p>Each node in the graph contains a value ( <code>int</code> ) and a list ( <code>List[Node]</code> ) of its neighbors.</p>\n<pre><code>class Node &#123;\n    public int val;\n    public List&lt;Node&gt; neighbors;\n&#125;\n</code></pre>\n<p><strong>Test case format:</strong></p>\n<p>For simplicity, each node's value is the same as the node's index (1-indexed). For example, the first node with  <code>val == 1</code> , the second node with  <code>val == 2</code> , and so on. The graph is represented in the test case using an adjacency list.</p>\n<p><strong>An adjacency list</strong> is a collection of unordered <strong>lists</strong> used to represent a finite graph. Each list describes the set of neighbors of a node in the graph.</p>\n<p>The given node will always be the first node with  <code>val = 1</code> . You must return the <strong>copy of the given node</strong> as a reference to the cloned graph.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p><img data-src=\"https://i.imgur.com/MhY9i33.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> adjList = [[2,4],[1,3],[2,4],[1,3]]<br />\n<strong>Output:</strong> [[2,4],[1,3],[2,4],[1,3]]<br />\n<strong>Explanation:</strong> There are 4 nodes in the graph.<br />\n1st node (val = 1)'s neighbors are 2nd node (val = 2) and 4th node (val = 4).<br />\n2nd node (val = 2)'s neighbors are 1st node (val = 1) and 3rd node (val = 3).<br />\n3rd node (val = 3)'s neighbors are 2nd node (val = 2) and 4th node (val = 4).<br />\n4th node (val = 4)'s neighbors are 1st node (val = 1) and 3rd node (val = 3).</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<p><img data-src=\"https://i.imgur.com/JU3ZWnn.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> adjList = [[]]<br />\n<strong>Output:</strong> [[]]<br />\n<strong>Explanation:</strong> Note that the input contains one empty list. The graph consists of only one node with val = 1 and it does not have any neighbors.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input:</strong> adjList = []<br />\n<strong>Output:</strong> []<br />\n<strong>Explanation:</strong> This an empty graph, it does not have any nodes.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// Definition for a Node.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Node</span><span class=\"token punctuation\">></span></span> neighbors<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        val <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        neighbors <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Node</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        val <span class=\"token operator\">=</span> _val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        neighbors <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Node</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _val<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Node</span><span class=\"token punctuation\">></span></span> _neighbors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        val <span class=\"token operator\">=</span> _val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        neighbors <span class=\"token operator\">=</span> _neighbors<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Node</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Node</span> <span class=\"token function\">cloneGraph</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Node</span> node<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Node</span> val <span class=\"token operator\">:</span> node<span class=\"token punctuation\">.</span>neighbors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>neighbors<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token function\">cloneGraph</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Leetcode",
                "Medium",
                "Depth-First Search",
                "Breadth-First Search",
                "Hash Table",
                "Graph"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/Reading%20Highlights/Reading-Highlights-1-Uber-The-Worlds-Modern-Taxi/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/Reading%20Highlights/Reading-Highlights-1-Uber-The-Worlds-Modern-Taxi/",
            "title": "Reading Highlights 1: Uber: The Worlds Modern Taxi",
            "date_published": "2023-04-07T04:26:45.000Z",
            "content_html": "<p>⭐️⭐️⭐️⭐️</p>\n<h2 id=\"uber-the-worlds-modern-taxi\"><a class=\"anchor\" href=\"#uber-the-worlds-modern-taxi\">#</a> Uber: The World's Modern Taxi</h2>\n<p>A new taxi trend is taking over the world. Uber doesn't have a long history, but it has proven it's here to stay by providing major benefits and a competitive spirit.</p>\n<p>Travis Kalanick and Garrett Camp launched the Uber transportation app in 2009 in San Francisco, California, US. In May 2011, it started spreading to other American cities. In December of the same year, it expanded into  its first international city - Pairs, France. Uber now operates in 58 countries and 300 cities across the globe. It's worth an estimated US$50 billion.</p>\n<p>Uber combines the traditional taxi ride with the morden technology of the 21st century. All Uber transactions are handled electronically; the app finds you a drive, navigates, and processes the paymemt. The only interaction you have with the driver is pleasant conversation. Using Uber is slightly different from a normal taxi ride because you can estimate the cost of your ride before you decide to hire a drive and split the fare with other passengers. Additionally, the app can send a text message with your Uber ride information to friends or family, adding an element of safety to your ride.</p>\n<p>Despite its many advantages, Uber has its critics. Some goverments have banned the app because its drivers aren't properly trained or insured. On February 19, Uber was declared illegal in Taiwan The goverment said that the drivers had violated the Highway Act and Transportation Management Regulations. Taxi companies have also opposed Uber, as they've lost business because of Uber's cheap rates and fast reaponse time. Protestes against Uber have become common, locally and internationally. It remains to be seen whether Uber's many advantages will win out against traditional taxis. Which one would you choose to take a ride in?</p>\n<h2 id=\"段落大意\"><a class=\"anchor\" href=\"#段落大意\">#</a> 段落大意</h2>\n<blockquote>\n<p><strong>第一段:</strong><br />\n 告知主題是要闡述 new Taxi</p>\n</blockquote>\n<blockquote>\n<p><strong>第二段</strong><br />\n Uber 發展史</p>\n</blockquote>\n<blockquote>\n<p><strong>第三段</strong><br />\n Uber 的運作模式，好處等等</p>\n</blockquote>\n<blockquote>\n<p><strong>第四段</strong><br />\n Uber 的問題或不足</p>\n</blockquote>\n<h2 id=\"reading-questions\"><a class=\"anchor\" href=\"#reading-questions\">#</a> Reading Questions<span class=\"gap\"></span></h2>\n<ol>\n<li class=\"quiz\">\n<p>Which of the following statements about Uber is TRUE?</p>\n<ul class=\"options\">\n<li class=\"correct\">It is illegal in some countries.</li>\n<li>It was started by a US taxi driver in 2009.</li>\n<li>It is more popular abroad than in the US.</li>\n<li>It operates through a control center.</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>According to the passage, how does Uber work?</p>\n<ul class=\"options\">\n<li class=\"correct\">Ubers can share the ride with other passengers.</li>\n<li>Ubers pay the transportation fare directly to the drivers.</li>\n<li>Ubers can negotiate the cost of the ride with the driver.</li>\n<li>Users have to register in paper from before using the service.</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>Compared with normal taxis, Uber is all of the following EXCEPT <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li>more advanced</li>\n<li class=\"correct\">greener</li>\n<li>less costly</li>\n<li>more convenient</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>What is one criticism of Uber based on the passage?</p>\n<ul class=\"options\">\n<li>The drivers don't show up fast enough.</li>\n<li>The drivers are not paid enough.</li>\n<li class=\"correct\">The drivers lack sufficient training.</li>\n<li>The customer service is lousy.</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "語言",
                "英文",
                "Reading Highlight",
                "英文 Reading Highlights",
                "閱讀",
                "難度 4"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/1020-Number-of-Enclaves/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/1020-Number-of-Enclaves/",
            "title": "1020. Number of Enclaves",
            "date_published": "2023-04-07T01:25:06.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/number-of-enclaves/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given an  <code>m x n</code>  binary matrix  <code>grid</code> , where  <code>0</code>  represents a sea cell and  <code>1</code>  represents a land cell.</p>\n<p>A <strong>move</strong> consists of walking from one land cell to another adjacent (<strong>4-directionally</strong>) land cell or walking off the boundary of the  <code>grid</code> .</p>\n<p>Return <em>the number of land cells in  <code>grid</code>  for which we cannot walk off the boundary of the grid in any number of <strong>moves</strong></em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p><img data-src=\"https://i.imgur.com/4Gu6b5S.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]<br />\n<strong>Output:</strong> 3<br />\n<strong>Explanation:</strong> There are three 1s that are enclosed by 0s, and one 1 that is not enclosed because its on the boundary.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<p><img data-src=\"https://i.imgur.com/3tAclvn.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]<br />\n<strong>Output:</strong> 0<br />\n<strong>Explanation:</strong> All 1s are either on the boundary or can reach the boundary.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">numEnclaves</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> grid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> grid<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> grid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> j <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> i <span class=\"token operator\">==</span> m <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> j <span class=\"token operator\">==</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    ans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> grid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        grid<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dirx <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> diry <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dirx<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> diry<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> r <span class=\"token operator\">&lt;</span> m <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">&amp;&amp;</span> grid<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Leetcode",
                "Medium",
                "Array",
                "Depth-First Search",
                "Breadth-First Search",
                "Union Find",
                "Matrix"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-948-Fibonaccimal-Base/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-948-Fibonaccimal-Base/",
            "title": "uva 948 - Fibonaccimal Base",
            "date_published": "2023-04-06T16:50:47.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXJvanVkZ2UudHcvU2hvd1Byb2JsZW0/cHJvYmxlbWlkPWExMzQ=\">ZeroJudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvOS9wOTQ4LnBkZg==\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhwP29wdGlvbj1jb21fb25saW5lanVkZ2UmYW1wO0l0ZW1pZD04JmFtcDtjYXRlZ29yeT0xMSZhbXA7cGFnZT1zaG93X3Byb2JsZW0mYW1wO3Byb2JsZW09ODg5\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvOTQ4\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>The well known Fibonacci sequence is obtained by starting with  <code>0</code>  and  <code>1</code>  and then adding the two last numbers to get the next one. For example the third number in the sequence is  <code>1 (1=1+0)</code> , the forth is  <code>2 (2=1+1)</code> , the fifth is  <code>3 (3=2+1)</code>  and so on.</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">i</th>\n<th style=\"text-align:center\">0</th>\n<th style=\"text-align:center\">1</th>\n<th style=\"text-align:center\">2</th>\n<th style=\"text-align:center\">3</th>\n<th style=\"text-align:center\">4</th>\n<th style=\"text-align:center\">5</th>\n<th style=\"text-align:center\">6</th>\n<th style=\"text-align:center\">7</th>\n<th style=\"text-align:center\">8</th>\n<th style=\"text-align:center\">9</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Fib(i)</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">13</td>\n<td style=\"text-align:center\">21</td>\n<td style=\"text-align:center\">34</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Figure 1</strong> - The first numbers in the Fibonacci sequence</p>\n<p>The sequence appears on many things in our life, in nature, and has a great significance. Among other things, do you know that all positive integer numbers can be represented as a sum of numbers in the Fibonacci sequence? More than that, all positive integers can be represented as a sum of a set of Fibonacci numbers, that is, numbers from the sequence, without repetition. For example:  <code>13</code>  can be the sum of the sets  <code>&#123;13&#125;</code> ,  <code>&#123;5,8&#125;</code>  or  <code>&#123;2,3,8&#125;</code>  and  <code>17</code>  is represented by  <code>&#123;1,3,13&#125;</code>  or  <code>&#123;1,3,5,8&#125;</code> . Since all numbers have this property (do you want to try to prove this for yourself?) this set could be a nice way to use as a &quot;base&quot; to represent the number. But, as we have seen, some numbers have more than one set whose sum is the number. How can we solve that? Simple! If we add the constraint that the sets cannot have two consecutive Fibonacci numbers, than we have a unique representation for each number! This restriction is because the sum of any two consecutive Fibonacci numbers is just the following Fibonacci number.</p>\n<p>Now that we know all this we can prepare a nice way to represent any positive integer. We will use a binary sequence (just zeros and ones) to do that. For example,  <code>17 = 1 + 3 + 13</code>  (remember that no two consecutive Fibonacci numbers can be used). Let’s write a zero for each Fibonacci number that is not used and one for each one that is used, starting at the right. Then,  <code>17 = 100101</code> . See figure 2 for a detailed explanation. In this representation we should not have zeros at the left, this is, we should only write starting with the first one. In order for you to understand better, note that in this scheme, not using two consecutive Fibonacci numbers means that the binary sequence will not have two consecutive ones. When we use this representation for a number we say that we are using the Fibonaccimal base, and we write it like  <code>17 = 100101 (fib)</code> .</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">17 =</th>\n<th style=\"text-align:center\">1</th>\n<th style=\"text-align:center\">0</th>\n<th style=\"text-align:center\">0</th>\n<th style=\"text-align:center\">1</th>\n<th style=\"text-align:center\">0</th>\n<th style=\"text-align:center\">1</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">13 + 3 + 1 =</td>\n<td style=\"text-align:center\">13</td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Figure 2</strong> - Explaining the representation of 17 in Fibonaccimal base</p>\n<p>Given a set of numbers in decimal base, your task is to write them in the Fibonaccimal base.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>The first line of input contains a single number  <code>N</code> , representing the quantity of numbers that follow  <code>(1 ≤ N ≤ 500)</code> .<br />\nThan follow exactly  <code>N</code>  lines, each one containing a single positive integer smaller than  <code>100 000 000</code> .<br />\nThese numbers can come in any order.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>You should output a single line for each of the  <code>N</code>  integers in the input, with the format  <code>'DEC_BASE = FIB_BASE (fib)'</code> .  <code>DEC_BASE</code>  is the original number in decimal base and  <code>FIB_BASE</code>  is its representation in Fibonaccimal base. See the sample output for an example.</p>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>10<br />\n1<br />\n2<br />\n3<br />\n4<br />\n5<br />\n6<br />\n7<br />\n8<br />\n9<br />\n10</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>1 = 1 (fib)<br />\n2 = 10 (fib)<br />\n3 = 100 (fib)<br />\n4 = 101 (fib)<br />\n5 = 1000 (fib)<br />\n6 = 1001 (fib)<br />\n7 = 1010 (fib)<br />\n8 = 10000 (fib)<br />\n9 = 10001 (fib)<br />\n10 = 10010 (fib)</p>\n</blockquote>\n<h2 id=\"解題技巧\"><a class=\"anchor\" href=\"#解題技巧\">#</a> 解題技巧</h2>\n<p>這題的解法跟 <a href=\"https://chenhsingyu-0212.github.io/coding/cpe/uva-763-Fibinary-Numbers/\">uva 763 - Fibinary Numbers</a> 基本上一樣，可以連結過去參考。</p>\n<p>但是要注意以下幾點區別:</p>\n<ol>\n<li>題目提到輸入數值不會大於  <code>100000000</code> ，所以這裡使用動態陣列來計算  <code>fib</code>  直到數值超過  <code>100000000</code> 。</li>\n<li>如果  <code>fib[index] &lt; num</code> ，表示他的值是對於  <code>num</code>  目前最大可以寫入  <code>1</code>  的，如果  <code>fib[index] &gt; num</code>  或  <code>num == 0</code>  表示其值為  <code>0</code> ，依照此將  <code>num</code>  數值轉換成 Fibonaccimal base。</li>\n</ol>\n<div class=\"note danger\">\n<p>雖然  <code>num</code>  的數值不會超過  <code>int(32 bits)</code>  的範圍，但是轉成  <code>Fibonaccimal base</code>  後會，所以最後輸出要以  <code>BigInteger</code>  來輸出。</p>\n</div>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BigInteger</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> fib <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        fib<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> fib<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            fib<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">int</span> fibSize <span class=\"token operator\">=</span> fib<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">int</span> <span class=\"token class-name\">N</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">N</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">+</span> <span class=\"token string\">\" = \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">String</span> ans <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> fibSize<span class=\"token punctuation\">;</span> j <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">></span> num <span class=\"token operator\">||</span> num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    ans <span class=\"token operator\">+=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    ans <span class=\"token operator\">+=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    num <span class=\"token operator\">-=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" (fib)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "解題筆記",
                "CPE",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E6%AD%8C%E6%9B%B2/Maroon-5-Memories/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E6%AD%8C%E6%9B%B2/Maroon-5-Memories/",
            "title": "Maroon 5 - Memories",
            "date_published": "2023-04-06T06:28:23.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"maroon-5-memories\"><a class=\"anchor\" href=\"#maroon-5-memories\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1TbFBoTVBuUTU4aw==\">Maroon 5 - Memories</span></h2>\n<blockquote>\n<p><strong>Maroon 5 魔力紅主唱亞當:</strong> 這首歌是寫給每位曾經歷過失去的人。換句話說，這首歌獻給我們所有人。</p>\n</blockquote>\n<div class=\"note info\">\n<p>來自於主唱亞當李維（Adam Levine）悼念早逝的魔力紅前樂團經紀人 Jordan Feldstein 的紀念單曲。</p>\n</div>\n<h3 id=\"歌詞\"><a class=\"anchor\" href=\"#歌詞\">#</a> 歌詞</h3>\n<p>Here's to the ones that we got<br />\n<span class=\"aqua\">Cheers to</span> the wish you were here, but you're not<br />\n'Cause the drinks bring back all the memories<br />\nOf everything we've been through<br />\n<span class=\"orange\">Toast to</span> the ones here today<br />\nToast to the ones that we lost on the way<br />\n'Cause the drinks bring back all the memories<br />\nAnd the <span class=\"aqua\">memories bring back</span>, memories bring back you</p>\n<p>There's a time that I remember, when I did not know <span class=\"orange\">no pain</span><br />\nWhen I believed in forever, and everything would stay the same<br />\nNow <span class=\"aqua\">my heart feel like December</span> when somebody say your name<br />\n'Cause I can't <span class=\"orange\">reach out</span> to call you, but I know I will one day, yeah<br />\nEverybody hurts sometimes<br />\nEverybody hurts someday, aye aye<br />\nBut everything gon' be alright<br />\nGo and raise a glass and say, aye</p>\n<p>Here's to the ones that we got<br />\nCheers to the wish you were here, but you're not<br />\n'Cause the drinks bring back all the memories<br />\nOf everything we've been through<br />\nToast to the ones here today<br />\nToast to the ones that we lost on the way<br />\n'Cause the drinks bring back all the memories<br />\nAnd the memories bring back, memories bring back you<br />\nDoo doo, doo doo, doo doo<br />\nDoo doo, doo doo, doo doo, doo doo<br />\nDoo doo, doo doo, doo doo doo<br />\nMemories bring back, memories bring back you</p>\n<p>There's a time that I remember when I <span class=\"aqua\">never felt so lost</span><br />\nWhen I felt all of the <span class=\"orange\">hatred</span> was <span class=\"aqua\">too powerful to stop</span> (ooh, yeah)<br />\nNow my heart feel like an <span class=\"orange\">ember</span> and <span class=\"aqua\">it's lighting up the dark</span><br />\nI'll carry these <span class=\"orange\">torches</span> for ya that you know I'll never drop, yeah<br />\nEverybody hurts sometimes<br />\nEverybody hurts someday, aye aye<br />\nBut everything gon' be alright<br />\nGo and raise a glass and say, aye</p>\n<p>Here's to the ones that we got (oh oh)<br />\nCheers to the wish you were here, but you're not<br />\n'Cause the drinks bring back all the memories<br />\nOf everything we've been through (no, no)<br />\nToast to the ones here today (aye)<br />\nToast to the ones that we lost on the way<br />\n'Cause the drinks bring back all the memories (aye)<br />\nAnd the memories bring back, memories bring back you<br />\nDoo doo, doo doo, doo doo<br />\nDoo doo, doo doo, doo doo, doo doo<br />\nDoo doo, doo doo, doo doo doo<br />\nMemories bring back, memories bring back you<br />\nDoo doo, doo doo doo doo<br />\nDoo doo, doo doo, doo doo, doo doo<br />\nDoo doo, doo doo, doo doo doo (ooh, yeah)<br />\nMemories bring back, memories bring back you<br />\nYeah, yeah, yeah<br />\nYeah, yeah, yeah, yeah, yeah, no, no<br />\nMemories bring back, memories bring back you</p>\n<details class=\"success\"><summary>單字</summary><div>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/hatred\"><strong>hatred</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 仇恨</span></p>\n<blockquote>\n<p>an extremely strong feeling of dislike</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/ember\"><strong>ember</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 餘燄未盡的木塊（或煤塊）</span></p>\n<blockquote>\n<p>a piece of wood or coal, etc. that continues to burn after a fire has no more flames</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/torch?q=torches\"><strong>torches</strong></a><br />\ncarry + <span class=\"spoiler\" title=\"你知道得太多了\">火把</span> + for</p>\n<blockquote>\n<p>a thick stick with material that burns tied to the top of it, used to give light</p>\n</blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<p><strong>Toast to</strong><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 乾杯</span></p>\n<p><strong>no pain</strong><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 不痛</span></p>\n<p><strong>reach out</strong><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 伸手</span></p>\n</div></details>\n<h2 id=\"心得\"><a class=\"anchor\" href=\"#心得\">#</a> 心得</h2>\n<p>這首歌雖然用詞簡單，但很深入人心，也很容易跟著唱！<br />\n 最近要期中考所以接下來可能東西會選簡單的英文讀物來看，再加上這首歌跟系統程式一直上到的 memory (記憶體) 同名啊！！實在是讓人一直聯想到，所以就先把他當今日英文讀物。</p>\n",
            "tags": [
                "語言",
                "英文",
                "歌曲",
                "難度 1",
                "英文歌曲"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/1254-Number-of-Closed-Islands/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/1254-Number-of-Closed-Islands/",
            "title": "1254. Number of Closed Islands",
            "date_published": "2023-04-06T05:47:04.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/number-of-closed-islands/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a 2D  <code>grid</code>  consists of  <code>0s</code>  (land) and  <code>1s</code>  (water).  An island is a maximal 4-directionally connected group of  <code>0s</code>  and a <em>closed island</em> is an island <strong>totally</strong> (all left, top, right, bottom) surrounded by  <code>1s</code> .</p>\n<p>Return <em>the number of closed islands</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p><img data-src=\"https://i.imgur.com/buypsiR.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> grid = [[1,1,1,1,1,1,1,0],[1,0,0,0,0,1,1,0],[1,0,1,0,1,1,1,0],[1,0,0,0,0,1,0,1],[1,1,1,1,1,1,1,0]]<br />\n<strong>Output:</strong> 2<br />\n<strong>Explanation:</strong><br />\nIslands in gray are closed because they are completely surrounded by water (group of 1s).</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<p><img data-src=\"https://i.imgur.com/nyVk2iD.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> grid = [[0,0,1,0,0],[0,1,0,1,0],[0,1,1,1,0]]<br />\n<strong>Output:</strong> 1</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input:</strong> grid = [[1,1,1,1,1,1,1],[1,0,0,0,0,0,1],[1,0,1,1,1,0,1],[1,0,1,0,1,0,1],<br />\n[1,0,1,1,1,0,1],[1,0,0,0,0,0,1],[1,1,1,1,1,1,1]]<br />\n<strong>Output:</strong> 2</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<p>利用  <code>dfs(Depth-First Search)</code>  去檢查如果該陣列為  <code>0</code> ，他前後左右是否會碰到  <code>1</code> ，如果碰到邊界表示封閉，如果碰到  <code>0</code>  再繼續找。</p>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">closedIsland</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> grid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> grid<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> grid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> visit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>visit<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">,</span> visit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> ans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> grid<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> visit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> x <span class=\"token operator\">>=</span> m <span class=\"token operator\">||</span> y <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> y <span class=\"token operator\">>=</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> visit<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        visit<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">boolean</span> isClosed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dirx <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> diry <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dirx<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> diry<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            isClosed <span class=\"token operator\">&amp;=</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">,</span> visit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">return</span> isClosed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Leetcode",
                "Medium",
                "Array",
                "Depth-First Search",
                "Breadth-First Search",
                "Union Find",
                "Matrix"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-913-Joana-and-the-Odd-Numbers/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-913-Joana-and-the-Odd-Numbers/",
            "title": "uva 913 - Joana and the Odd Numbers",
            "date_published": "2023-04-05T21:44:56.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXJvanVkZ2UudHcvU2hvd1Byb2JsZW0/cHJvYmxlbWlkPWU1NDk=\">ZeroJudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvNy9wNzM3LnBkZg==\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhwP29wdGlvbj1jb21fb25saW5lanVkZ2UmYW1wO0l0ZW1pZD04JmFtcDtjYXRlZ29yeT05JmFtcDtwYWdlPXNob3dfcHJvYmxlbSZhbXA7cHJvYmxlbT02Nzg=\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvNzM3\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>Joana loves playing with odd numbers. In the other day, she started writing, in each line, an odd number of odd numbers. It looked as follows:</p>\n<p>1<br />\n3 5 7<br />\n9 11 13 15 17<br />\n19 21 23 25 27 29 31<br />\n...</p>\n<p>On a <span class=\"orange\">certain</span> line Joana wrote 55 odd numbers. Can you discover the sum of the last three numbers written in that line? Can you do this more <span class=\"orange\">generally</span> for a given <span class=\"orange\">quantity</span> of odd numbers?</p>\n<p>Given the number  <code>N</code>  of odd numbers in a <span class=\"orange\">certain</span> line, your task is to determine the sum of the last three numbers of that line.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>The input is a <span class=\"aqua\">sequence</span> of lines, one odd number  <code>N (1 &lt; N &lt; 1000000000)</code>  per line</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>For each input line write the sum of the last three odd numbers written by Joana in that line with  <code>N</code>  numbers. This sum is <span class=\"orange\">guaranteed</span> to be less than 2<sup>63</sup>.</p>\n<details class=\"success\"><summary>單字</summary><div>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/certain\"><strong>certain</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 肯定</span></p>\n<blockquote>\n<p>having no doubt or knowing exactly that something is true, or known to be true, correct, exact, or effective</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/generally\"><strong>generally</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 一般地</span></p>\n<blockquote>\n<p>usually, or in most situations</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/quantity\"><strong>quantity</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 數量</span> + of</p>\n<blockquote>\n<p>the amount or number of something, especially that can be measured</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/guaranteed\"><strong>guaranteed</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 保證</span></p>\n<blockquote>\n<p>used to say that something is sure to happen or be true</p>\n</blockquote>\n</div></details>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>3<br />\n5<br />\n7</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>15<br />\n45<br />\n87</p>\n</blockquote>\n<h2 id=\"解題方法\"><a class=\"anchor\" href=\"#解題方法\">#</a> 解題方法</h2>\n<p>這題基本上就是一題數學題，需要思考的有以下幾個問題:</p>\n<ol>\n<li>如何將題目給的該行數字的個數 -&gt; 轉換成為第幾行\n<ul>\n<li>從個數轉換為是第幾行其實很容易，依照規律我們可以發現每一行的個數都為  <code>N = line * 2 - 1</code>  ，如果要算出 line 只需要兩個等式交換， <code>line = (N + 1) / 2</code> 。</li>\n</ul>\n</li>\n<li>藉由得知該行 -&gt; 算出最後一個數字\n<ul>\n<li>我們可以從前幾行看出  <code>line</code>  加上前面所有數字的個數是  <code>line * line</code>  個數字，但因為所有數字都是奇數，因此要計算最後一個奇數要將個數乘兩倍，再減去最後一個偶數，求得最後一個奇數，因此可以寫作  <code>2 * (line * line) - 1</code> 。</li>\n</ul>\n</li>\n<li>最後用最後一個數字算出後三個的總和。</li>\n</ol>\n<div class=\"note danger\">\n<p>需要特別注意的是題目提到的: <strong>This sum is <span class=\"orange\">guaranteed</span> to be less than 2<sup>63</sup></strong>.</p>\n<p>表示答案可能無法用 int (32 bits) 表示，但是可以用 long (64 bits) 表示。<br />\n❗️這裡的 long 是指 java 程式語言體系中的，如果是 c++ 需要以 long long 表示。</p>\n</div>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">.</span><span class=\"token function\">hasNextLong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">long</span> <span class=\"token class-name\">N</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextLong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">long</span> line <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">N</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">long</span> lastNum <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>line <span class=\"token operator\">*</span> line<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">long</span> ans <span class=\"token operator\">=</span> lastNum <span class=\"token operator\">+</span> lastNum <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> lastNum <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "解題筆記",
                "CPE",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E9%9B%BB%E5%BD%B1&%E5%BD%B1%E9%9B%86/Season-1-The-Flash-first-episode/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E9%9B%BB%E5%BD%B1&%E5%BD%B1%E9%9B%86/Season-1-The-Flash-first-episode/",
            "title": "Season 1: The Flash - first episode",
            "date_published": "2023-04-05T06:42:07.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<blockquote>\n<p>在這部真人版超級英雄嬉鬧影集中，一名鑑識專家昏迷甦醒後，得到驚人嶄新力量，迎戰威脅城市的惡勢力。</p>\n</blockquote>\n<h2 id=\"pilot-試播集\"><a class=\"anchor\" href=\"#pilot-試播集\">#</a> Pilot 試播集</h2>\n<div class=\"note info\">\n<p>從昏迷中甦醒後，貝利運用剛獲得的驚人速度，打擊另一名利用掌控天氣特異能力搶銀行的特異人類。</p>\n</div>\n<p><strong>44 分鐘</strong></p>\n<h2 id=\"故事大意\"><a class=\"anchor\" href=\"#故事大意\">#</a> 故事大意</h2>\n<h3 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h3>\n<p>Barry Allen 是這部 The Flash 的主角，在其小時候就一直在跑，通常因為被霸凌。<br />\n而小時後在他們家發生了奇怪無法解釋的事情，爸爸叫他一直跑一直跑...</p>\n<h3 id=\"today\"><a class=\"anchor\" href=\"#today\">#</a> TODAY</h3>\n<p>Barry Allen 成為了鑑識專家，而他爸爸因為當年的事被誤當成殺死她母親的兇手。</p>\n<p>一大早發生了命案，Barry Allen 前往現場判斷出了兩位兇手居住位置，並於晚上跟 Iris West (Joe West 的女兒，Barry Allen 暗戀她) 前往參加 STAR 的粒子加速器實驗發布會，而 Joe West (Barry Allen 爸爸的朋友，也是其養父) 前往去尋找兇手。</p>\n<p>但就在那天晚上 STAR 實驗室的實驗失敗，引發爆炸，導致 Barry Allen 被閃電擊中，他實驗室的化學試劑灑在他身上，使其昏迷長達 9 個月。<br />\n醒來後他發現他身體不太對勁，他可以跑到很快，如同閃電一樣。</p>\n<p>在某日銀行發生了搶劫，9 個月前謀殺案的兇手，大家都以為他死了，但是他竟然擁有了控制天氣的能力，創造龍捲風，而他用此能力繼續謀殺他人。<br />\nBarry Allen 在 STAR 實驗室的幫助下，以與龍捲風逆向奔跑的方式，瓦解了他的龍捲風，並由 Joe West 將其擊斃。</p>\n<h2 id=\"心得\"><a class=\"anchor\" href=\"#心得\">#</a> 心得</h2>\n<p>我之前有看過閃電俠電視影集版一兩集，覺得他是一個很有趣的題材，以快速奔跑這種超能力來描繪整個故事，不過閃電俠我偷偷看了一下後面幾季的人物介紹，牽扯到時空悖論，我覺得劇情偏複雜，所以我應該會以一個很慢的速度在看這部影集，目前想鬼轉其他部影集追，但其實我還是很喜歡這部的，而且影集版的選角我覺得很讚，主角很帥 😜 。</p>\n",
            "tags": [
                "語言",
                "英文",
                "電影&影集",
                "難度 3",
                "英文電影 & 影集",
                "科幻",
                "劇情大意"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/2439-Minimize-Maximum-of-Array/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/2439-Minimize-Maximum-of-Array/",
            "title": "2439. Minimize Maximum of Array",
            "date_published": "2023-04-05T03:58:41.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/minimize-maximum-of-array/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given a <strong>0-indexed</strong> array  <code>nums</code>  comprising of  <code>n</code>  non-negative integers.</p>\n<p>In one operation, you must:</p>\n<ul>\n<li>Choose an integer  <code>i</code>  such that  <code>1 &lt;= i &lt; n</code>  and  <code>nums[i] &gt; 0</code> .</li>\n<li>Decrease  <code>nums[i]</code>  by 1.</li>\n<li>Increase  <code>nums[i - 1]</code>  by 1.</li>\n</ul>\n<p>Return <em>the <strong>minimum</strong> possible value of the <strong>maximum</strong> integer of  <code>nums</code>  after performing <strong>any</strong> number of operations</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [3,7,1,6]<br />\n<strong>Output:</strong> 5<br />\n<strong>Explanation:</strong><br />\nOne set of optimal operations is as follows:</p>\n<ol>\n<li>Choose i = 1, and nums becomes [4,6,1,6].</li>\n<li>Choose i = 3, and nums becomes [4,6,2,5].</li>\n<li>Choose i = 1, and nums becomes [5,5,2,5].<br />\nThe maximum integer of nums is 5. It can be shown that the maximum number cannot be less than 5.<br />\nTherefore, we return 5.</li>\n</ol>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [10,1]<br />\n<strong>Output:</strong> 10<br />\n<strong>Explanation:</strong><br />\nIt is optimal to leave nums as is, and since 10 is the maximum value, we return 10.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<p>在題目敘述中我們可以知道， <code>nums</code>  這個陣列無法將前面較大的數值向後移，只能將後面的數值向前移動。</p>\n<p>因此我們可以藉由 prefix sum 來計算到目前的總值，除以現在的陣列數目，得到平均值利用高斯取頂 (ceiling function) <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⇒</mo></mrow><annotation encoding=\"application/x-tex\">\\Rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇒</span></span></span></span> 得到當前 subArray 數目的最大值</p>\n<p>並與前面的最大值比較:</p>\n<ul>\n<li>如果<strong>比較大</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⇒</mo></mrow><annotation encoding=\"application/x-tex\">\\Rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇒</span></span></span></span> 就代表後面的值可以再向前移動。</li>\n<li>如果<strong>比較小</strong> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⇒</mo></mrow><annotation encoding=\"application/x-tex\">\\Rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">⇒</span></span></span></span> 就表示雖然平均最大值可能有更小的，但是前面的值不可以往後移，因此不採用。</li>\n</ul>\n<h2 id=\"algorithm\"><a class=\"anchor\" href=\"#algorithm\">#</a> Algorithm</h2>\n<ol>\n<li>Initialize  <code>ans = 0</code>  and  <code>prefixSum = 0</code> .</li>\n<li>Iterate over  <code>nums</code> , for each index  <code>i</code> :\n<ul>\n<li>Update the prefix sum as  <code>prefixSum += nums[i]</code> .</li>\n<li>Check the maximum value we can obtain by averaging  <code>prefixSum</code>  into  <code>i + 1</code>  evenly using <strong>ceiling division</strong>.</li>\n<li>Take the larger one from  <code>ans</code>  and the result from the previous integer division.</li>\n</ul>\n</li>\n<li>Return  <code>ans</code></li>\n</ol>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">minimizeArrayValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">long</span> prefixSum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            prefixSum <span class=\"token operator\">+=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            ans <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>prefixSum <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/decrease\"><strong>decrease</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 減少</span></p>\n<blockquote>\n<p>to become less, or to make something become less</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/increase\"><strong>increase</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 增加</span></p>\n<blockquote>\n<p>to (make something) become larger in amount or size</p>\n</blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<p><strong>comprising of</strong><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 包括</span></p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Leetcode",
                "Medium",
                "Array",
                "Greedy",
                "Binary Search",
                "Dynamic Programming",
                "Prefix Sum"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-865-Substitution-Cypher/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-865-Substitution-Cypher/",
            "title": "uva 865 - Substitution Cypher",
            "date_published": "2023-04-04T17:26:41.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXJvanVkZ2UudHcvU2hvd1Byb2JsZW0/cHJvYmxlbWlkPWU1MDE=\">ZeroJudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvOC9wODY1LnBkZg==\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhwP29wdGlvbj1jb21fb25saW5lanVkZ2UmYW1wO0l0ZW1pZD04JmFtcDtjYXRlZ29yeT0xMCZhbXA7cGFnZT1zaG93X3Byb2JsZW0mYW1wO3Byb2JsZW09ODA2\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvODY1\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p><span class=\"orange\">Substitution</span> <span class=\"orange\">cyphers</span> are the simplest of cyphers where the letters of one alphabet are substituted for the letters of another alphabet. In one form or another, they’ve been in use for over 2000 years.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>The input begins with a single positive integer on a line by itself <span class=\"orange\">indicating</span> the number of the cases following, each of them as described below. This line is followed by a blank line, and there is also a blank line between two consecutive inputs.</p>\n<ul>\n<li>a line containing the <span class=\"orange\">plaintext</span> alphabet</li>\n<li>a line containing the substitution alphabet</li>\n<li>several lines of text</li>\n</ul>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>For each test case, the output must follow the description below. The outputs of two consecutive cases will be <span class=\"aqua\">separated</span> by a blank line.</p>\n<ul>\n<li>a line containing the substitution alphabet</li>\n<li>a line containing the plaintext alphabet</li>\n<li>the <span class=\"orange\">converted</span> lines of text</li>\n</ul>\n<p>Please note: All lines will be at most 64 characters, plus a <span class=\"orange\">trailing</span> end-of-line character. <span class=\"orange\">Pass through</span> all characters not found in the plaintext alphabet.</p>\n<details class=\"success\"><summary>單字</summary><div>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/substitution\"><strong>substitution</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 代換</span></p>\n<blockquote>\n<p>the use of one person or thing instead of another</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/cypher?q=cyphers\"><strong>cyphers</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 密碼</span><br />\n<span class=\"label info\"> = other spelling of cipher</span></p>\n<blockquote>\n<p>a system of writing that prevents most people from understanding the message</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/indicate?q=indicating\"><strong>indicating</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 表明</span></p>\n<blockquote>\n<p>to show, point, or make clear in another way</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/below\"><strong>below</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 以下</span></p>\n<blockquote>\n<p>in a lower position (than), under</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/converted\"><strong>converted</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 轉換</span></p>\n<blockquote>\n<p>having changed in form or character, or been made suitable for a different use</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/trailing\"><strong>trailing</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 尾隨</span></p>\n<blockquote>\n<p>Trailing plants grow along the ground or over the surface of something</p>\n</blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<p><strong>plaintext</strong><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 純文字</span></p>\n<p><strong>Pass through</strong><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 通過</span></p>\n</div></details>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>1</p>\n<p>abcdefghijklmnopqrstuvwxyz<br />\nzyxwvutsrqponmlkjihgfedcba<br />\nShar’s Birthday:<br />\nThe birthday is October 6th, but the party will be Saturday,<br />\nOctober 5. It’s my 24th birthday and the first one in some<br />\nyears for which I’ve been employed. Plus, I have new clothes.<br />\nSo I have cause to celebrate. More importantly, though,<br />\nwe’ve cleaned the house! The address is 506-D Albert Street.<br />\nExtra enticement for CS geeks: there are several systems in<br />\nthe house, and the party is conveniently scheduled for 3 hours<br />\nafter the second CSC programming contest ends (not to mention,<br />\nwithin easy walking distance)!</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>zyxwvutsrqponmlkjihgfedcba<br />\nabcdefghijklmnopqrstuvwxyz<br />\nSszi’h Brigswzb:<br />\nTsv yrigswzb rh Oxglyvi 6gs, yfg gsv kzigb droo yv Szgfiwzb,<br />\nOxglyvi 5. Ig’h nb 24gs yrigswzb zmw gsv urihg lmv rm hlnv<br />\nbvzih uli dsrxs I’ev yvvm vnkolbvw. Pofh, I szev mvd xolgsvh.<br />\nSl I szev xzfhv gl xvovyizgv. Mliv rnkligzmgob, gslfts,<br />\ndv’ev xovzmvw gsv slfhv! Tsv zwwivhh rh 506-D Aoyvig Sgivvg.<br />\nEcgiz vmgrxvnvmg uli CS tvvph: gsviv ziv hvevizo hbhgvnh rm<br />\ngsv slfhv, zmw gsv kzigb rh xlmevmrvmgob hxsvwfovw uli 3 slfih<br />\nzugvi gsv hvxlmw CSC kiltiznnrmt xlmgvhg vmwh (mlg gl nvmgrlm,<br />\ndrgsrm vzhb dzoprmt wrhgzmxv)!</p>\n</blockquote>\n<h2 id=\"解題方法\"><a class=\"anchor\" href=\"#解題方法\">#</a> 解題方法</h2>\n<ol>\n<li>利用前兩行創建一個  <code>HashMap</code>  的表格，紀錄密碼間的字元轉換。</li>\n<li>在之後的字串讀進來之後進行分析，如果字串中的字元有在  <code>HashMap</code>  中表示要進行密碼轉換，如過沒有就直接輸出。</li>\n</ol>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> <span class=\"token class-name\">T</span> <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Character</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">.</span><span class=\"token function\">hasNextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> index <span class=\"token operator\">!=</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token class-name\">String</span> plaintext <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token class-name\">String</span> substitution <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> plaintext<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> substitution<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>substitution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>plaintext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "解題筆記",
                "CPE",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E9%9B%9C%E8%AA%8C/You-Are-What-You-Eat-Part-A/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E9%9B%9C%E8%AA%8C/You-Are-What-You-Eat-Part-A/",
            "title": "You Are What You Eat - Part A",
            "date_published": "2023-04-04T08:10:58.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"you-are-what-you-eat-part-a\"><a class=\"anchor\" href=\"#you-are-what-you-eat-part-a\">#</a> You Are What You Eat - Part A</h2>\n<div class=\"note info\">\n<p>養身之道：人如其食</p>\n</div>\n<p><strong>Tara:</strong> I'm going to have fish and a salad for dinner. That's very healthy.</p>\n<p><strong>Blake:</strong> I'm going to have something healthy, too.</p>\n<p><strong>Tara:</strong> Really? Will you eat a salad and some chicken.</p>\n<p><strong>Blake:</strong> No. I think I will have pizza and some soda.</p>\n<p><strong>Tara:</strong> That's not healthy at all! Pizza is very bad for you.</p>\n<p><strong>Blake:</strong> You always say that I should have vegetables. My pizza has peppers.</p>\n<p><strong>Tara:</strong> Tomorrow evening, I'm going to make you healthy dinner.</p>\n<p><strong>Blake:</strong> OK, but I probably won't like it.</p>\n<details class=\"success\"><summary>單字</summary><div>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/salad\"><strong>salad</strong></a><br />\nn. <span class=\"spoiler\" title=\"你知道得太多了\">沙拉</span></p>\n<ul>\n<li>Do you want soup or salad?</li>\n</ul>\n<p><span class=\"label info\">Toss (= mix)</span></p>\n<blockquote>\n<p>a mixture of uncooked vegetables, usually including lettuce, eaten either as a separate dish or with other food</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/healthy\"><strong>healthy</strong></a><br />\nadj. <span class=\"spoiler\" title=\"你知道得太多了\">健康的</span></p>\n<ul>\n<li>Orange juice is very healthy drink.</li>\n</ul>\n<blockquote>\n<p>strong and well</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/pizza\"><strong>pizza</strong></a><br />\nn. <span class=\"spoiler\" title=\"你知道得太多了\">披薩</span></p>\n<ul>\n<li>This pizza has really good cheese.</li>\n</ul>\n<blockquote>\n<p>a large circle of flat bread baked with cheese, tomatoes, and sometimes meat and vegetables spread on top</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/evening\"><strong>evening</strong></a><br />\nn. <span class=\"spoiler\" title=\"你知道得太多了\">傍晚；晚上</span></p>\n<ul>\n<li>Cathy likes to go for a walk during the evening.</li>\n</ul>\n<blockquote>\n<p>the part of the day between the end of the afternoon and night</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/soda\"><strong>soda</strong></a><br />\nn. <span class=\"spoiler\" title=\"你知道得太多了\">汽水</span></p>\n<blockquote>\n<p>any type of sweet fizzy drink (= with bubbles) that is not alcoholic</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/pepper\"><strong>pepper</strong></a><br />\nn. <span class=\"spoiler\" title=\"你知道得太多了\">椒類植物</span></p>\n<blockquote>\n<p>a vegetable that is usually green, red, or yellow, has a rounded shape, and is hollow with seeds in the middle</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/probably\"><strong>probably</strong></a><br />\nadv. <span class=\"spoiler\" title=\"你知道得太多了\">大概</span></p>\n<blockquote>\n<p>used to mean that something is very likely</p>\n</blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<p><strong>(Sb) is going to + V.</strong><br />\n<span class=\"spoiler\" title=\"你知道得太多了\">(某人) 將要 (做某事)</span></p>\n<ul>\n<li>Shannon is going to bake a cake.</li>\n</ul>\n<blockquote>\n<p>be going to 表示某人即將要進行的計畫、意向或行動。</p>\n</blockquote>\n<p><strong>have (sth) for dinner</strong><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 吃 (某物) 當晚餐</span></p>\n<ul>\n<li>Let's have hot pot for dinner.</li>\n<li>Sandy had Mexican food for lunch yesterday.</li>\n</ul>\n<blockquote>\n<p>have 在此表示「吃；喝」，意同於 eat。<br />\ndinner 可替換成 breakfast/lunch 來表示「吃 (某物) 當早 / 午餐」。</p>\n</blockquote>\n</div></details>\n",
            "tags": [
                "語言",
                "英文",
                "雜誌",
                "難度 1",
                "英文雜誌",
                "對話"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-763-Fibinary-Numbers/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/cpe/uva-763-Fibinary-Numbers/",
            "title": "uva 763 - Fibinary Numbers",
            "date_published": "2023-04-04T05:16:52.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"題目連結\"><a class=\"anchor\" href=\"#題目連結\">#</a> 題目連結</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96ZXJvanVkZ2UudHcvU2hvd1Byb2JsZW0/cHJvYmxlbWlkPWQ2NjY=\">ZeroJudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvZXh0ZXJuYWwvNy9wNzYzLnBkZg==\">題目連結</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmVqdWRnZS5vcmcvaW5kZXgucGhwP29wdGlvbj1jb21fb25saW5lanVkZ2UmYW1wO0l0ZW1pZD04JmFtcDtjYXRlZ29yeT05JmFtcDtwYWdlPXNob3dfcHJvYmxlbSZhbXA7cHJvYmxlbT03MDQ=\">Online Judge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRlYnVnLmNvbS9VVmEvNzYz\">uDebug</span></li>\n</ul>\n<h2 id=\"題目說明\"><a class=\"anchor\" href=\"#題目說明\">#</a> 題目說明</h2>\n<p><strong>Time limit: 3.000 seconds</strong></p>\n<h3 id=\"題目\"><a class=\"anchor\" href=\"#題目\">#</a> 題目</h3>\n<p>The standard <span class=\"orange\">interpretation</span> of the binary number  <code>1010</code>  is  <code>8 + 2 = 10</code> . An <span class=\"orange\">alternate</span> way to view the<br />\n<span class=\"orange\">sequence</span> “1010” is to <ins class=\"dot\">use Fibonacci numbers as bases <span class=\"orange\">instead of</span> powers of two</ins>. For this problem, the<br />\nterms of the Fibonacci sequence are:</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>5</mn><mo separator=\"true\">,</mo><mn>8</mn><mo separator=\"true\">,</mo><mn>13</mn><mo separator=\"true\">,</mo><mn>21</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">1, 2, 3, 5, 8, 13, 21, . . .\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">8</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span></span></span></span></span></p>\n<p>Where each term is the sum of the two <span class=\"orange\">preceding terms</span> (note that there is only one  <code>1</code>  in the sequence<br />\nas defined here). Using this <span class=\"orange\">scheme</span>, the <span class=\"orange\">sequence</span> “1010” could be <span class=\"orange\">interpreted</span> as  <code>1·5+0·3+1·2+0·1 = 7</code> .<br />\nThis <span class=\"aqua\">representation</span> is called a Fibinary number.</p>\n<p>Note that there is not always a unique Fibinary <span class=\"aqua\">representation</span> of every number. For example the<br />\nnumber  <code>10</code>  could be <span class=\"aqua\">represented</span> as either  <code>8 + 2 (10010)</code>  or as  <code>5 + 3 + 2 (1110)</code> . To make the Fibinary<br />\n<span class=\"aqua\">representations</span> unique, <ins class=\"dot\">larger Fibonacci terms must always be used whenever possible</ins> (i.e. disallow<br />\n2 adjacent 1’s). <span class=\"aqua\">Applying</span> this rule to the number  <code>10</code> , means that  <code>10</code>  would be <span class=\"aqua\">represented</span> as  <code>8+2 (10010)</code> .</p>\n<p>Write a program that takes two valid Fibinary numbers and prints the sum in Fibinary form.</p>\n<h3 id=\"input\"><a class=\"anchor\" href=\"#input\">#</a> Input</h3>\n<p>The input file contains several test cases with a blank line between two <span class=\"orange\">consecutive</span>.<br />\nEach test case consists in two lines with Fibinary numbers. These numbers will have at most 100<br />\ndigits.</p>\n<h3 id=\"output\"><a class=\"anchor\" href=\"#output\">#</a> Output</h3>\n<p>For each test case, print the sum of the two input numbers in Fibinary form.<br />\nIt must be a blank line between two <span class=\"orange\">consecutive</span> outputs.</p>\n<details class=\"success\"><summary>單字</summary><div>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/interpretation\"><strong>interpretation</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 解釋</span></p>\n<blockquote>\n<p>an explanation or opinion of what something means</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/alternate\"><strong>alternate</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 備用</span></p>\n<blockquote>\n<p>to happen or exist one after the other repeatedly</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/sequence\"><strong>sequence</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 順序</span></p>\n<blockquote>\n<p>a series of related things or events, or the order in which they follow each other</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/terms\"><strong>terms</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 條款、項</span></p>\n<blockquote>\n<p>the conditions that are part of an agreement or arrangement, or the features of an activity or idea</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/scheme\"><strong>scheme</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 方案</span></p>\n<blockquote>\n<p>an organized plan for doing something, especially something dishonest or illegal that will bring a good result for you</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/consecutive\"><strong>consecutive</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 連續的</span></p>\n<blockquote>\n<p>Consecutive events, numbers, etc. follow one after another without an interruption</p>\n</blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<p><strong>instead of</strong><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 代替</span></p>\n<p><strong>preceding terms</strong><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 前項</span></p>\n</div></details>\n<h3 id=\"sample-input\"><a class=\"anchor\" href=\"#sample-input\">#</a> Sample Input</h3>\n<blockquote>\n<p>10010<br />\n1</p>\n<p>10000<br />\n1000</p>\n<p>10000<br />\n10000</p>\n</blockquote>\n<h3 id=\"sample-output\"><a class=\"anchor\" href=\"#sample-output\">#</a> Sample Output</h3>\n<blockquote>\n<p>10100</p>\n<p>100000</p>\n<p>100100</p>\n</blockquote>\n<h2 id=\"解題方法\"><a class=\"anchor\" href=\"#解題方法\">#</a> 解題方法</h2>\n<ol>\n<li>先以 dp 的方式計算 Fibonacci numbers:  <code>fib[1 ~ 101]</code>  的值，要注意的點是  <code>fib</code>  後面的值會超過 long (64 bits) 可以表示的範圍，所以這邊使用  <code>BigInteger</code>  的方式來計算數值。</li>\n<li>在用  <code>fib[index] * (char == '1' ? 1 : 0)</code> ，計算出兩個數的  <code>sum</code> ，在藉由比較  <code>fib[index]</code>  和  <code>sum</code>  的值。</li>\n<li>如果  <code>fib[index] &lt; sum</code> ，表示他的值是對於  <code>sum</code>  目前最大可以寫入  <code>1</code>  的，如果  <code>fib[index] &gt; sum</code>  或  <code>sum == 0</code>  表示其值為  <code>0</code> ，依照此將  <code>sum</code>  數值轉換成 Fibonacci numbers as bases。</li>\n</ol>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Main.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BigInteger</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">></span></span> fib <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        fib<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        fib<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">105</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            fib<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">String</span> x <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">String</span> y <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">BigInteger</span> sum <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token class-name\">BigInteger</span> temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                sum <span class=\"token operator\">=</span> sum<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            index <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> y<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token class-name\">BigInteger</span> temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                sum <span class=\"token operator\">=</span> sum<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                index<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token class-name\">String</span> ans <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">105</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    ans <span class=\"token operator\">=</span> ans <span class=\"token operator\">+</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    ans <span class=\"token operator\">=</span> ans <span class=\"token operator\">+</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                    sum <span class=\"token operator\">=</span> sum<span class=\"token punctuation\">.</span><span class=\"token function\">subtract</span><span class=\"token punctuation\">(</span>fib<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BigInteger</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        sc<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "解題筆記",
                "CPE",
                "CPE",
                "One Star"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/2405-Optimal-Partition-of-String/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/2405-Optimal-Partition-of-String/",
            "title": "2405. Optimal Partition of String",
            "date_published": "2023-04-04T04:02:30.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/optimal-partition-of-string/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a string  <code>s</code> , partition the string into one or more <strong>substrings</strong> such that the characters in each substring are <strong>unique</strong>. That is, no letter appears in a single substring more than <strong>once</strong>.</p>\n<p>Return the <em><strong>minimum</strong></em> number of substrings in such a partition.</p>\n<p>Note that each character should belong to exactly one substring in a partition.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;abacaba&quot;<br />\n<strong>Output:</strong> 4<br />\n<strong>Explanation:</strong><br />\nTwo possible partitions are (&quot;a&quot;,&quot;ba&quot;,&quot;cab&quot;,&quot;a&quot;) and (&quot;ab&quot;,&quot;a&quot;,&quot;ca&quot;,&quot;ba&quot;).<br />\nIt can be shown that 4 is the minimum number of substrings needed.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;ssssss&quot;<br />\n<strong>Output:</strong> 6<br />\n<strong>Explanation:</strong><br />\nThe only valid partition is (&quot;s&quot;,&quot;s&quot;,&quot;s&quot;,&quot;s&quot;,&quot;s&quot;,&quot;s&quot;).</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Solution.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">partitionString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hashTable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>hashTable<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                hashTable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                ans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                hashTable<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                hashTable<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> ans <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/exactly\"><strong>exactly</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 確切地</span></p>\n<blockquote>\n<p>used when you are giving or asking for information that is completely correct</p>\n</blockquote>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Leetcode",
                "Medium",
                "Hash Table",
                "String",
                "Greedy"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/881-Boats-to-Save-People/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/881-Boats-to-Save-People/",
            "title": "881. Boats to Save People",
            "date_published": "2023-04-03T08:26:41.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/boats-to-save-people/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given an array  <code>people</code>  where  <code>people[i]</code>  is the weight of the  <code>ith</code>  person, and an <strong>infinite number of boats</strong> where each boat can carry a maximum weight of  <code>limit</code> . Each boat carries at most two people at the same time, provided the sum of the weight of those people is at most  <code>limit</code> .</p>\n<p>Return the <em>minimum</em> number of boats to carry every given person.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> people = [1,2], limit = 3<br />\n<strong>Output:</strong> 1<br />\n<strong>Explanation:</strong> 1 boat (1, 2)</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> people = [3,2,2,1], limit = 3<br />\n<strong>Output:</strong> 3<br />\n<strong>Explanation:</strong> 3 boats (1, 2), (2) and (3)</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input:</strong> people = [3,5,3,4], limit = 5<br />\n<strong>Output:</strong> 4<br />\n<strong>Explanation:</strong> 4 boats (3), (3), (4), (5)</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Solution.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">numRescueBoats</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> people<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> limit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> people<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> people<span class=\"token punctuation\">[</span>right<span class=\"token operator\">--</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> limit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            ans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Leetcode",
                "Medium",
                "Array",
                "Greedy",
                "Two Pointers",
                "Sorting"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E5%96%AE%E5%AD%97/Food-Pyramid/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E5%96%AE%E5%AD%97/Food-Pyramid/",
            "title": "Food Pyramid",
            "date_published": "2023-04-03T06:09:17.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"food-pyramid-食物金字塔\"><a class=\"anchor\" href=\"#food-pyramid-食物金字塔\">#</a> Food Pyramid 食物金字塔</h2>\n<p><img data-src=\"https://cdn.sketchbubble.com/pub/media/catalog/product/optimized1/e/7/e79b9569c8325dedcc3f06f4f1ea175e6bed7378c3856de1cbd35da30b4ffe48/food-pyramid-mc-slide1.png\" alt=\"Food Pyramid\" /></p>\n<h3 id=\"top\"><a class=\"anchor\" href=\"#top\">#</a> Top</h3>\n<ul>\n<li>Fats, Oils &amp; Sweets<br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 脂肪、油及糖類</span></li>\n</ul>\n<h3 id=\"second\"><a class=\"anchor\" href=\"#second\">#</a> Second</h3>\n<ul>\n<li>Milk, Yogurt &amp; Cheese Group<br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 牛奶、優格及起司類</span></li>\n<li>Meat, Poultry, Fish, Dry Beans, Eggs &amp; Nuts Group<br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 肉類、家禽、魚類、豆類、蛋及堅果類</span></li>\n</ul>\n<h3 id=\"third\"><a class=\"anchor\" href=\"#third\">#</a> Third</h3>\n<ul>\n<li>Vegetable Group<br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 蔬菜類</span></li>\n<li>Fruit Group<br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 水果類</span></li>\n</ul>\n<h3 id=\"last\"><a class=\"anchor\" href=\"#last\">#</a> Last</h3>\n<ul>\n<li>Bread, Cereal, Rice &amp; Pasta Group<br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 麵包、穀類、米飯及麵食類</span></li>\n</ul>\n",
            "tags": [
                "語言",
                "英文",
                "單字",
                "英文單字",
                "難度 1"
            ]
        }
    ]
}