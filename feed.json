{
    "version": "https://jsonfeed.org/version/1",
    "title": "",
    "subtitle": "We are the dreamers. We make it happen 'cause we can see it.",
    "icon": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/images/favicon.ico",
    "description": "謝謝你來，謝謝你還在",
    "home_page_url": "https://chenhsingyu-0212.github.io/ https://hsingyu.blog",
    "items": [
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/HPC/Linux/Ubuntu-%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%9D/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/HPC/Linux/Ubuntu-%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%9D/",
            "title": "Ubuntu 套件安裝",
            "date_published": "2025-09-07T03:32:20.000Z",
            "content_html": "<h2 id=\"安裝-c-等套件\"><a class=\"anchor\" href=\"#安裝-c-等套件\">#</a> 安裝 C++ 等套件</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> build-essential</pre></td></tr></table></figure><h2 id=\"安裝-java-默認-jrejdk\"><a class=\"anchor\" href=\"#安裝-java-默認-jrejdk\">#</a> 安裝 java 默認 JRE/JDK</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 更新包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 檢查 java 是否已經安裝過</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">java</span> <span class=\"token parameter variable\">--version</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 安裝默認 JRE</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> default-jre</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 安裝默認 JDK</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> default-jdk</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 檢查 javac，java 編譯器版本</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>javac <span class=\"token parameter variable\">--version</span></pre></td></tr></table></figure><p>剛安裝好的 Ubuntu 系統裡的套件版本與安全性更新可能已經舊了，通常會先做這兩步：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update           <span class=\"token comment\"># 更新套件索引</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade <span class=\"token parameter variable\">-y</span>       <span class=\"token comment\"># 升級已安裝套件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> dist-upgrade     <span class=\"token comment\"># （可選）處理有相依性變動的套件</span></pre></td></tr></table></figure><h2 id=\"安裝下載的-deb-軟體或套件軟體或套件\"><a class=\"anchor\" href=\"#安裝下載的-deb-軟體或套件軟體或套件\">#</a> 安裝下載的 .deb 軟體或套件軟體或套件</h2>\n<p><strong>安裝指令</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-fy</span> ./<span class=\"token operator\">&lt;</span>filename<span class=\"token operator\">></span>.deb</pre></td></tr></table></figure><p><strong>查詢已安裝軟體或套件完整名稱</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dpkg <span class=\"token parameter variable\">-l</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token operator\">&lt;</span>部分軟體或套件名稱<span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>刪除軟體</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> remove <span class=\"token operator\">&lt;</span>軟體或套件名稱<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge <span class=\"token operator\">&lt;</span>軟體或套件名稱<span class=\"token operator\">></span>      <span class=\"token comment\"># 連設定檔案一起刪除</span></pre></td></tr></table></figure><h2 id=\"安裝及設定-ssh\"><a class=\"anchor\" href=\"#安裝及設定-ssh\">#</a> 安裝及設定 SSH</h2>\n<p><strong>安裝 SSH</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> openssh-server</pre></td></tr></table></figure><p><strong>設定 SSH</strong></p>\n<p>設定檔位置在  <code>/etc/ssh/sshd_config</code> ，可以裡用自己熟悉的文字編輯工具調整 SSH 的設定，已符合自己的需求。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/ssh/sshd_config    <span class=\"token comment\"># 安裝 ubuntu 時會裝</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vi</span> /etc/ssh/sshd_config      <span class=\"token comment\"># 安裝 ubuntu 時會裝</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/ssh/sshd_config     <span class=\"token comment\"># 需要先安裝 vim</span></pre></td></tr></table></figure><p>文件中可能會修改的內容</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Port <span class=\"token number\">22</span>                              <span class=\"token comment\"># SSH 使用的 Port，建議不要改</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>PasswordAuthentication <span class=\"token operator\">&lt;</span>yes/no<span class=\"token operator\">></span>      <span class=\"token comment\"># 是否用 password 驗證登入</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PubkeyAuthentication <span class=\"token operator\">&lt;</span>yes/no<span class=\"token operator\">></span>        <span class=\"token comment\"># 是否用 public key 驗證登入</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>PermitRootLogin <span class=\"token function\">yes</span>                  <span class=\"token comment\"># 是否開放 root 登入</span></pre></td></tr></table></figure><p><strong>重新啟動 SSH 服務</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart <span class=\"token function\">ssh</span></pre></td></tr></table></figure><p><strong>SSH 公鑰</strong></p>\n<p><mark>在本地端產生一組公鑰與私鑰：</mark></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen <span class=\"token parameter variable\">-t</span> ed25519 <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"備註\"</span></pre></td></tr></table></figure><p>執行後會問：</p>\n<ol>\n<li>儲存檔案路徑（直接 Enter，預設是  <code>~/.ssh/id_ed25519</code>  和  <code>~/.ssh/id_ed25519.pub</code> ）</li>\n<li>是否設定密碼（可空白直接 Enter，不用密碼）</li>\n</ol>\n<p>產生結果：</p>\n<ul>\n<li>私鑰： <code>~/.ssh/id_ed25519</code> （請勿外洩）</li>\n<li>公鑰： <code>~/.ssh/id_ed25519.pub</code> （可以分享給伺服器）</li>\n</ul>\n<p><mark>把公鑰複製到目標機器:</mark></p>\n<ol>\n<li>\n<p>自動方式（建議）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-copy-id <span class=\"token parameter variable\">-i</span> ~/.ssh/id_ed25519.pub username@server-ip</pre></td></tr></table></figure><p>這會自動把公鑰存到目標機器的  <code>~/.ssh/authorized_keys</code>  裡。</p>\n</li>\n<li>\n<p>手動方式</p>\n<ul>\n<li>登入目標機器（先用密碼登入）：<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> username@server-ip</pre></td></tr></table></figure></li>\n<li>建立 .ssh 目錄並設定權限：<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> ~/.ssh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">700</span> ~/.ssh</pre></td></tr></table></figure></li>\n<li>在 authorized_keys 檔案中加入公鑰內容：<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"&lt;public key>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> <span class=\"token parameter variable\">-a</span> ~/.ssh/authorized_keys</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># or nano ~/.ssh/authorized_keys</span></pre></td></tr></table></figure>把 id_ed25519.pub 的內容貼進去，存檔。</li>\n<li>設定正確權限：<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">600</span> ~/.ssh/authorized_keys</pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<div class=\"note warning\">\n<p>每個使用者的公鑰存放在：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/home/<span class=\"token operator\">&lt;</span>使用者名稱<span class=\"token operator\">></span>/.ssh/authorized_keys</pre></td></tr></table></figure><p>權限要求（很重要，否則 SSH 會拒絕）：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">700</span> ~/.ssh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">600</span> ~/.ssh/authorized_keys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">chown</span> <span class=\"token parameter variable\">-R</span> <span class=\"token operator\">&lt;</span>使用者名稱<span class=\"token operator\">></span>:<span class=\"token operator\">&lt;</span>使用者名稱<span class=\"token operator\">></span> ~/.ssh</pre></td></tr></table></figure></div>\n<h2 id=\"安裝-tmux\"><a class=\"anchor\" href=\"#安裝-tmux\">#</a> 安裝 tmux</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> tmux</pre></td></tr></table></figure><h2 id=\"安裝-htop\"><a class=\"anchor\" href=\"#安裝-htop\">#</a> 安裝 htop</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">htop</span></pre></td></tr></table></figure><h2 id=\"安裝-tree\"><a class=\"anchor\" href=\"#安裝-tree\">#</a> 安裝 tree</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> tree</pre></td></tr></table></figure><h2 id=\"安裝-cmake\"><a class=\"anchor\" href=\"#安裝-cmake\">#</a> 安裝 CMake</h2>\n<p>在 C/C++ 開發中，管理專案的編譯流程是一個重要的課題。傳統的 Makefile 雖然能夠自動化編譯，但維護起來並不方便，特別是在跨平台開發時會遇到許多問題。</p>\n<p>CMake 是跨平台的 C/C++ 專案編譯工具，它的主要用途是生成適合不同環境的 Makefile 或 IDE 專案檔案，並自動化編譯過程。</p>\n<ul>\n<li>ubuntu</li>\n</ul>\n<pre><code class=\"language-bash!\">sudo apt update\nsudo apt install cmake\n</code></pre>\n<ul>\n<li>conda</li>\n</ul>\n<pre><code class=\"language-bash!\">conda install -c conda-forge cmake ninja -y  # 安裝 CMake + Ninja\n</code></pre>\n<h2 id=\"安裝-docker\"><a class=\"anchor\" href=\"#安裝-docker\">#</a> 安裝 docker</h2>\n<pre><code class=\"language-bash!\">curl -fsSL https://get.docker.com/ -o get-docker.sh\nsudo sh get-docker.sh\nsudo usermod -aG docker $USER\n</code></pre>\n<h2 id=\"安裝-conda\"><a class=\"anchor\" href=\"#安裝-conda\">#</a> 安裝 conda</h2>\n<p>![](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJvLm1lZGl1bS5jb20vdjIvcmVzaXplOmZpdDo0ODAwL2Zvcm1hdDp3ZWJwLzAqRzRRQTJvbEhuRmFtbFYzWi5wbmc=\">https://miro.medium.com/v2/resize:fit:4800/format:webp/0*G4QA2olHnFamlV3Z.png</span> =500x)</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL2RvY3MvZ2V0dGluZy1zdGFydGVkL21pbmljb25kYS9pbnN0YWxs\">Miniconda Docs</span></li>\n</ul>\n<ol>\n<li>下載 miniconda shell script<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</pre></td></tr></table></figure></li>\n<li>執行 miniconda shell script 檔案<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">bash</span> ~/Miniconda3-latest-Linux-x86_64.sh</pre></td></tr></table></figure><ul>\n<li>Please, press ENTER to continue<br />\n<strong>Enter</strong></li>\n<li>Do you accept the license terms?<br />\n<strong>yes</strong></li>\n<li>Miniconda3 will now be installed into this location:<br />\n/home/hsingyu/miniconda3<br />\n<strong>Enter</strong></li>\n<li>Do you wish to update your shell profile to automatically initialize conda?<br />\nThis will activate conda on startup and change the command prompt when activated.<br />\nIf you'd prefer that conda's base environment not be activated on startup,<br />\nrun the following command when conda is activated:<br />\n <code>conda config --set auto_activate_base false</code> <br />\nYou can undo this by running  <code>conda init --reverse $SHELL</code> ? [yes|no]<br />\n[no] &gt;&gt;&gt; <strong>no</strong></li>\n<li>Thank you for installing Miniconda3!</li>\n</ul>\n</li>\n<li>執行在當前 shell 臨時啟用 conda<pre><code class=\"language-bash!\">sh=$(basename &quot;$SHELL&quot;); eval &quot;$(/home/hsingyu/miniconda3/bin/conda shell.$sh hook)&quot;\nconda init\n</code></pre>\n</li>\n</ol>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL2RvY3MvZ2V0dGluZy1zdGFydGVkL2FuYWNvbmRhL2luc3RhbGw=\">Anaconda Docs</span></li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-O</span> https://repo.anaconda.com/archive/Anaconda3-2025.06-0-Linux-x86_64.sh</pre></td></tr></table></figure><h2 id=\"安裝-gpu-driver-cuda-cudnn\"><a class=\"anchor\" href=\"#安裝-gpu-driver-cuda-cudnn\">#</a> 安裝 GPU Driver &amp; CUDA + CuDNN</h2>\n<h3 id=\"gpu-driver\"><a class=\"anchor\" href=\"#gpu-driver\">#</a> GPU Driver</h3>\n<pre><code class=\"language-bash!\">sudo apt update\nsudo apt upgrade\n\nsudo apt install ubuntu-drivers-common\nsudo ubuntu-drivers devices\n\nsudo apt install nvidia-driver-535\nsudo reboot now\n</code></pre>\n<h3 id=\"cuda\"><a class=\"anchor\" href=\"#cuda\">#</a> CUDA</h3>\n<ol>\n<li>確認 GPU 可支援的 CUDA 版本</li>\n<li>到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubnZpZGlhLmNvbS9jdWRhLXRvb2xraXQtYXJjaGl2ZQ==\">CUDA Toolkit Archive</span> 找到所需的版本</li>\n<li>根據設備環境點擊<br />\n<img data-src=\"https://hackmd.io/_uploads/B1vwa2F5eg.png\" alt=\"image\" /></li>\n<li>執行它提供的腳本<pre><code class=\"language-bash!\">wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin\nsudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600\nwget https://developer.download.nvidia.com/compute/cuda/12.2.0/local_installers/cuda-repo-ubuntu2204-12-2-local_12.2.0-535.54.03-1_amd64.deb\nsudo dpkg -i cuda-repo-ubuntu2204-12-2-local_12.2.0-535.54.03-1_amd64.deb\nsudo cp /var/cuda-repo-ubuntu2204-12-2-local/cuda-*-keyring.gpg /usr/share/keyrings/\nsudo apt-get update\nsudo apt-get -y install cuda\n</code></pre>\n</li>\n<li>重新開機<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">reboot</span> now</pre></td></tr></table></figure></li>\n<li>設定環境變數<pre><code class=\"language-bash!\">export PATH=/usr/local/cuda/bin$&#123;PATH:+:$&#123;PATH&#125;&#125;\nexport LD_LIBRARY_PATH=/usr/local/cuda-12.2/lib64$&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125;&#125;\n</code></pre>\n</li>\n</ol>\n<h3 id=\"cudnn\"><a class=\"anchor\" href=\"#cudnn\">#</a> CuDNN</h3>\n<ol>\n<li>到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubnZpZGlhLmNvbS9yZHAvY3Vkbm4tYXJjaGl2ZQ==\">cuDNN Archive</span> 找與 cuda 配對的版本</li>\n<li>下載 tar 檔</li>\n<li>將 tar 解壓縮 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlLmRyeC50dy8yMDA4LzA0L2NvbW1hbmQuaHRtbA==\">解壓縮指令參考</span></li>\n<li>將解壓縮檔案內容覆蓋到 cuda 資料夾裡面<pre><code class=\"language-bash!\">sudo cp cuda/include/cudnn*.h /usr/local/cuda/include\nsudo cp -P cuda/lib/libcudnn* /usr/local/cuda/lib64\nsudo chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*\n</code></pre>\n</li>\n<li>檢查是否安裝成功<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /usr/local/cuda/include/cudnn_version.h <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> CUDNN_MAJOR</pre></td></tr></table></figure><img data-src=\"https://hackmd.io/_uploads/S1BhD1ccex.png\" alt=\"image\" /></li>\n</ol>\n<h2 id=\"安裝-nvidia-container-toolkit\"><a class=\"anchor\" href=\"#安裝-nvidia-container-toolkit\">#</a> 安裝 NVIDIA Container Toolkit</h2>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm52aWRpYS5jb20vZGF0YWNlbnRlci9jbG91JTNFZC1uYXRpdmUvY29udGFpbmVyLXRvb2xraXQvbGF0ZXN0L2luc3RhbGwtZ3VpZGUuaHRtbA==\">NVIDIA Container Toolkit&gt;</span></p>\n</blockquote>\n<pre><code class=\"language-bash!\">curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\\n&amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\\n    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \\\n    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list\n</code></pre>\n<pre><code class=\"language-bash!\">sudo apt-get update\n</code></pre>\n<pre><code class=\"language-bash!\">export NVIDIA_CONTAINER_TOOLKIT_VERSION=1.17.8-1\nsudo apt-get install -y \\\n      nvidia-container-toolkit=$&#123;NVIDIA_CONTAINER_TOOLKIT_VERSION&#125; \\\n      nvidia-container-toolkit-base=$&#123;NVIDIA_CONTAINER_TOOLKIT_VERSION&#125; \\\n      libnvidia-container-tools=$&#123;NVIDIA_CONTAINER_TOOLKIT_VERSION&#125; \\\n      libnvidia-container1=$&#123;NVIDIA_CONTAINER_TOOLKIT_VERSION&#125;\n</code></pre>\n<pre><code class=\"language-bash!\">sudo systemctl restart docker\n</code></pre>\n",
            "tags": [
                "資訊工程"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/Artificial-Intelligence/MiniZero-Training-new-computer-game/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/Artificial-Intelligence/MiniZero-Training-new-computer-game/",
            "title": "MiniZero: Training new computer game",
            "date_published": "2025-09-06T12:27:48.000Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"bc13b004f95cc948259b7043fc898d6f6293ffa721987037f99379c98ede2514\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">請輸入密碼</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "資訊工程",
                "Artificial-Intelligence"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/3000-Maximum-Area-of-Longest-Diagonal-Rectangle/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/3000-Maximum-Area-of-Longest-Diagonal-Rectangle/",
            "title": "3000. Maximum Area of Longest Diagonal Rectangle",
            "date_published": "2025-08-26T17:36:19.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/maximum-area-of-longest-diagonal-rectangle/description/?envType=daily-question&amp;envId=2025-08-26\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given a 2D <strong>0-indexed</strong> integer array  <code>dimensions</code> .</p>\n<p>For all indices  <code>i</code> ,  <code>0 &lt;= i &lt; dimensions.length</code> ,  <code>dimensions[i][0]</code>  represents the length and  <code>dimensions[i][1]</code>  represents the width of the rectangle  <code>i</code> .</p>\n<p>Return <em>the <strong>area</strong> of the rectangle having the <strong>longest</strong> diagonal. If there are multiple rectangles with the longest diagonal, return the area of the rectangle having the <strong>maximum</strong> area</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> dimensions = [[9,3],[8,6]]<br />\n<strong>Output:</strong> 48<br />\n<strong>Explanation:</strong><br />\nFor index = 0, length = 9 and width = 3. Diagonal length = sqrt(9 * 9 + 3 * 3) = sqrt(90) ≈ 9.487.<br />\nFor index = 1, length = 8 and width = 6. Diagonal length = sqrt(8 * 8 + 6 * 6) = sqrt(100) = 10.<br />\nSo, the rectangle at index 1 has a greater diagonal length therefore we return area = 8 * 6 = 48.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> dimensions = [[3,4],[4,3]]<br />\n<strong>Output:</strong> 12<br />\n<strong>Explanation:</strong> Length of diagonal is the same for both which is 5, so maximum area = 12.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<p>基本上按照題目邏輯完成函式就可以。</p>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">areaOfMaxDiagonal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dimensions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">double</span> max_area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dimensions<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">double</span> area <span class=\"token operator\">=</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            area <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">></span> max_area<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                max_area <span class=\"token operator\">=</span> area<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                result <span class=\"token operator\">=</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">==</span> max_area<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                result <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">areaOfMaxDiagonal</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span><span class=\"token operator\">&amp;</span> dimensions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> max_area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dimensions<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">double</span> area <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">></span> max_area<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                max_area <span class=\"token operator\">=</span> area<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                result <span class=\"token operator\">=</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>area <span class=\"token operator\">==</span> max_area<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                result <span class=\"token operator\">=</span> std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> dimensions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Easy",
                "Array"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/498-Diagonal-Traverse/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/498-Diagonal-Traverse/",
            "title": "498. Diagonal Traverse",
            "date_published": "2025-08-25T11:08:21.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/diagonal-traverse/description/?envType=daily-question&amp;envId=2025-08-25\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an  <code>m x n</code>  matrix  <code>mat</code> , return <em>an array of all the elements of the array in a diagonal order</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<p><img data-src=\"https://assets.leetcode.com/uploads/2021/04/10/diag1-grid.jpg\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> mat = [[1,2,3],[4,5,6],[7,8,9]]<br />\n<strong>Output:</strong> [1,2,4,7,5,3,6,8,9]</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> mat = [[1,2],[3,4]]<br />\n<strong>Output:</strong> [1,2,3,4]</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">findDiagonalOrder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> mat<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mat <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> mat<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> mat<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> ans <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>row <span class=\"token operator\">*</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">+</span> col <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> col<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> i <span class=\"token operator\">-</span> col <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> col<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> i <span class=\"token operator\">:</span> col <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> temp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>r <span class=\"token operator\">&lt;</span> row <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                temp<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                r<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                c<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token comment\">// move up</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    ans<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token comment\">// move down</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                ans<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapToInt</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-></span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">findDiagonalOrder</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span><span class=\"token operator\">&amp;</span> mat<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> mat<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> row <span class=\"token operator\">+</span> col <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> col<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> i <span class=\"token operator\">-</span> col <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> col<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> i <span class=\"token operator\">:</span> col <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">&lt;</span> row <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                temp<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                r<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                c<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Medium"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/HPC/Tool/Job-Scheduling-Resource-Management-System/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/HPC/Tool/Job-Scheduling-Resource-Management-System/",
            "title": "Job Scheduling & Resource Management System",
            "date_published": "2025-08-23T09:48:13.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"ChienI Kao\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\" data-background-image=\"https://chienikao.github.io/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\">ChienI Kao</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div><div class=\"item\" title=\"JHTNT\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\" data-background-image=\"https://i.imgur.com/cBOtjyB.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\">JHTNT</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div></div></p>\n<h2 id=\"什麼是作業調度和資源管理系統\"><a class=\"anchor\" href=\"#什麼是作業調度和資源管理系統\">#</a> 什麼是作業調度和資源管理系統？</h2>\n<p>在 HPC (高效能運算叢集) 或大型伺服器環境裡，有很多人同時會需要使用計算資源 (CPU、GPU、記憶體、網路)</p>\n<p>資源管理與作業調度系統就是專門負責:</p>\n<ol>\n<li>資源管理 (Resource Management)\n<ul>\n<li>管理那些節點 (nodes)、CPU/GPU、記憶體是<strong>可用的</strong></li>\n<li>把資源分配給不同使用者的工作 (jobs)</li>\n<li>確保不會<strong>撞車</strong>或是浪費資源</li>\n</ul>\n</li>\n<li>作業調度 (Job Scheduling)\n<ul>\n<li>決定<strong>誰的工作先跑、誰後跑</strong></li>\n<li>根據策略 (FIFO、優先權、fairshare、公平分配、backfill...) 安排順序</li>\n<li>提供排隊機制，讓大家公平使用叢集</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"系統需要完成的事情\"><a class=\"anchor\" href=\"#系統需要完成的事情\">#</a> 系統需要完成的事情</h3>\n<ul>\n<li>工作提交：使用者把程式丟進系統</li>\n<li>資源分配：系統分配 CPU/GPU/ 記憶體</li>\n<li>排成決策：誰先跑、誰排隊</li>\n<li>監控工作：可以查詢狀態 (排隊中、執行中、完成、失敗)</li>\n<li>錯誤處理：如果節點掛掉、系統能重新安排</li>\n<li>資源利用率最佳化：盡量避免閒置</li>\n</ul>\n<h3 id=\"舉例\"><a class=\"anchor\" href=\"#舉例\">#</a> 舉例</h3>\n<div class=\"note warning\">\n<p>假設一個 HPC 叢集有 10 台伺服器，每台 32 核心 CPU + 4 張 GPU</p>\n<ul>\n<li>A 要跑流體力學模擬，要 64 核心</li>\n<li>B 要跑深度學習模型，要 2 張 GPU</li>\n<li>c 要跑小的測試程式，要 4 核心</li>\n</ul>\n<p>系統會:</p>\n<ol>\n<li>先檢查有那些資源是空的</li>\n<li>幫他們分配到合適的節點</li>\n<li>如果資源不足，工作就會排隊等候</li>\n<li>調度策略可能讓小任務先插隊跑 backfill，避免資源浪費</li>\n</ol>\n</div>\n<h2 id=\"常見的系統\"><a class=\"anchor\" href=\"#常見的系統\">#</a> 常見的系統</h2>\n<ul>\n<li>Slurm: 目前 HPC 主流，擴展性強</li>\n<li>PBS/Torque/OpenPBS: 老牌系統，很多傳統機構還在用</li>\n<li>LSF (IBM Spectrum LSF): 商業系統，大型企業使用</li>\n<li>HTCondor: 常用於學術研究和分散式資源</li>\n</ul>\n<h2 id=\"slurm\"><a class=\"anchor\" href=\"#slurm\">#</a> Slurm</h2>\n<h2 id=\"pbs\"><a class=\"anchor\" href=\"#pbs\">#</a> PBS</h2>\n<p>PBS (Portable Batch System)，最早由 NASA 的 Ames 研究中心，在 1990 年代開發。</p>\n<div class=\"note info\">\n<p><strong>PBS 的版本</strong></p>\n<ul>\n<li>OpenPBS：開源版本，社群維護。</li>\n<li>PBS Pro：由 Altair 公司維護，有商業版與開源版。</li>\n<li>Torque：從 OpenPBS 分支出來，但已經停止維護。</li>\n</ul>\n</div>\n<h3 id=\"優缺點\"><a class=\"anchor\" href=\"#優缺點\">#</a> 優缺點</h3>\n<p><strong>優點</strong></p>\n<ul>\n<li>歷史悠久，設計穩定</li>\n<li>有商業支援（PBS Pro, Altair）</li>\n<li>適合中小型叢集</li>\n</ul>\n<p><strong>缺點</strong></p>\n<ul>\n<li>設計較舊，擴展性不如 Slurm</li>\n<li><mark>GPU、容器支援較慢</mark></li>\n<li>指令較傳統（不像 Slurm 那麼直觀）</li>\n<li>社群活躍度下降</li>\n</ul>\n<h3 id=\"pbs-的主要組件\"><a class=\"anchor\" href=\"#pbs-的主要組件\">#</a> PBS 的主要組件</h3>\n<p>PBS 採 Client-Server-Mom 的架構，分工如下:</p>\n<ul>\n<li>PBS Server ( <code>pbs_server</code> )\n<ul>\n<li>整個系統的核心，管理所有 job 佇列</li>\n<li>接收使用者的 job (透過  <code>qsub</code> )</li>\n</ul>\n</li>\n<li>PBS Scheduler ( <code>pbs_sched</code> )\n<ul>\n<li>決定哪些 job 可以執行、何時執行</li>\n<li>支援 FIFO、優先權、fairshare 等策略</li>\n</ul>\n</li>\n<li>PBS Mom (Machine Oriented Mini-server,  <code>pbs_mom</code> )\n<ul>\n<li>部署在計算節點 (compute node) 上</li>\n<li>負責真正執行 job，並回報狀態給 server</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://hpclib.com/images/pbspro_jg.png\" alt=\"\" /></p>\n<pre><code>[User @ Login Node]\n       │\n       │  qsub job.pbs\n       │\n       ▼\n[PBS Server]───(排隊/排程)───►[PBS Scheduler]\n       │\n       ▼\n[PBS Mom @ Compute Node]\n       │\n       ├─► 設定環境變數\n       ├─► 切換到 $PBS_O_WORKDIR (共享 FS)\n       ├─► (可選) Stage-in → Local scratch\n       │\n       ▼\n[Job 執行中]\n       │\n       ├─► 讀取輸入檔 (FS or scratch)\n       ├─► 寫出輸出檔 (scratch → FS)\n       ├─► stdout/stderr → job.o12345, job.e12345\n       │\n       ▼\n[Job 結束 → 資源釋放]\n</code></pre>\n<div class=\"note info\">\n<ul>\n<li>Server: 工作櫃台 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> 負責登記與排隊</li>\n<li>Scheduler: 排班經理 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> 決定誰先誰後</li>\n<li>Mom: 廚房師傅 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>→</mo></mrow><annotation encoding=\"application/x-tex\">\\rightarrow</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">→</span></span></span></span> 實際執行工作</li>\n</ul>\n</div>\n<h3 id=\"pbs-的常用指令\"><a class=\"anchor\" href=\"#pbs-的常用指令\">#</a> PBS 的常用指令</h3>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>指令</th>\n<th>範例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>提交工作</td>\n<td><code>qsub</code></td>\n<td><code>qsub &lt;job.pbs&gt;</code></td>\n</tr>\n<tr>\n<td>查詢工作</td>\n<td><code>qstat</code></td>\n<td><code>qstat -u &lt;user01&gt;</code></td>\n</tr>\n<tr>\n<td>刪除工作</td>\n<td><code>qdel</code></td>\n<td><code>qdel &lt;12345&gt;</code></td>\n</tr>\n<tr>\n<td>修改工作</td>\n<td><code>qalter</code></td>\n<td><code>qsub -l nodes=2:ppn=8 &lt;12345&gt;</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"pbs-工作腳本範例\"><a class=\"anchor\" href=\"#pbs-工作腳本範例\">#</a> PBS 工作腳本範例</h3>\n<div class=\"note success\">\n<p>提交一個 MPI 程式的腳本 ( <code>job.pbs</code> ):</p>\n<pre><code class=\"language-bash!\">#!/bin/bash\n#PBS -N myjob               # Job 名稱\n#PBS -l select=2:ncpus=8    # 要求 2 台節點，每台 8 核心\n#PBS -l walltime=02:00:00   # 最長執行時間 2 小時\n#PBS -q batch               # 指定 queue\n#PBS -o jobresult.out\n#PBS -e jobresult.err\n\ncd $PBS_O_WORKDIR           # 切到提交工作時的目錄\nmpirun -np 16 ./my_mpi_program\n</code></pre>\n<p>提交方式：</p>\n<pre><code class=\"language-bash!\">qsub job.pbs\n</code></pre>\n</div>\n<h3 id=\"pbs-torque-安裝\"><a class=\"anchor\" href=\"#pbs-torque-安裝\">#</a> PBS Torque 安裝</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FkYXB0aXZlY29tcHV0aW5nL3RvcnF1ZQ==\">Torque GitHub</span></li>\n</ul>\n<p>更新系統套件</p>\n<pre><code class=\"language-bash!\">sudo apt update\nsudo apt upgrade\n</code></pre>\n<p>下載相關必要套件</p>\n<pre><code class=\"language-bash!\">sudo apt install build-essential libssl-dev libxml2-dev libboost-all-dev libz-dev liblzma-dev libevent-dev libsqlite3-dev libmysqld-dev mysql-client mysql-server libmunge-dev libmunge2\n</code></pre>\n<h2 id=\"slurm-vs-pbs\"><a class=\"anchor\" href=\"#slurm-vs-pbs\">#</a> Slurm vs. PBS</h2>\n<h2 id=\"參考文件\"><a class=\"anchor\" href=\"#參考文件\">#</a> 參考文件</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYW4udHdjYy5haS9AVFdDQy1JSUktbWFudWFsL3JrLTBsZWdOdA==\">Taiwania 1 與 Taiwania 3 排程系統指令對照</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDE5Mjg4Mi9hcnRpY2xlL2RldGFpbHMvMTM2MTA2MzYx\">Ubuntu 22.04 上作業調度管理軟體 - PBS Torque 的安裝、配置及主要使用</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGl1LXNoYW9iby9wLzEzNTI2MDg0Lmh0bWw=\">PBS-Torque 叢集部署</span></li>\n</ul>\n",
            "tags": [
                "資訊工程",
                "HPC",
                "Tool"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/HPC/Tool/Tmux/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/HPC/Tool/Tmux/",
            "title": "Tmux",
            "date_published": "2025-03-06T06:18:42.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"ChienI Kao\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\" data-background-image=\"https://chienikao.github.io/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\">ChienI Kao</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div><div class=\"item\" title=\"JHTNT\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\" data-background-image=\"https://i.imgur.com/cBOtjyB.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\">JHTNT</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div></div></p>\n<h2 id=\"what-is-tmux\"><a class=\"anchor\" href=\"#what-is-tmux\">#</a> What is tmux?</h2>\n<p>tmux 是一個終端機管理工具，可以分割視窗、同時開啟多個終端機。</p>\n<ul>\n<li>如果想要同時使用多個命令，或執行多個任務時，就會很方便</li>\n<li>如果是遠端 ssh 連線到其他主機使用 tmux 來執行程式，也可以避免 ssh 突然斷連後，正在安裝或執行的任務被終止</li>\n</ul>\n<h3 id=\"基礎概念\"><a class=\"anchor\" href=\"#基礎概念\">#</a> 基礎概念</h3>\n<p>接著我們簡單介紹一下 tmux 的基礎概念，tmux 主要有三個模組 pane、windows、session</p>\n<p><img data-src=\"https://i.imgur.com/CiTtRl3.png\" alt=\"Imgur\" /></p>\n<p>當使用 tmux 時</p>\n<h2 id=\"install-tmux\"><a class=\"anchor\" href=\"#install-tmux\">#</a> Install tmux</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sudp <span class=\"token function\">apt</span> upgrade</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> tmux</pre></td></tr></table></figure><h2 id=\"how-to-use-tmux\"><a class=\"anchor\" href=\"#how-to-use-tmux\">#</a> How to use tmux?</h2>\n<h3 id=\"pane\"><a class=\"anchor\" href=\"#pane\">#</a> Pane</h3>\n<h3 id=\"windows\"><a class=\"anchor\" href=\"#windows\">#</a> Windows</h3>\n<h3 id=\"session\"><a class=\"anchor\" href=\"#session\">#</a> Session</h3>\n<h2 id=\"setup-tmux-config\"><a class=\"anchor\" href=\"#setup-tmux-config\">#</a> Setup Tmux config</h2>\n<h3 id=\"設定-tmux\"><a class=\"anchor\" href=\"#設定-tmux\">#</a> 設定 tmux</h3>\n<pre><code class=\"language-bash!\">vim ~/.tmux.conf\n</code></pre>\n<h3 id=\"範例-tmux-設定檔\"><a class=\"anchor\" href=\"#範例-tmux-設定檔\">#</a> 範例 tmux 設定檔</h3>\n<pre><code class=\"language-bash!\">set -g mouse on\nset -g history-limit 1000000\nset -g default-terminal &quot;screen-256color&quot;\nset -g status-right ' %H:%M:%S %Y-%m-%d'\nset -g status-interval 1\n\n# prefix setting\nset -g prefix C-a\nunbind C-b\nbind C-a send-prefix\n\n# bind key\nbind -n M-c new-window\nbind -n C-S-Left previous-window\nbind -n C-S-Right next-window\nbind -n C-Up select-pane -U\nbind -n C-Down select-pane -D\nbind -n C-Left select-pane -L\nbind -n C-Right select-pane -R\nbind -n C-w resize-pane -Z\nbind -n M-h split-window -v -c &quot;#&#123;pane_current_path&#125;&quot;\nbind -n M-v split-window -h -c &quot;#&#123;pane_current_path&#125;&quot;\nbind -n M-k confirm kill-window\nbind -n M-a command-prompt -I &quot;#W&quot; &quot;rename-window '%%'&quot;\nbind -n M-` select-window -t 0\nbind -n M-1 select-window -t 1\nbind -n M-2 select-window -t 2\nbind -n M-3 select-window -t 3\nbind -n M-4 select-window -t 4\nbind -n M-5 select-window -t 5\nbind -n M-6 select-window -t 6\nbind -n M-7 select-window -t 7\nbind -n M-8 select-window -t 8\nbind -n M-9 select-window -t 9\nbind -n M-0 select-window -t 10\nbind -n M-- select-window -t 11\nbind -n M-= select-window -t 12\nbind -n M-p swap-window -t -1\\; select-window -t -1\nbind -n M-n swap-window -t +1\\; select-window -t +1\nbind -n M-t new-window\\; split-window -h -p 66\\; select-pane -t 1\\; split-window -h -p 50\\; select-pane -t 2\\; split-window -v -p 50\\; select-pane -t 2\\; split-window -v -p 50\\; select-pane -t 4\\; split-window -v -p 50\n</code></pre>\n<h3 id=\"使-tmux-config-生效\"><a class=\"anchor\" href=\"#使-tmux-config-生效\">#</a> 使 tmux config 生效</h3>\n<pre><code class=\"language-bash!\">tmux source-file ~/.tmux.conf\n</code></pre>\n<h3 id=\"常用快捷鍵\"><a class=\"anchor\" href=\"#常用快捷鍵\">#</a> 常用快捷鍵</h3>\n<p>若有使用一開始提及的方法設定 tmux config，則可以在 tmux session 中使用以下快捷鍵。</p>\n<table>\n<thead>\n<tr>\n<th>快捷鍵</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Alt+v 或 Alt+h</td>\n<td>垂直或水平分割終端窗口</td>\n</tr>\n<tr>\n<td>Ctrl+(↑/↓/←/→)</td>\n<td>在分割的窗口間切換</td>\n</tr>\n<tr>\n<td>Ctrl+w</td>\n<td>縮放分割視窗</td>\n</tr>\n<tr>\n<td>Alt+c</td>\n<td>創建一個新的窗口</td>\n</tr>\n<tr>\n<td>Alt+p</td>\n<td>將目前窗口與上一個窗口交換</td>\n</tr>\n<tr>\n<td>Alt+n</td>\n<td>將目前窗口與下一個窗口交換</td>\n</tr>\n<tr>\n<td>Ctrl+Shift+(←/→)</td>\n<td>切換窗口</td>\n</tr>\n<tr>\n<td>Alt+`1234567890-= | 快速切換到特定窗口         |</td>\n</tr>\n<tr>\n<td>Alt+t</td>\n<td>創建一個新的訓練用窗口</td>\n</tr>\n<tr>\n<td>Alt+a</td>\n<td>重新命名當前窗口</td>\n</tr>\n<tr>\n<td>Alt+k</td>\n<td>關閉當前窗口</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "資訊工程",
                "HPC",
                "Tool"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/Cloud-Computing/K8s/Kubeadm-create-k8s-cluster/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/Cloud-Computing/K8s/Kubeadm-create-k8s-cluster/",
            "title": "Kubeadm create k8s cluster",
            "date_published": "2025-02-17T08:48:49.000Z",
            "content_html": "<p><div class=\"links\"><div class=\"item\" title=\"ChienI Kao\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\" data-background-image=\"https://chienikao.github.io/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9jaGllbmlrYW8uZ2l0aHViLmlvLw==\">ChienI Kao</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div><div class=\"item\" title=\"JHTNT\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\" data-background-image=\"https://i.imgur.com/cBOtjyB.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9qaHRudC5naXRodWIuaW8v\">JHTNT</span>\n          <p class=\"desc\">筆記網站</p>\n          </div></div></div></p>\n<h2 id=\"實驗題目\"><a class=\"anchor\" href=\"#實驗題目\">#</a> 實驗題目</h2>\n<p>將使用 kubeadm 來建構 k8s cluster，並建構兩個以上的 node</p>\n<h2 id=\"實驗環境\"><a class=\"anchor\" href=\"#實驗環境\">#</a> 實驗環境</h2>\n<ul>\n<li>兩個以上的虛擬機或是實體機</li>\n<li>最小硬體需求:\n<ul>\n<li>CPU: 2 cores</li>\n<li>RAM: 2GB</li>\n</ul>\n</li>\n<li>必須可以連上網際網路</li>\n<li>所有節點之間可以互相連線 (在相同的 LAN 中、或有公網 IP、或是可以透過 router 互連)</li>\n</ul>\n<h2 id=\"實驗內容\"><a class=\"anchor\" href=\"#實驗內容\">#</a> 實驗內容</h2>\n<h3 id=\"安裝-docker\"><a class=\"anchor\" href=\"#安裝-docker\">#</a> 安裝 Docker</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-fsSL</span> https://get.docker.com/ <span class=\"token parameter variable\">-o</span> get-docker.sh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> get-docker.sh</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> <span class=\"token parameter variable\">-aG</span> <span class=\"token function\">docker</span> <span class=\"token environment constant\">$USER</span></pre></td></tr></table></figure>",
            "tags": [
                "資訊工程",
                "Cloud-Computing",
                "K8s",
                "kubernetes"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/3011-Find-if-Array-Can-Be-Sorted/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/3011-Find-if-Array-Can-Be-Sorted/",
            "title": "3011. Find if Array Can Be Sorted",
            "date_published": "2024-11-06T09:22:30.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/find-if-array-can-be-sorted/description/?envType=daily-question&amp;envId=2024-11-06\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given a <strong>0-indexed</strong> array of <strong>positive</strong> integers nums.</p>\n<p>In one <strong>operation</strong>, you can swap any two <strong>adjacent</strong> elements if they have the <strong>same</strong> number of set bits. You are allowed to do this operation <strong>any</strong> number of times (<strong>including zero</strong>).</p>\n<p>Return <em> <code>true</code>  if you can sort the array, else return  <code>false</code> .</em></p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [8,4,2,30,15]<br />\n<strong>Output:</strong> true<br />\n<strong>Explanation:</strong> Let's look at the binary representation of every element. The numbers 2, 4, and 8 have one set bit each with binary representation &quot;10&quot;, &quot;100&quot;, and &quot;1000&quot; respectively. The numbers 15 and 30 have four set bits each with binary representation &quot;1111&quot; and &quot;11110&quot;.<br />\nWe can sort the array using 4 operations:</p>\n<ul>\n<li>Swap nums[0] with nums[1]. This operation is valid because 8 and 4 have one set bit each. The array becomes [4,8,2,30,15].</li>\n<li>Swap nums[1] with nums[2]. This operation is valid because 8 and 2 have one set bit each. The array becomes [4,2,8,30,15].</li>\n<li>Swap nums[0] with nums[1]. This operation is valid because 4 and 2 have one set bit each. The array becomes [2,4,8,30,15].</li>\n<li>Swap nums[3] with nums[4]. This operation is valid because 30 and 15 have four set bits each. The array becomes [2,4,8,15,30].<br />\nThe array has become sorted, hence we return true.<br />\nNote that there may be other sequences of operations which also sort the array.</li>\n</ul>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [1,2,3,4,5]<br />\n<strong>Output:</strong> true<br />\n<strong>Explanation:</strong> The array is already sorted, hence we return true.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [3,16,8,4,2]<br />\n<strong>Output:</strong> false<br />\n<strong>Explanation:</strong> It can be shown that it is not possible to sort the input array using any number of operations.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<p>用簡單的 sort 演算法 Bubble Sort 進行，他的作法本身就是在與身邊的 array index value 做比較，進行交換，與題目要求相同，而接著我們只需要在檢查可以交換的兩個數字 bitcount 是否相同，若不同回傳 false。</p>\n<ul>\n<li><code>bitcount</code> : 透過  <code>n = n &amp; (n - 1);</code>  讓 n 去掉最前頭的數字 1，這樣我去掉過幾次，就知道有幾個數字 1。</li>\n</ul>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">canSortArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">bitcount</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token function\">bitcount</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    nums<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    nums<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">bitcount</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            n <span class=\"token operator\">=</span> n <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Medium",
                "Array",
                "Sorting",
                "Bit Manipulation"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/Website/DevOps/GitLab-CI-CD-%E5%AF%A6%E4%BD%9C/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/Website/DevOps/GitLab-CI-CD-%E5%AF%A6%E4%BD%9C/",
            "title": "GitLab CI/CD 實作",
            "date_published": "2024-09-20T07:30:28.000Z",
            "content_html": "",
            "tags": [
                "資訊工程",
                "Website",
                "DevOps"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/HPC/Linux/Ubuntu-%E5%90%84%E7%A8%AE%E8%A8%AD%E5%AE%9A/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/computer-science/HPC/Linux/Ubuntu-%E5%90%84%E7%A8%AE%E8%A8%AD%E5%AE%9A/",
            "title": "Ubuntu 各種設定",
            "date_published": "2024-07-12T03:25:01.000Z",
            "content_html": "<h2 id=\"module-簡介\"><a class=\"anchor\" href=\"#module-簡介\">#</a> module 簡介</h2>\n<p>專門管理環境變數的工具，全稱是 module environment，一般應用於軟體或運行庫等設備有多個版本，且需要分別配置這些環境變數。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>module ava</pre></td></tr></table></figure><h2 id=\"使用權限\"><a class=\"anchor\" href=\"#使用權限\">#</a> 使用權限</h2>\n<p>切換為根使用者</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>user@vm:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">su</span> -</pre></td></tr></table></figure><h3 id=\"增加使用者-sudo-權限\"><a class=\"anchor\" href=\"#增加使用者-sudo-權限\">#</a> 增加使用者 sudo 權限</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>user@vm:~$ <span class=\"token function\">sudo</span> adduser <span class=\"token punctuation\">[</span>user name<span class=\"token punctuation\">]</span> <span class=\"token function\">sudo</span></pre></td></tr></table></figure><h3 id=\"移除使用者-sudo-權限\"><a class=\"anchor\" href=\"#移除使用者-sudo-權限\">#</a> 移除使用者 sudo 權限</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>user@vm:~$ <span class=\"token function\">sudo</span> deluser <span class=\"token punctuation\">[</span>user name<span class=\"token punctuation\">]</span> <span class=\"token function\">sudo</span></pre></td></tr></table></figure><h2 id=\"使用者相關設定\"><a class=\"anchor\" href=\"#使用者相關設定\">#</a> 使用者相關設定</h2>\n<h3 id=\"新增使用者\"><a class=\"anchor\" href=\"#新增使用者\">#</a> 新增使用者</h3>\n<p>執行下方指令可以新增一位使用者，在 <code>user name</code>  的地方輸入需要的使用者名稱。接續可以參考下方圖片，依照提示完成新增使用者。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>user@vm:~$ <span class=\"token function\">sudo</span> adduser <span class=\"token punctuation\">[</span>user name<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p><img data-src=\"https://hackmd.io/_uploads/Hye4pymCwA.png\" alt=\"image\" /></p>\n<h3 id=\"更改密碼\"><a class=\"anchor\" href=\"#更改密碼\">#</a> 更改密碼</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>user@vm:~$ <span class=\"token function\">sudo</span> <span class=\"token function\">passwd</span> <span class=\"token punctuation\">[</span>user name<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"刪除使用者\"><a class=\"anchor\" href=\"#刪除使用者\">#</a> 刪除使用者</h3>\n<h3 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h3>\n",
            "tags": [
                "資訊工程",
                "HPC",
                "Linux",
                "Ubuntu"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/1002-Find-Common-Characters/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/1002-Find-Common-Characters/",
            "title": "1002. Find Common Characters",
            "date_published": "2024-06-05T15:42:10.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/find-common-characters/description/?envType=daily-question&amp;envId=2024-06-05\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a string array  <code>words</code> , return <em>an array of all characters that show up in all strings within the  <code>words</code>  (including duplicates).</em> You may return the answer in <strong>any order</strong>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> words = [&quot;bella&quot;,&quot;label&quot;,&quot;roller&quot;]<br />\n<strong>Output:</strong> [&quot;e&quot;,&quot;l&quot;,&quot;l&quot;]</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> words = [&quot;cool&quot;,&quot;lock&quot;,&quot;cook&quot;]<br />\n<strong>Output:</strong> [&quot;c&quot;,&quot;o&quot;]</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">commonChars</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> words<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> words<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> freq <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>len<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> c <span class=\"token operator\">:</span> words<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                freq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c <span class=\"token operator\">-</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">26</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">int</span> min <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                min <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">,</span> freq<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>min <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> min<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Easy",
                "Array",
                "String",
                "Hash Table"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/409-Longest-Palindrome/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/409-Longest-Palindrome/",
            "title": "409. Longest Palindrome",
            "date_published": "2024-06-04T13:31:00.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/longest-palindrome/?envType=daily-question&amp;envId=2024-06-04\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a string  <code>s</code>  which consists of lowercase or uppercase letters, return the length of the <strong>longest palindrome</strong> that can be built with those letters.</p>\n<p>Letters are <strong>case sensitive</strong>, for example,  <code>&quot;Aa&quot;</code>  is not considered a palindrome.</p>\n<div class=\"note info no-icon\">\n<p><strong>Palindrome</strong><br />\nA palindrome is a string that reads the same forward and backward.</p>\n</div>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;abccccdd&quot;<br />\n<strong>Output:</strong> 7<br />\n<strong>Explanation:</strong> One longest palindrome that can be built is &quot;dccaccd&quot;, whose length is 7.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;a&quot;<br />\n<strong>Output:</strong> 1<br />\n<strong>Explanation:</strong> The longest palindrome that can be built is &quot;a&quot;, whose length is 1.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">longestPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hashtable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">52</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> c <span class=\"token operator\">:</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">>=</span> <span class=\"token char\">'a'</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'z'</span><span class=\"token punctuation\">)</span>  hashtable<span class=\"token punctuation\">[</span>c <span class=\"token operator\">-</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">else</span> hashtable<span class=\"token punctuation\">[</span>c <span class=\"token operator\">-</span> <span class=\"token char\">'A'</span> <span class=\"token operator\">+</span> <span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">boolean</span> hasOdd <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value <span class=\"token operator\">:</span> hashtable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                result <span class=\"token operator\">+=</span> value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                result <span class=\"token operator\">+=</span> value <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                hasOdd <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> hasOdd <span class=\"token operator\">?</span> result <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Easy",
                "String",
                "Hash Table",
                "Greedy"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/2486-Append-Characters-to-String-to-Make-Subsequence/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/2486-Append-Characters-to-String-to-Make-Subsequence/",
            "title": "2486. Append Characters to String to Make Subsequence",
            "date_published": "2024-06-03T06:10:07.000Z",
            "content_html": "<p>⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/append-characters-to-string-to-make-subsequence/description/?envType=daily-question&amp;envId=2024-06-03\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given two strings  <code>s</code>  and  <code>t</code>  consisting of only lowercase English letters.</p>\n<p>Return <em>the minimum number of characters that need to be appended to the end of  <code>s</code>  so that  <code>t</code>  becomes a <strong>subsequence</strong> of  <code>s</code> .</em></p>\n<p>A <strong>subsequence</strong> is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;coaching&quot;, t = &quot;coding&quot;<br />\n<strong>Output:</strong> 4<br />\n<strong>Explanation:</strong> Append the characters &quot;ding&quot; to the end of s so that s = &quot;coachingding&quot;.<br />\nNow, t is a subsequence of s (&quot;coachingding&quot;).<br />\nIt can be shown that appending any 3 characters to the end of s will never make t a subsequence.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;abcde&quot;, t = &quot;a&quot;<br />\n<strong>Output:</strong> 0<br />\n<strong>Explanation:</strong> t is already a subsequence of s (&quot;abcde&quot;).</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;z&quot;, t = &quot;abcde&quot;<br />\n<strong>Output:</strong> 5<br />\n<strong>Explanation:</strong> Append the characters &quot;abcde&quot; to the end of s so that s = &quot;zabcde&quot;.<br />\nNow, t is a subsequence of s (&quot;zabcde&quot;).<br />\nIt can be shown that appending any 4 characters to the end of s will never make t a subsequence.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">appendCharacters</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> sIdx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> tIdx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sLen <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tLen <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>sIdx <span class=\"token operator\">&lt;</span> sLen <span class=\"token operator\">&amp;&amp;</span> tIdx <span class=\"token operator\">&lt;</span> tLen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>sIdx<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>tIdx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> tIdx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            sIdx<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> tLen <span class=\"token operator\">-</span> tIdx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Easy",
                "String",
                "Greedy",
                "Two Pointers"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/344-Reverse-String/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/344-Reverse-String/",
            "title": "344. Reverse String",
            "date_published": "2024-06-02T08:46:34.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/reverse-string/description/?envType=daily-question&amp;envId=2024-06-02\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Write a function that reverses a string. The input string is given as an array of characters  <code>s</code> .</p>\n<p>You must do this by modifying the input array <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSW4tcGxhY2VfYWxnb3JpdGht\">in-place</span> with  <code>O(1)</code>  extra memory.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> s = [&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]<br />\n<strong>Output:</strong> [&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> s = [&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]<br />\n<strong>Output:</strong> [&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">reverseString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">char</span> temp <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            s<span class=\"token punctuation\">[</span>j<span class=\"token operator\">--</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Easy",
                "String",
                "Two Pointers"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/3110-Score-of-a-String/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/3110-Score-of-a-String/",
            "title": "3110. Score of a String",
            "date_published": "2024-06-01T12:20:22.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/score-of-a-string/description/?envType=daily-question&amp;envId=2024-06-01\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given a string  <code>s</code> . The <strong>score</strong> of a string is defined as the sum of the absolute difference between the <strong>ASCII</strong> values of adjacent characters.</p>\n<p>Return the <strong>score</strong> of  <code>s</code> .</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;hello&quot;<br />\n<strong>Output:</strong> 13<br />\n<strong>Explanation:</strong><br />\nThe ASCII values of the characters in s are: 'h' = 104, 'e' = 101, 'l' = 108, 'o' = 111. So, the score of s would be |104 - 101| + |101 - 108| + |108 - 108| + |108 - 111| = 3 + 7 + 0 + 3 = 13.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;zaz&quot;<br />\n<strong>Output:</strong> 50<br />\n<strong>Explanation:</strong><br />\nThe ASCII values of the characters in s are: 'z' = 122, 'a' = 97. So, the score of s would be |122 - 97| + |97 - 122| = 25 + 25 = 50.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">scoreOfString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> score <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            score <span class=\"token operator\">+=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> score<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Easy",
                "String"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/260-Single-Number-III/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/260-Single-Number-III/",
            "title": "260. Single Number III",
            "date_published": "2024-05-31T08:20:32.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/single-number-iii/description/?envType=daily-question&amp;envId=2024-05-31\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an integer array  <code>nums</code> , in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. You can return the answer in <strong>any order</strong>.</p>\n<p>You must write an algorithm that runs in linear runtime complexity and uses only constant extra space.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [1,2,1,3,2,5]<br />\n<strong>Output:</strong> [3,5]<br />\n<strong>Explanation:</strong>  [5, 3] is also a valid answer.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [-1,0]<br />\n<strong>Output:</strong> [-1,0]</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [0,1]<br />\n<strong>Output:</strong> [1,0]</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java HashMap\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Solution.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">singleNumber</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">:</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">getOrDefault</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> entry <span class=\"token operator\">:</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                result<span class=\"token punctuation\">[</span>index<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java Bit Manipulation\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Solution.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">singleNumber</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> xor <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">:</span> nums<span class=\"token punctuation\">)</span> xor <span class=\"token operator\">^=</span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> mask <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>xor <span class=\"token operator\">&amp;</span> mask<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> mask <span class=\"token operator\">&lt;&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">:</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">&amp;</span> mask<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> a <span class=\"token operator\">^=</span> num<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token punctuation\">,</span> xor <span class=\"token operator\">^</span> a<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Medium",
                "Array",
                "Bit Manipulation"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/1442-Count-Triplets-That-Can-Form-Two-Arrays-of-Equal-XOR/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/1442-Count-Triplets-That-Can-Form-Two-Arrays-of-Equal-XOR/",
            "title": "1442. Count Triplets That Can Form Two Arrays of Equal XOR",
            "date_published": "2024-05-30T08:53:44.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor/description/?envType=daily-question&amp;envId=2024-05-30\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an array of integers  <code>arr</code> .</p>\n<p>We want to select three indices  <code>i</code> ,  <code>j</code>  and  <code>k</code>  where  <code>(0 &lt;= i &lt; j &lt;= k &lt; arr.length)</code> .</p>\n<p>Let's define  <code>a</code>  and  <code>b</code>  as follows:</p>\n<ul>\n<li><code>a = arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]</code></li>\n<li><code>b = arr[j] ^ arr[j + 1] ^ ... ^ arr[k]</code> <br />\nNote that <strong>^</strong> denotes the <strong>bitwise-xor</strong> operation.</li>\n</ul>\n<p>Return <em>the number of triplets ( <code>i</code> ,  <code>j</code>  and  <code>k</code> ) Where  <code>a == b</code> .</em></p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> arr = [2,3,1,6,7]<br />\n<strong>Output:</strong> 4<br />\n<strong>Explanation:</strong> The triplets are (0,1,2), (0,2,2), (2,3,4) and (2,4,4)</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> arr = [1,1,1,1,1]<br />\n<strong>Output:</strong> 10</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java Prefix Sum\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Solution.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">countTriplets</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> prefix <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            prefix<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> prefix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> prefix<span class=\"token punctuation\">[</span>k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    count <span class=\"token operator\">+=</span> k <span class=\"token operator\">-</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"><span>Solution.java</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">countTriplets</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">int</span> curr_XOR <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                curr_XOR <span class=\"token operator\">^=</span> arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>curr_XOR <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> count <span class=\"token operator\">+=</span> k <span class=\"token operator\">-</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Medium",
                "Array",
                "Math",
                "Hash Table",
                "Prefix Sum",
                "Bit Manipulation"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/1404-Number-of-Steps-to-Reduce-a-Number-in-Binary-Representation-to-One/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/1404-Number-of-Steps-to-Reduce-a-Number-in-Binary-Representation-to-One/",
            "title": "1404. Number of Steps to Reduce a Number in Binary Representation to One",
            "date_published": "2024-05-29T12:48:47.000Z",
            "content_html": "<p>⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/description/?envType=daily-question&amp;envId=2024-05-29\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given the binary representation of an integer as a string  <code>s</code> , return <em>the number of steps to reduce it to  <code>1</code>  under the following rules</em>:</p>\n<ul>\n<li>If the current number is even, you have to divide it by  <code>2</code> .</li>\n<li>If the current number is odd, you have to add  <code>1</code>  to it.</li>\n</ul>\n<p>It is guaranteed that you can always reach one for all test cases.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;1101&quot;<br />\n<strong>Output:</strong> 6<br />\n<strong>Explanation:</strong> &quot;1101&quot; corressponds to number 13 in their decimal representation.<br />\nStep 1) 13 is odd, add 1 and obtain 14.<br />\nStep 2) 14 is even, divide by 2 and obtain 7.<br />\nStep 3) 7 is odd, add 1 and obtain 8.<br />\nStep 4) 8 is even, divide by 2 and obtain 4.<br />\nStep 5) 4 is even, divide by 2 and obtain 2.<br />\nStep 6) 2 is even, divide by 2 and obtain 1.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;10&quot;<br />\n<strong>Output:</strong> 1<br />\n<strong>Explanation:</strong> &quot;10&quot; corressponds to number 2 in their decimal representation.<br />\nStep 1) 2 is even, divide by 2 and obtain 1.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;1&quot;<br />\n<strong>Output:</strong> 0</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">numSteps</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> steps <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> carry <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span> <span class=\"token operator\">+</span> carry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            carry <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  carry <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> steps<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            steps<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>carry <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> steps <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> steps<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Medium",
                "String",
                "Bit Manipulation"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/1208-Get-Equal-Substrings-Within-Budget/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Medium/1208-Get-Equal-Substrings-Within-Budget/",
            "title": "1208. Get Equal Substrings Within Budget",
            "date_published": "2024-05-28T13:51:13.000Z",
            "content_html": "<p>⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/get-equal-substrings-within-budget/description/?envType=daily-question&amp;envId=2024-05-28\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given two strings  <code>s</code>  and  <code>t</code>  of the same length and an integer  <code>maxCost</code> .</p>\n<p>You want to change  <code>s</code>  to  <code>t</code> . Changing the  <code>ith</code>  character of  <code>s</code>  to  <code>ith</code>  character of  <code>t</code>  costs  <code>|s[i] - t[i]|</code>  (i.e., the absolute difference between the ASCII values of the characters).</p>\n<p>Return <em>the maximum length of a substring of  <code>s</code>  that can be changed to be the same as the corresponding substring of  <code>t</code>  with a cost less than or equal to  <code>maxCost</code> .</em> If there is no substring from  <code>s</code>  that can be changed to its corresponding substring from  <code>t</code> , return  <code>0</code> .</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;bcdf&quot;, maxCost = 3<br />\n<strong>Output:</strong> 3<br />\n<strong>Explanation:</strong> &quot;abc&quot; of s can change to &quot;bcd&quot;.<br />\nThat costs 3, so the maximum length is 3.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;cdef&quot;, maxCost = 3<br />\n<strong>Output:</strong> 1<br />\n<strong>Explanation:</strong> Each character in s costs 2 to change to character in t,  so the maximum length is 1.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;abcd&quot;, t = &quot;acde&quot;, maxCost = 0<br />\n<strong>Output:</strong> 1<br />\n<strong>Explanation:</strong> You cannot make any change, so the maximum length is 1.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">equalSubstring</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> maxCost<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> diff <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            diff<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> start <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            maxCost <span class=\"token operator\">-=</span> diff<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>maxCost <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> maxCost <span class=\"token operator\">+=</span> diff<span class=\"token punctuation\">[</span>start<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            count <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">,</span> i <span class=\"token operator\">-</span> start <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Medium",
                "String",
                "Binary Search",
                "Prefix Sum",
                "Sliding Window"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/1608-Special-Array-With-X-Elements-Greater-Than-or-Equal-X/",
            "url": "https://chenhsingyu-0212.github.io/%20https://hsingyu.blog/coding/leetcode/Easy/1608-Special-Array-With-X-Elements-Greater-Than-or-Equal-X/",
            "title": "1608. Special Array With X Elements Greater Than or Equal X",
            "date_published": "2024-05-27T10:25:01.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/special-array-with-x-elements-greater-than-or-equal-x/description/?envType=daily-question&amp;envId=2024-05-27\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given an array  <code>nums</code>  of non-negative integers.  <code>nums</code>  is considered <strong>special</strong> if there exists a number  <code>x</code>  such that there are <strong>exactly</strong>  <code>x</code>  numbers in  <code>nums</code>  that are <strong>greater than or equal to</strong>  <code>x</code> .</p>\n<p>Notice that  <code>x</code>  <strong>does not</strong> have to be an element in  <code>nums</code> .</p>\n<p>Return <em> <code>x</code>  if the array is <strong>special</strong>, otherwise, return  <code>-1</code> .</em> It can be proven that if  <code>nums</code>  is special, the value for  <code>x</code>  is <strong>unique</strong>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [3,5]<br />\n<strong>Output:</strong> 2<br />\n<strong>Explanation:</strong> There are 2 values (3 and 5) that are greater than or equal to 2.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [0,0]<br />\n<strong>Output:</strong> -1<br />\n<strong>Explanation:</strong> No numbers fit the criteria for x.<br />\nIf x = 0, there should be 0 numbers &gt;= x, but there are 2.<br />\nIf x = 1, there should be 1 number &gt;= x, but there are 0.<br />\nIf x = 2, there should be 2 numbers &gt;= x, but there are 0.<br />\nx cannot be greater since there are only 2 numbers in nums.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [0,4,3,0,4]<br />\n<strong>Output:</strong> 3<br />\n<strong>Explanation:</strong> There are 3 values that are greater than or equal to 3.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">specialArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">:</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">>=</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                    count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "Coding",
                "Leetcode",
                "Easy",
                "Array",
                "Sorting",
                "Binary Search"
            ]
        }
    ]
}