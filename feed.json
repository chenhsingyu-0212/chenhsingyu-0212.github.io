{
    "version": "https://jsonfeed.org/version/1",
    "title": "MyBlog",
    "subtitle": "We are the dreamers. We make it happen 'cause we can see it.",
    "icon": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/images/favicon.ico",
    "description": "謝謝你來，謝謝你還在",
    "home_page_url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io",
    "items": [
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2621-Sleep/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2621-Sleep/",
            "title": "2621. Sleep",
            "date_published": "2023-05-15T02:35:00.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/sleep/?utm_campaign=PostD11&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=5Rp2Wmzo\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a positive integer  <code>millis</code> , write an asyncronous function that sleeps for  <code>millis</code>  milliseconds. It can resolve any value.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>: millis = 100<br />\n<strong>Output</strong>: 100<br />\n<strong>Explanation</strong>: It should return a promise that resolves after 100ms.<br />\nlet t = Date.now();<br />\nsleep(100).then(() =&gt; {<br />\nconsole.log(Date.now() - t); // 100<br />\n});</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: millis = 200<br />\n<strong>Output</strong>: 200<br />\n<strong>Explanation</strong>: It should return a promise that resolves after 200ms.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;number&#125; millis</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">millis</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> millis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/** </pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * let t = Date.now()</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * sleep(100).then(() => console.log(Date.now() - t)) // 100</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>millis<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token builtin\">Promise</span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> millis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/** </pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * let t = Date.now()</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * sleep(100).then(() => console.log(Date.now() - t)) // 100</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1721-Swapping-Nodes-in-a-Linked-List/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1721-Swapping-Nodes-in-a-Linked-List/",
            "title": "1721. Swapping Nodes in a Linked List",
            "date_published": "2023-05-15T01:48:06.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/swapping-nodes-in-a-linked-list/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given the  <code>head</code>  of a linked list, and an integer  <code>k</code> .</p>\n<p>Return <em>the head of the linked list after <strong>swapping</strong> the values of the  <code>kth</code>  node from the beginning and the  <code>kth</code>  node from the end (the list is <strong>1-indexed</strong>)</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<p><img data-src=\"https://imgur.com/4lQ72Hu.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input</strong>: head = [1,2,3,4,5], k = 2<br />\n<strong>Output</strong>: [1,4,3,2,5]</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: head = [7,9,6,6,7,8,3,0,9,5], k = 5<br />\n<strong>Output</strong>: [7,9,6,6,8,7,3,0,9,5]</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// Definition for singly-linked list.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ListNode</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">ListNode</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ListNode</span> next<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ListNode</span> <span class=\"token function\">swapNodes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ListNode</span> head<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">ListNode</span> start <span class=\"token operator\">=</span> head<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> head<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            start <span class=\"token operator\">=</span> start<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">ListNode</span> curr <span class=\"token operator\">=</span> start<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>curr<span class=\"token punctuation\">.</span>next <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            curr <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            end <span class=\"token operator\">=</span> end<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> start<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        start<span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> end<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        end<span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> head<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Linked List",
                "Two Pointers"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2666-Allow-One-Function-Call/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2666-Allow-One-Function-Call/",
            "title": "2666. Allow One Function Call",
            "date_published": "2023-05-12T03:26:20.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/allow-one-function-call/description/?utm_campaign=PostD8&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=a9By01Oo\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a function  <code>fn</code> , return a new function that is identical to the original function except that it ensures  <code>fn</code>  is called at most once.</p>\n<ul>\n<li>The first time the returned function is called, it should return the same result as  <code>fn</code> .</li>\n<li>Every subsequent time it is called, it should return  <code>undefined</code> .</li>\n</ul>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>: fn = (a,b,c) =&gt; (a + b + c), calls = [[1,2,3],[2,3,6]]<br />\n<strong>Output</strong>: [{&quot;calls&quot;:1,&quot;value&quot;:6}]<br />\n<strong>Explanation</strong>:<br />\nconst onceFn = once(fn);<br />\nonceFn(1, 2, 3); // 6<br />\nonceFn(2, 3, 6); // undefined, fn was not called</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: fn = (a,b,c) =&gt; (a * b * c), calls = [[5,7,4],[2,3,6],[4,6,8]]<br />\n<strong>Output</strong>: [{&quot;calls&quot;:1,&quot;value&quot;:140}]<br />\n<strong>Explanation</strong>:<br />\nconst onceFn = once(fn);<br />\nonceFn(5, 7, 4); // 140<br />\nonceFn(2, 3, 6); // undefined, fn was not called<br />\nonceFn(4, 6, 8); // undefined, fn was not called</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;Function&#125; fn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @return &#123;Function&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">once</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">let</span> isCall <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isCall<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            isCall <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * let fn = (a,b,c) => (a + b + c)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * let onceFn = once(fn)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * onceFn(1,2,3); // 6</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * onceFn(2,3,6); // returns undefined without calling fn</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> once<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>fn<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token operator\">:</span> Parameters<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ReturnType<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">let</span> isCall<span class=\"token operator\">:</span> Boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isCall<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            isCall <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * let fn = (a,b,c) => (a + b + c)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * let onceFn = once(fn)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * onceFn(1,2,3); // 6</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * onceFn(2,3,6); // returns undefined without calling fn</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/2140-Solving-Questions-With-Brainpower/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/2140-Solving-Questions-With-Brainpower/",
            "title": "2140. Solving Questions With Brainpower",
            "date_published": "2023-05-12T02:48:50.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/solving-questions-with-brainpower/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given <strong>a 0-indexed</strong> 2D integer array  <code>questions</code>  where  <code>questions[i] = [pointsi, brainpoweri]</code> .</p>\n<p>The array describes the questions of an exam, where you have to process the questions <strong>in order</strong> (i.e., starting from question  <code>0</code> ) and make a decision whether to <strong>solve</strong> or <strong>skip</strong> each question. Solving question  <code>i</code>  will earn you  <code>pointsi</code>  points but you will be <strong>unable</strong> to solve each of the next  <code>brainpoweri</code>  questions. If you skip question  <code>i</code> , you get to make the decision on the next question.</p>\n<ul>\n<li>For example, given  <code>questions = [[3, 2], [4, 3], [4, 4], [2, 5]]</code> :\n<ul>\n<li>If question  <code>0</code>  is solved, you will earn  <code>3</code>  points but you will be unable to solve questions  <code>1</code>  and  <code>2</code> .</li>\n<li>If instead, question  <code>0</code>  is skipped and question  <code>1</code>  is solved, you will earn  <code>4</code>  points but you will be unable to solve questions  <code>2</code>  and  <code>3</code> .</li>\n</ul>\n</li>\n</ul>\n<p>Return <em>the <strong>maximum</strong> points you can earn for the exam</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong> questions = [[3,2],[4,3],[4,4],[2,5]]<br />\n<strong>Output:</strong> 5<br />\n<strong>Explanation:</strong> The maximum points can be earned by solving questions 0 and 3.</p>\n<ul>\n<li>Solve question 0: Earn 3 points, will be unable to solve the next 2 questions</li>\n<li>Unable to solve questions 1 and 2</li>\n<li>Solve question 3: Earn 2 points<br />\nTotal points earned: 3 + 2 = 5. There is no other way to earn 5 or more points.</li>\n</ul>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> questions = [[1,1],[2,2],[3,3],[4,4],[5,5]]<br />\n<strong>Output:</strong> 7<br />\n<strong>Explanation:</strong> The maximum points can be earned by solving questions 1 and 4.</p>\n<ul>\n<li>Skip question 0</li>\n<li>Solve question 1: Earn 2 points, will be unable to solve the next 2 questions</li>\n<li>Unable to solve questions 2 and 3</li>\n<li>Solve question 4: Earn 5 points<br />\nTotal points earned: 2 + 5 = 7. There is no other way to earn 7 or more points.</li>\n</ul>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">mostPoints</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> questions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> questions<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">long</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        dp<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> questions<span class=\"token punctuation\">[</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> questions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">int</span> skip <span class=\"token operator\">=</span> questions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> skip <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> skip <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// dp[i] = max(solve it, skip it)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Array",
                "Dynamic Programming"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2629-Function-Composition/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2629-Function-Composition/",
            "title": "2629. Function Composition",
            "date_published": "2023-05-11T01:58:09.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/function-composition/description/?utm_campaign=PostD7&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=4PY7wZM9\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an array of functions  <code>[f1, f2, f3, ..., fn]</code> , return a new function  <code>fn</code>  that is the <strong>function composition</strong> of the array of functions.</p>\n<p>The <strong>function composition</strong> of  <code>[f(x), g(x), h(x)]</code>  is  <code>fn(x) = f(g(h(x)))</code> .</p>\n<p>The <strong>function composition</strong> of an empty list of functions is the <strong>identity function</strong>  <code>f(x) = x</code> .</p>\n<p>You may assume each function in the array accepts one integer as input and returns one integer as output.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>: functions = [x =&gt; x + 1, x =&gt; x * x, x =&gt; 2 * x], x = 4<br />\n<strong>Output</strong>: 65<br />\n<strong>Explanation</strong>:<br />\nEvaluating from right to left ...<br />\nStarting with x = 4.<br />\n2 * (4) = 8<br />\n(8) * (8) = 64<br />\n(64) + 1 = 65</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2</h3>\n<blockquote>\n<p><strong>Input</strong>: functions = [x =&gt; 10 * x, x =&gt; 10 * x, x =&gt; 10 * x], x = 1<br />\n<strong>Output</strong>: 1000<br />\n<strong>Explanation</strong>:<br />\nEvaluating from right to left ...<br />\n10 * (1) = 10<br />\n10 * (10) = 100<br />\n10 * (100) = 1000</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3</h3>\n<blockquote>\n<p><strong>Input</strong>: functions = [], x = 42<br />\n<strong>Output</strong>: 42<br />\n<strong>Explanation</strong>:<br />\nThe composition of zero functions is the identity function</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;Function[]&#125; functions</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @return &#123;Function&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">compose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">functions</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        functions<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            x <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * const fn = compose([x => x + 1, x => 2 * x])</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * fn(4) // 9</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">F</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>functions<span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">F</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        functions<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fn<span class=\"token operator\">:</span> <span class=\"token constant\">F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            x <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * const fn = compose([x => x + 1, x => 2 * x])</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * fn(4) // 9</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1035-Uncrossed-Lines/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1035-Uncrossed-Lines/",
            "title": "1035. Uncrossed Lines",
            "date_published": "2023-05-11T01:31:10.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/uncrossed-lines/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given two integer arrays  <code>nums1</code>  and  <code>nums2</code> . We write the integers of  <code>nums1</code>  and  <code>nums2</code>  (in the order they are given) on two separate horizontal lines.</p>\n<p>We may draw connecting lines: a straight line connecting two numbers  <code>nums1[i]</code>  and  <code>nums2[j]</code>  such that:</p>\n<ul>\n<li><code>nums1[i] == nums2[j]</code> , and</li>\n<li>the line we draw does not intersect any other connecting (non-horizontal) line.</li>\n</ul>\n<p>Note that a connecting line cannot intersect even at the endpoints (i.e., each number can only belong to one connecting line).</p>\n<p>Return <em>the maximum number of connecting lines we can draw in this way</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p>![](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vX3VwbG9hZHMvcmtJak5wS04zLnBuZw==\">https://hackmd.io/_uploads/rkIjNpKN3.png</span> =400x)</p>\n<blockquote>\n<p><strong>Input:</strong> nums1 = [1,4,2], nums2 = [1,2,4]<br />\n<strong>Output:</strong> 2<br />\n<strong>Explanation:</strong> We can draw 2 uncrossed lines as in the diagram.<br />\nWe cannot draw 3 uncrossed lines, because the line from nums1[1] = 4 to nums2[2] = 4 will intersect the line from nums1[2]=2 to nums2[1]=2.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> nums1 = [2,5,1,2,5], nums2 = [10,5,2,1,5,2]<br />\n<strong>Output:</strong> 3</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input:</strong> nums1 = [1,3,7,1,7,5], nums2 = [1,9,2,5,1]<br />\n<strong>Output:</strong> 2</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">maxUncrossedLines</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> nums2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>m <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>nums1<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> nums2<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Array",
                "Dynamic Programming"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E5%96%AE%E5%AD%97/function-vs-feature/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E5%96%AE%E5%AD%97/function-vs-feature/",
            "title": "function vs. feature",
            "date_published": "2023-05-10T06:50:14.000Z",
            "content_html": "<p>⭐️</p>\n<div class=\"note info no-icon\">\n<p>當我們想要用英文表達「功能」這個概念的時候，到底該用 &quot;function&quot; 還是 &quot;feature&quot; 呢？</p>\n</div>\n<h2 id=\"function\"><a class=\"anchor\" href=\"#function\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUvZnVuY3Rpb24=\">function</span></h2>\n<p>(n.) <span class=\"spoiler\" title=\"你知道得太多了\">功能，用途；職責</span></p>\n<blockquote>\n<p>the natural purpose (of something) or the duty (of a person)</p>\n</blockquote>\n<ul>\n<li>指的是有目的的特定功能，比方說一項服務或產品的用途，多為基本功能的描述，如洗衣機可以洗脫烘衣服</li>\n</ul>\n<ol>\n<li>The functions of our latest model of washing machine includes washing and drying your clothes.<br />\n 這款最新機型的洗衣機功能包含清洗與烘乾衣物。</li>\n</ol>\n<h2 id=\"feature\"><a class=\"anchor\" href=\"#feature\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUvZmVhdHVyZQ==\">feature</span></h2>\n<p>(n.) <span class=\"spoiler\" title=\"你知道得太多了\">特色，特徵，特點</span></p>\n<blockquote>\n<p>a typical quality or an important part of something</p>\n</blockquote>\n<ul>\n<li>feature 則是附加功能或特殊賣點，例如洗衣機可以連 wifi 和 app 搭配使用，洗衣完成會推播通知這就是為什麼商業和科技產品文案會寫 feature，不寫 function，因為 function 很容易可滿足，所有廠商都能做得到，但是 feature 卻能夠突顯出產品的與眾不同之處，吸引消費者的目光並刺激他們的購買慾。</li>\n</ul>\n<ol>\n<li>Our latest model of washing machine has several new features such as 10 wash programs, tub clean function and delay start function etc.<br />\n 我們這款洗衣機的最新機型有很多新特色，比方說 10 種洗衣模式、洗衣槽清潔功能、延遲執行等。</li>\n</ol>\n<div class=\"note success no-icon\">\n<p><strong>近義詞</strong> attribute、characteristic，為「特色、鮮明的特徵」</p>\n</div>\n<h2 id=\"參考文獻\"><a class=\"anchor\" href=\"#參考文獻\">#</a> 參考文獻</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mdW5kYXkuYXNpYS9ibG9nRGVza3RvcC9ibG9nLmFzcD9ibG9nPTQxMg==\">https://funday.asia/blogDesktop/blog.asp?blog=412</span></li>\n</ul>\n<h2 id=\"這篇由來\"><a class=\"anchor\" href=\"#這篇由來\">#</a> 這篇由來</h2>\n<p>因為我在寫 project 時，在想 git commit specification，其中就用到了 feature 和 function，但不知如何區別兩個的使用，也發現了其實在寫軟體專案時，還蠻喜歡用 feature 的。</p>\n",
            "tags": [
                "語言",
                "英文",
                "單字",
                "英文單字",
                "難度 1"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2626-Array-Reduce-Transformation/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2626-Array-Reduce-Transformation/",
            "title": "2626. Array Reduce Transformation",
            "date_published": "2023-05-10T01:49:13.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/array-reduce-transformation/description/?utm_campaign=PostD6&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=nPN45jD9\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an integer array  <code>nums</code> , a reducer function  <code>fn</code> , and an initial value  <code>init</code> , return a <strong>reduced</strong> array.</p>\n<p>A <strong>reduced</strong> array is created by applying the following operation:  <code>val = fn(init, nums[0])</code> ,  <code>val = fn(val, nums[1])</code> ,  <code>val = fn(val, nums[2])</code> ,  <code>...</code>  until every element in the array has been processed. The final value of  <code>val</code>  is returned.</p>\n<p>If the length of the array is 0, it should return  <code>init</code> .</p>\n<p>Please solve it without using the built-in  <code>Array.reduce</code>  method.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1</h3>\n<blockquote>\n<p><strong>Input</strong>:<br />\nnums = [1,2,3,4]<br />\nfn = function sum(accum, curr) { return accum + curr; }<br />\ninit = 0<br />\n<strong>Output</strong>: 10<br />\n<strong>Explanation</strong>:<br />\ninitially, the value is init=0.<br />\n(0) + nums[0] = 1<br />\n(1) + nums[1] = 3<br />\n(3) + nums[2] = 6<br />\n(6) + nums[3] = 10<br />\nThe final answer is 10.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input</strong>:<br />\nnums = [1,2,3,4]<br />\nfn = function sum(accum, curr) { return accum + curr * curr; }<br />\ninit = 100<br />\n<strong>Output</strong>: 130<br />\n<strong>Explanation</strong>:<br />\ninitially, the value is init=100.<br />\n(100) + nums[0]^2 = 101<br />\n(101) + nums[1]^2 = 105<br />\n(105) + nums[2]^2 = 114<br />\n(114) + nums[3]^2 = 130<br />\nThe final answer is 130.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input</strong>:<br />\nnums = []<br />\nfn = function sum(accum, curr) { return 0; }<br />\ninit = 25<br />\n<strong>Output</strong>: 25<br />\n<strong>Explanation</strong>: For empty arrays, the answer is always init.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;number[]&#125; nums</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param &#123;Function&#125; fn</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @param &#123;number&#125; init</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @return &#123;number&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">reduce</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">nums<span class=\"token punctuation\">,</span> fn<span class=\"token punctuation\">,</span> init</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    nums<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        init <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> init<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> <span class=\"token class-name\">Fn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>accum<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> curr<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>nums<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> fn<span class=\"token operator\">:</span> Fn<span class=\"token punctuation\">,</span> init<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    nums<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        init <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>init<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> init<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/59-Spiral-Matrix-II/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/59-Spiral-Matrix-II/",
            "title": "59. Spiral Matrix II",
            "date_published": "2023-05-10T01:32:58.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/spiral-matrix-ii/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a positive integer  <code>n</code> , generate an  <code>n x n</code>   <code>matrix</code>  filled with elements from  <code>1</code>  to  <code>n^2</code>  in spiral order.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p><img data-src=\"https://hackmd.io/_uploads/SyE0X_OVn.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> n = 3<br />\n<strong>Output:</strong> [[1,2,3],[8,9,4],[7,6,5]]</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> n = 1<br />\n<strong>Output:</strong> [[1]]</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">generateMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> ans <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> top <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bottom <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right <span class=\"token operator\">&amp;&amp;</span> top <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                ans<span class=\"token punctuation\">[</span>top<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            top<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> top<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>top <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> right<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> left<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    ans<span class=\"token punctuation\">[</span>bottom<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                bottom<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> bottom<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> top<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    ans<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Array",
                "Simulation",
                "Matrix"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E6%96%B0%E8%81%9E/%E4%BF%84%E5%9C%8B%E7%9A%84%E8%A8%88%E7%95%AB%E6%98%AF%E4%BB%80%E9%BA%BC%EF%BC%9F/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/language/english/%E6%96%B0%E8%81%9E/%E4%BF%84%E5%9C%8B%E7%9A%84%E8%A8%88%E7%95%AB%E6%98%AF%E4%BB%80%E9%BA%BC%EF%BC%9F/",
            "title": "俄國的計畫是什麼？",
            "date_published": "2023-05-09T05:48:04.000Z",
            "content_html": "<p>⭐️⭐️</p>\n<h2 id=\"俄國的計畫是什麼\"><a class=\"anchor\" href=\"#俄國的計畫是什麼\">#</a> 俄國的計畫是什麼？</h2>\n<div class=\"note info no-icon\">\n<p>俄羅斯在入侵烏克蘭幾週後終於看清自己的能力，他們的軍隊無法在三天內佔領基輔。 相反，俄國軍隊面臨頑強的抵抗，戰爭已經拖延了一年。後續可能會如何發展呢？</p>\n</div>\n<h3 id=\"what-each-side-wants\"><a class=\"anchor\" href=\"#what-each-side-wants\">#</a> What each side wants</h3>\n<p>Russia’s leadership no longer appears to be trying to <span class=\"orange\">oust</span> Ukrainian president Volodymyr Zelensky from power. <span class=\"aqua\">Instead</span>, the <span class=\"orange\">short-term goal</span> seems to be <span class=\"aqua\">gaining</span> control over the <span class=\"aqua\">territories</span> Russia <span class=\"orange\">annexed</span> last fall. Putin has said he’s <span class=\"orange\">open to negotiations</span>, while Russian <span class=\"aqua\">troops</span> continue to attack Ukraine’s cities.</p>\n<ul>\n<li>單字 oust 驅逐、推翻</li>\n<li>常見組合 short-term goal 短期目標</li>\n<li>單字 annex 併吞</li>\n<li>片語動詞 open to something 願意接受某東西\n<ul>\n<li>I'm open to discussing the possibility of a discount.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"whats-to-come\"><a class=\"anchor\" href=\"#whats-to-come\">#</a> What’s to come?</h3>\n<p><span class=\"aqua\">Military</span> <span class=\"aqua\">experts</span> warn that the situation could <span class=\"orange\">morph</span> into a <span class=\"orange\">stalemate</span> and the war might <span class=\"orange\">drag on</span> for months or even years, with neither side able to make any <span class=\"aqua\">significant</span> progress.</p>\n<ul>\n<li>單字 morph 轉化為</li>\n<li>單字 stalemate 僵局</li>\n<li>片語動詞 drag on 拖延\n<ul>\n<li>The war could drag on for years.</li>\n</ul>\n</li>\n</ul>\n<details class=\"success\"><summary>單字</summary><div>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/gain?q=gaining\"><strong>gaining</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 取得</span></p>\n<blockquote>\n<p>to get something that is useful, that gives you an advantage, or that is in some way positive, especially over a period of time</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/territory?q=territories\"><strong>territories</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 領土</span></p>\n<blockquote>\n<p>(an area of) land, or sometimes sea, that is considered as belonging to or connected with a particular country or person</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/negotiation?q=negotiations\"><strong>negotiations</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 談判</span></p>\n<blockquote>\n<p>the process of discussing something with someone in order to reach an agreement with them, or the discussions themselves</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/troops\"><strong>troops</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 軍隊</span> n.</p>\n<blockquote>\n<p>soldiers on duty in a large group</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/military?q=Military\"><strong>military</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 軍隊的</span> adj.</p>\n<blockquote>\n<p>relating to or belonging to the armed forces</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/expert?q=experts\"><strong>experts</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 專家</span></p>\n<blockquote>\n<p>a person with a high level of knowledge or skill relating to a particular subject or activity</p>\n</blockquote>\n<p><a href=\"https://dictionary.cambridge.org/zht/%E8%A9%9E%E5%85%B8/%E8%8B%B1%E8%AA%9E/significant\"><strong>significant</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 重要的</span></p>\n<blockquote>\n<p>important or noticeable</p>\n</blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<p><a href=\"https://www.hopenglish.com/hope-tips-instead-of-and-instead\"><strong>Instead</strong></a><br />\n<span class=\"spoiler\" title=\"你知道得太多了\"> 反而；替代</span></p>\n</div></details>\n",
            "tags": [
                "語言",
                "英文",
                "新聞",
                "英文新聞",
                "難度 2"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2634-Filter-Elements-from-Array/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2634-Filter-Elements-from-Array/",
            "title": "2634. Filter Elements from Array",
            "date_published": "2023-05-09T05:25:29.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/filter-elements-from-array/description/?utm_campaign=PostD5&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=a9a5VZr9\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an integer array  <code>arr</code>  and a filtering function  <code>fn</code> , return a new array with a fewer or equal number of elements.</p>\n<p>The returned array should only contain elements where  <code>fn(arr[i], i)</code>  evaluated to a truthy value.</p>\n<p>Please solve it without the built-in  <code>Array.filter</code>  method.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input</strong>: arr = [0,10,20,30], fn = function greaterThan10(n) { return n &gt; 10; }<br />\n<strong>Output</strong>: [20,30]<br />\n<strong>Explanation</strong>:<br />\nconst newArray = filter(arr, fn); // [20, 30]<br />\nThe function filters out values that are not greater than 10</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input</strong>: arr = [1,2,3], fn = function firstIndex(n, i) { return i === 0; }<br />\n<strong>Output</strong>: [1]<br />\n<strong>Explanation</strong>:<br />\nfn can also accept the index of each element<br />\nIn this case, the function removes elements not at index 0</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input</strong>: arr = [-2,-1,0,1,2], fn = function plusOne(n) { return n + 1 }<br />\n<strong>Output</strong>: [-2,0,1,2]<br />\n<strong>Explanation</strong>:<br />\nFalsey values such as 0 should be filtered out</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;number[]&#125; arr</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param &#123;Function&#125; fn</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @return &#123;number[]&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">filter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">let</span> ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            ans<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>arr<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> ans<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            ans<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/54-Spiral-Matrix/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/54-Spiral-Matrix/",
            "title": "54. Spiral Matrix",
            "date_published": "2023-05-09T04:53:03.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/spiral-matrix/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an  <code>m x n</code>   <code>matrix</code> , return <em>all elements of the  <code>matrix</code>  in spiral order.</em></p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p><img data-src=\"https://hackmd.io/_uploads/rJiuimwNh.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input</strong>: matrix = [[1,2,3],[4,5,6],[7,8,9]]<br />\n<strong>Output</strong>: [1,2,3,6,9,8,7,4,5]</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<p><img data-src=\"https://hackmd.io/_uploads/rJgtsmDVn.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input</strong>: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]<br />\n<strong>Output</strong>: [1,2,3,4,8,12,11,10,9,5,6,7]</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">spiralOrder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> matrix<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> rows <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> cols <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> ans <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rows <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> cols <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> top <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bottom <span class=\"token operator\">=</span> rows <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right <span class=\"token operator\">&amp;&amp;</span> top <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                ans<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>top<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            top<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> top<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                ans<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>top <span class=\"token operator\">&lt;=</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> right<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> left<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    ans<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>bottom<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                bottom<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> bottom<span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> top<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    ans<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Array",
                "Simulation",
                "Matrix"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2635-Apply-Transform-Over-Each-Element-in-Array/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2635-Apply-Transform-Over-Each-Element-in-Array/",
            "title": "2635. Apply Transform Over Each Element in Array",
            "date_published": "2023-05-08T02:04:46.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/apply-transform-over-each-element-in-array/?utm_campaign=PostD4&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=noqbNOv9\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an integer array  <code>arr</code>  and a mapping function  <code>fn</code> , return a new array with a transformation applied to each element.</p>\n<p>The returned array should be created such that  <code>returnedArray[i] = fn(arr[i], i)</code> .</p>\n<p>Please solve it without the built-in  <code>Array.map</code>  method.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong> arr = [1,2,3], fn = function plusone(n) { return n + 1; }<br />\n<strong>Output:</strong> [2,3,4]<br />\n<strong>Explanation:</strong><br />\nconst newArray = map(arr, plusone); // [2,3,4]<br />\nThe function increases each value in the array by one.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> arr = [1,2,3], fn = function plusI(n, i) { return n + i; }<br />\n<strong>Output:</strong> [1,3,5]<br />\n<strong>Explanation:</strong> The function increases each value by the index it resides in.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input:</strong> arr = [10,20,30], fn = function constant() { return 42; }<br />\n<strong>Output:</strong> [42,42,42]<br />\n<strong>Explanation:</strong> The function always returns 42.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;number[]&#125; arr</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param &#123;Function&#125; fn</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @return &#123;number[]&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">map</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> val <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span>arr<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">fn</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>val<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> idx<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> val <span class=\"token operator\">=</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/1572-Matrix-Diagonal-Sum/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/1572-Matrix-Diagonal-Sum/",
            "title": "1572. Matrix Diagonal Sum",
            "date_published": "2023-05-08T01:28:16.000Z",
            "content_html": "<p>⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/matrix-diagonal-sum/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a square matrix  <code>mat</code> , return the sum of the matrix diagonals.</p>\n<p>Only include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<p><img data-src=\"https://hackmd.io/_uploads/rJ0RgRHVh.png\" alt=\"\" /></p>\n<blockquote>\n<p><strong>Input:</strong> mat =<br />\n[[1,2,3],<br />\n[4,5,6],<br />\n[7,8,9]]<br />\n<strong>Output:</strong> 25<br />\n<strong>Explanation:</strong> Diagonals sum: 1 + 5 + 9 + 3 + 7 = 25<br />\nNotice that element mat[1][1] = 5 is counted only once.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> mat =<br />\n[[1,1,1,1],<br />\n[1,1,1,1],<br />\n[1,1,1,1],<br />\n[1,1,1,1]]<br />\n<strong>Output:</strong> 8</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input:</strong> mat = [[5]]<br />\n<strong>Output:</strong> 5</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">diagonalSum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> mat<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> mat<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            ans <span class=\"token operator\">+=</span> mat<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            ans <span class=\"token operator\">+=</span> mat<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>m <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            ans <span class=\"token operator\">-=</span> mat<span class=\"token punctuation\">[</span>m <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>m <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Array",
                "Matrix"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2665-Counter-II/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2665-Counter-II/",
            "title": "2665. Counter II",
            "date_published": "2023-05-07T12:04:22.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/counter-ii/description/?utm_campaign=PostD3&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=xRxVYOXo\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Write a function  <code>createCounter</code> . It should accept an initial integer  <code>init</code> . It should return an object with three functions.</p>\n<p>The three functions are:</p>\n<ul>\n<li><code>increment()</code>  increases the current value by 1 and then returns it.</li>\n<li><code>decrement()</code>  reduces the current value by 1 and then returns it.</li>\n<li><code>reset()</code>  sets the current value to  <code>init</code>  and then returns it.</li>\n</ul>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input</strong>: init = 5, calls = [&quot;increment&quot;,&quot;reset&quot;,&quot;decrement&quot;]<br />\n<strong>Output</strong>: [6,5,4]<br />\n<strong>Explanation</strong>:<br />\nconst counter = createCounter(5);<br />\ncounter.increment(); // 6<br />\ncounter.reset(); // 5<br />\ncounter.decrement(); // 4</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input</strong>: init = 0, calls = [&quot;increment&quot;,&quot;increment&quot;,&quot;decrement&quot;,&quot;reset&quot;,&quot;reset&quot;]<br />\n<strong>Output</strong>: [1,2,1,0,0]<br />\n<strong>Explanation</strong>:<br />\nconst counter = createCounter(0);<br />\ncounter.increment(); // 1<br />\ncounter.increment(); // 2<br />\ncounter.decrement(); // 1<br />\ncounter.reset(); // 0<br />\ncounter.reset(); // 0</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;integer&#125; init</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @return &#123; increment: Function, decrement: Function, reset: Function &#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">createCounter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">init</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> init<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">increment</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> counter <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">decrement</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> counter <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">reset</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> counter <span class=\"token operator\">=</span> init<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">&#123;</span>increment<span class=\"token punctuation\">,</span> decrement<span class=\"token punctuation\">,</span> reset<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * const counter = createCounter(5)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * counter.increment(); // 6</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * counter.reset(); // 5</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * counter.decrement(); // 4</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">type</span> <span class=\"token class-name\">ReturnObj</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function-variable function\">increment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function-variable function\">decrement</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">createCounter</span><span class=\"token punctuation\">(</span>init<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ReturnObj <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">let</span> counter<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> init<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">const</span> increment <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=></span> counter <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">const</span> decrement <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=></span> counter <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">const</span> reset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=></span> counter <span class=\"token operator\">=</span> init<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>increment<span class=\"token punctuation\">,</span> decrement<span class=\"token punctuation\">,</span> reset<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * const counter = createCounter(5)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * counter.increment(); // 6</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * counter.reset(); // 5</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * counter.decrement(); // 4</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Hard/1964-Find-the-Longest-Valid-Obstacle-Course-at-Each-Position/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Hard/1964-Find-the-Longest-Valid-Obstacle-Course-at-Each-Position/",
            "title": "1964. Find the Longest Valid Obstacle Course at Each Position",
            "date_published": "2023-05-07T08:40:52.000Z",
            "content_html": "<p>⭐️⭐️⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/find-the-longest-valid-obstacle-course-at-each-position/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You want to build some obstacle courses. You are given a <strong>0-indexed</strong> integer array  <code>obstacles</code>  of length  <code>n</code> , where  <code>obstacles[i]</code>  describes the height of the  <code>ith</code>  obstacle.</p>\n<p>For every index  <code>i</code>  between  <code>0</code>  and  <code>n - 1</code>  (<strong>inclusive</strong>), find the length of the <strong>longest obstacle course</strong> in  <code>obstacles</code>  such that:</p>\n<ul>\n<li>You choose any number of obstacles between  <code>0</code>  and  <code>i</code>  <strong>inclusive</strong>.</li>\n<li>You must include the  <code>ith</code>  obstacle in the course.</li>\n<li>You must put the chosen obstacles in the <strong>same order</strong> as they appear in  <code>obstacles</code> .</li>\n<li>Every obstacle (except the first) is <strong>taller</strong> than or the <strong>same height</strong> as the obstacle immediately before it.</li>\n</ul>\n<p>Return <em>an array  <code>ans</code>  of length  <code>n</code> , where  <code>ans[i]</code>  is the length of the <strong>longest obstacle course</strong> for index  <code>i</code>  as described above</em>.</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong> obstacles = [1,2,3,2]<br />\n<strong>Output:</strong> [1,2,3,3]<br />\n<strong>Explanation:</strong> The longest valid obstacle course at each position is:</p>\n<ul>\n<li>i = 0: [1], [1] has length 1.</li>\n<li>i = 1: [1,2], [1,2] has length 2.</li>\n<li>i = 2: [1,2,3], [1,2,3] has length 3.</li>\n<li>i = 3: [1,2,3,2], [1,2,2] has length 3.</li>\n</ul>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> obstacles = [2,2,1]<br />\n<strong>Output:</strong> [1,2,1]<br />\n<strong>Explanation:</strong> The longest valid obstacle course at each position is:</p>\n<ul>\n<li>i = 0: [2], [2] has length 1.</li>\n<li>i = 1: [2,2], [2,2] has length 2.</li>\n<li>i = 2: [2,2,1], [1] has length 1.</li>\n</ul>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input:</strong> obstacles = [3,1,5,6,4,2]<br />\n<strong>Output:</strong> [1,1,2,3,2,2]<br />\n<strong>Explanation:</strong> The longest valid obstacle course at each position is:</p>\n<ul>\n<li>i = 0: [3], [3] has length 1.</li>\n<li>i = 1: [3,1], [1] has length 1.</li>\n<li>i = 2: [3,1,5], [3,5] has length 2. [1,5] is also valid.</li>\n<li>i = 3: [3,1,5,6], [3,5,6] has length 3. [1,5,6] is also valid.</li>\n<li>i = 4: [3,1,5,6,4], [3,4] has length 2. [1,4] is also valid.</li>\n<li>i = 5: [3,1,5,6,4,2], [1,2] has length 2.</li>\n</ul>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">longestObstacleCourseAtEachPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> obstacles<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> obstacles<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> sub <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> left <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">-</span> left<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> obstacles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    left <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    right <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> left <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">==</span> left<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                length<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            sub<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obstacles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Hard",
                "Leetcode",
                "Array",
                "Binary Search",
                "Binary Indexed Tree"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1498-Number-of-Subsequences-That-Satisfy-the-Given-Sum-Condition/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1498-Number-of-Subsequences-That-Satisfy-the-Given-Sum-Condition/",
            "title": "1498. Number of Subsequences That Satisfy the Given Sum Condition",
            "date_published": "2023-05-06T05:21:16.000Z",
            "content_html": "<p>⭐️⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>You are given an array of integers  <code>nums</code>  and an integer  <code>target</code> .</p>\n<p>Return <em>the number of non-empty subsequences of  <code>nums</code>  such that the sum of the minimum and maximum element on it is less or equal to  <code>target</code> </em>. Since the answer may be too large, return it <strong>modulo</strong>  <code>10^9 + 7</code> .</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [3,5,6,7], target = 9<br />\n<strong>Output:</strong> 4<br />\n<strong>Explanation:</strong> There are 4 subsequences that satisfy the condition.<br />\n[3] -&gt; Min value + max value &lt;= target (3 + 3 &lt;= 9)<br />\n[3,5] -&gt; (3 + 5 &lt;= 9)<br />\n[3,5,6] -&gt; (3 + 6 &lt;= 9)<br />\n[3,6] -&gt; (3 + 6 &lt;= 9)</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [3,3,6,8], target = 10<br />\n<strong>Output:</strong> 6<br />\n<strong>Explanation:</strong> There are 6 subsequences that satisfy the condition. (nums can have repeated numbers).<br />\n[3] , [3] , [3,3], [3,6] , [3,6] , [3,3,6]</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input:</strong> nums = [2,3,3,4,6,7], target = 12<br />\n<strong>Output:</strong> 61<br />\n<strong>Explanation:</strong> There are 63 non-empty subsequences, two of them do not satisfy the condition ([6,7], [7]).<br />\nNumber of valid subsequences (63 - 2 = 61).</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">numSubseq</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> mod <span class=\"token operator\">=</span> <span class=\"token number\">1000000007</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> count <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        count<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            count<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> mod<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ans <span class=\"token operator\">+</span> count<span class=\"token punctuation\">[</span>right <span class=\"token operator\">-</span> left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> mod<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "Array",
                "Sorting",
                "Binary Search",
                "Two Pointers"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2620-Counter/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2620-Counter/",
            "title": "2620. Counter",
            "date_published": "2023-05-06T03:23:28.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/counter/?utm_campaign=PostD2&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=xogkVqBo\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given an integer  <code>n</code> , return a  <code>counter</code>  function. This counter function initially returns  <code>n</code>  and then returns 1 more than the previous value every subsequent time it is called ( <code>n</code> ,  <code>n + 1</code> ,  <code>n + 2</code> , etc).</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong><br />\nn = 10<br />\n[&quot;call&quot;,&quot;call&quot;,&quot;call&quot;]<br />\n<strong>Output:</strong> [10,11,12]<br />\n<strong>Explanation:</strong><br />\ncounter() = 10 // The first time counter() is called, it returns n.<br />\ncounter() = 11 // Returns 1 more than the previous time.<br />\ncounter() = 12 // Returns 1 more than the previous time.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong><br />\nn = -2<br />\n[&quot;call&quot;,&quot;call&quot;,&quot;call&quot;,&quot;call&quot;,&quot;call&quot;]<br />\n<strong>Output:</strong> [-2,-1,0,1,2]<br />\n<strong>Explanation:</strong> counter() initially returns -2. Then increases after each sebsequent call.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @param &#123;number&#125; n</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @return &#123;Function&#125; counter</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">createCounter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        counter <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> counter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/** </pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * const counter = createCounter(10)</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * counter() // 10</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * counter() // 11</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * counter() // 12</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">createCounter</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        counter <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> counter<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/** </pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * const counter = createCounter(10)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * counter() // 10</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * counter() // 11</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * counter() // 12</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1456-Maximum-Number-of-Vowels-in-a-Substring-of-Given-Length/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Medium/1456-Maximum-Number-of-Vowels-in-a-Substring-of-Given-Length/",
            "title": "1456. Maximum Number of Vowels in a Substring of Given Length",
            "date_published": "2023-05-05T02:32:53.000Z",
            "content_html": "<p>⭐️⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Given a string  <code>s</code>  and an integer  <code>k</code> , return <em>the maximum number of vowel letters in any substring of  <code>s</code>  with length  <code>k</code> </em>.</p>\n<p><strong>Vowel letters</strong> in English are  <code>'a'</code> ,  <code>'e'</code> ,  <code>'i'</code> ,  <code>'o'</code> , and  <code>'u'</code> .</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;abciiidef&quot;, k = 3<br />\n<strong>Output:</strong> 3<br />\n<strong>Explanation:</strong> The substring &quot;iii&quot; contains 3 vowel letters.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;aeiou&quot;, k = 2<br />\n<strong>Output:</strong> 2<br />\n<strong>Explanation:</strong> Any substring of length 2 contains 2 vowels.</p>\n</blockquote>\n<h3 id=\"example-3\"><a class=\"anchor\" href=\"#example-3\">#</a> Example 3:</h3>\n<blockquote>\n<p><strong>Input:</strong> s = &quot;leetcode&quot;, k = 3<br />\n<strong>Output:</strong> 2<br />\n<strong>Explanation:</strong> &quot;lee&quot;, &quot;eet&quot; and &quot;ode&quot; contain 2 vowels.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Java\">\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">maxVowels</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">int</span> ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">String</span> temp <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> t <span class=\"token operator\">:</span> temp<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isVowel</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                ans<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">int</span> cur <span class=\"token operator\">=</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> k<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isVowel</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                cur<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isVowel</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                cur<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            ans <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isVowel</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">==</span> <span class=\"token char\">'a'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'e'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'i'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'o'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'u'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"C++\">\n<pre><code class=\"language-cpp\">\n</code></pre>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"Python\">\n<pre><code class=\"language-pyhton\">\n</code></pre>\n</div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Medium",
                "Leetcode",
                "String",
                "Sliding Window"
            ]
        },
        {
            "id": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2667-Create-Hello-World-Function/",
            "url": "https://chenhsingyu-0212.github.io/chenhsingyu-0212.github.io/coding/leetcode/Easy/2667-Create-Hello-World-Function/",
            "title": "2667. Create Hello World Function",
            "date_published": "2023-05-05T01:26:51.000Z",
            "content_html": "<p>⭐️</p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"https://leetcode.com/problems/create-hello-world-function/?utm_campaign=PostD1&amp;utm_medium=Post&amp;utm_source=Post&amp;gio_link_id=QPDw0kJR\"><ins class=\"dot\">題目敘述</ins></a></h2>\n<p>Write a function  <code>createHelloWorld</code> . It should return a new function that always returns  <code>&quot;Hello World&quot;</code> .</p>\n<h3 id=\"example-1\"><a class=\"anchor\" href=\"#example-1\">#</a> Example 1:</h3>\n<blockquote>\n<p><strong>Input:</strong> args = []<br />\n<strong>Output:</strong> &quot;Hello World&quot;<br />\n<strong>Explanation:</strong><br />\nconst f = createHelloWorld();<br />\nf(); // &quot;Hello World&quot;</p>\n<p>The function returned by createHelloWorld should always return &quot;Hello World&quot;.</p>\n</blockquote>\n<h3 id=\"example-2\"><a class=\"anchor\" href=\"#example-2\">#</a> Example 2:</h3>\n<blockquote>\n<p><strong>Input:</strong> args = [{},null,42]<br />\n<strong>Output:</strong> &quot;Hello World&quot;<br />\n<strong>Explanation:</strong><br />\nconst f = createHelloWorld();<br />\nf({}, null, 42); // &quot;Hello World&quot;</p>\n<p>Any arguments could be passed to the function but it should still always return &quot;Hello World&quot;.</p>\n</blockquote>\n<h2 id=\"解題思路\"><a class=\"anchor\" href=\"#解題思路\">#</a> 解題思路</h2>\n<h2 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"JavaScript\">\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @return &#123;Function&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">createHelloWorld</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * const f = createHelloWorld();</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * f(); // \"Hello World\"</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"TypeScript\">\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">createHelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * const f = createHelloWorld();</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * f(); // \"Hello World\"</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> */</span></pre></td></tr></table></figure></div>\n<details class=\"success\"><summary>單字</summary><div>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWN0aW9uYXJ5LmNhbWJyaWRnZS5vcmcvemh0LyVFOCVBOSU5RSVFNSU4NSVCOC8lRTglOEIlQjElRTglQUElOUUv\">** **</span><br />\n!! !!</p>\n<blockquote></blockquote>\n</div></details>\n<details class=\"info\"><summary>片語 & 搭配詞</summary><div>\n<hr />\n<p>!! !!</p>\n</div></details>\n",
            "tags": [
                "解題筆記",
                "Leetcode",
                "Easy",
                "Leetcode",
                "Javascript",
                "Typescript"
            ]
        }
    ]
}